<?xml version = '1.0' encoding = 'utf-8'?>
<!-- $Header: TEMPLATE_XXSC_XXSCHRANA_HSWP_en.xsl 115.0 2016/05/23 09:25:39 xdouser noship $ -->
<!-- dbdrv: none -->

<!--Generated by Oracle BI Publisher 10.1.3.4.2-->
<xsl:stylesheet version="2.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" xmlns:fo="http://www.w3.org/1999/XSL/Format" xmlns:ora="http://www.oracle.com/XSL/Transform/java/" xmlns:xdofo="http://xmlns.oracle.com/oxp/fo/extensions" xmlns:xdoxslt="http://www.oracle.com/XSL/Transform/java/oracle.apps.xdo.template.rtf.XSLTFunctions" xmlns:xdoxliff="urn:oasis:names:tc:xliff:document:1.1" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:OutBoundPayments="http://xmlns.oracle.com/iby/EFTTemplateSample" xmlns:General="http://xmlns.oracle.com/iby" xmlns:Address="http://xmlns.oracle.com/iby/address" xmlns:PaymentsCommon="http://xmlns.oracle.com/iby/PaymentsCommon" xmlns:xdoeft="http://xmlns.oracle.com/iby/xdoeft">
   <xsl:output method="text" encoding="iso-8859-1"/>
   <xsl:param name="_XDOCTX">#</xsl:param>
   <xsl:decimal-format name="_DECIMALFORMAT" grouping-separator="," decimal-separator="."/>
   <xsl:template match="/">
      <!--Startup: Init Record Counters-->
      <xsl:call-template name="_RECORDCOUNTER"/>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'MESSAGE', string(''))"/>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'MESSAGETEMPLATES', string(''))"/>
      <!--Control: ================ Start new level: XXSCHRANA_HSWP=================-->
      <xsl:for-each select=".//XXSCHRANA_HSWP" xdoeft:type="LEVEL" xdoeft:level-name="XXSCHRANA_HSWP">
         <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R1',  string(''))"/>
         <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R1L',  number(0))"/>
         <!--Control: ===== START RECORD: Bank Details1 =====-->
         <!--Render: CONSTANT1-->
         <xsl:call-template name="L1R1P3S0"/>
         <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L1R1', xdoxslt:get_variable($_XDOCTX, 'L1R1P3S0'))"/>
         <!--Render: -->
         <xsl:call-template name="L1R1P1S1"/>
         <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L1R1', xdoxslt:get_variable($_XDOCTX, 'L1R1P1S1'))"/>
         <!--Render: CONSTANT2-->
         <xsl:call-template name="L1R1P14S2"/>
         <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L1R1', xdoxslt:get_variable($_XDOCTX, 'L1R1P14S2'))"/>
         <!--Render: -->
         <xsl:call-template name="L1R1P1S3"/>
         <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L1R1', xdoxslt:get_variable($_XDOCTX, 'L1R1P1S3'))"/>
         <!--Render: CONSTANT3-->
         <xsl:call-template name="L1R1P9S4"/>
         <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L1R1', xdoxslt:get_variable($_XDOCTX, 'L1R1P9S4'))"/>
         <!--Render: -->
         <xsl:call-template name="L1R1P1S5"/>
         <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L1R1', xdoxslt:get_variable($_XDOCTX, 'L1R1P1S5'))"/>
         <!--Render: HSBC CONNECT CUSTOMER ID-->
         <xsl:call-template name="L1R1P23S6"/>
         <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L1R1', xdoxslt:get_variable($_XDOCTX, 'L1R1P23S6'))"/>
         <!--Render: -->
         <xsl:call-template name="L1R1P1S7"/>
         <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L1R1', xdoxslt:get_variable($_XDOCTX, 'L1R1P1S7'))"/>
         <!--Render: HSBC NET CUSTOMER ID-->
         <xsl:call-template name="L1R1P23S8"/>
         <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L1R1', xdoxslt:get_variable($_XDOCTX, 'L1R1P23S8'))"/>
         <!--Render: -->
         <xsl:call-template name="L1R1P1S9"/>
         <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L1R1', xdoxslt:get_variable($_XDOCTX, 'L1R1P1S9'))"/>
         <!--Render: FILE REFERENCE-->
         <xsl:call-template name="L1R1P40S10"/>
         <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L1R1', xdoxslt:get_variable($_XDOCTX, 'L1R1P40S10'))"/>
         <!--Render: -->
         <xsl:call-template name="L1R1P1S11"/>
         <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L1R1', xdoxslt:get_variable($_XDOCTX, 'L1R1P1S11'))"/>
         <!--Render: FILE CREATION DATE-->
         <xsl:call-template name="L1R1P10S12"/>
         <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L1R1', xdoxslt:get_variable($_XDOCTX, 'L1R1P10S12'))"/>
         <!--Render: -->
         <xsl:call-template name="L1R1P1S13"/>
         <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L1R1', xdoxslt:get_variable($_XDOCTX, 'L1R1P1S13'))"/>
         <!--Render: FILE CREATION TIME-->
         <xsl:call-template name="L1R1P10S14"/>
         <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L1R1', xdoxslt:get_variable($_XDOCTX, 'L1R1P10S14'))"/>
         <!--Render: -->
         <xsl:call-template name="L1R1P1S15"/>
         <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L1R1', xdoxslt:get_variable($_XDOCTX, 'L1R1P1S15'))"/>
         <!--Render: AUTHORIZATION TYPE-->
         <xsl:call-template name="L1R1P15S16"/>
         <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L1R1', xdoxslt:get_variable($_XDOCTX, 'L1R1P15S16'))"/>
         <!--Render: -->
         <xsl:call-template name="L1R1P1S17"/>
         <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L1R1', xdoxslt:get_variable($_XDOCTX, 'L1R1P1S17'))"/>
         <!--Render: FILE VERSION-->
         <xsl:call-template name="L1R1P4S18"/>
         <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L1R1', xdoxslt:get_variable($_XDOCTX, 'L1R1P4S18'))"/>
         <!--Render: -->
         <xsl:call-template name="L1R1P1S19"/>
         <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L1R1', xdoxslt:get_variable($_XDOCTX, 'L1R1P1S19'))"/>
         <!--Render: RECORD COUNT-->
         <xsl:call-template name="L1R1P4S20"/>
         <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L1R1', xdoxslt:get_variable($_XDOCTX, 'L1R1P4S20'))"/>
         <xsl:value-of select="xdoxslt:get_variable($_XDOCTX, 'L1R1')"/>
         <!--Control: ===== END RECORD: Bank Details1 =====-->
         <!--Control: ===== Record Break =====-->
         <xsl:call-template name="_RECORDBREAK"/>
         <!--Control: Increase record counter: Bank Details1-->
         <xsl:value-of select="xdoxslt:next_sequence_number($_XDOCTX, 'Bank Details1_RC')"/>
         <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R2',  string(''))"/>
         <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R2L',  number(0))"/>
         <!--Control: ===== START RECORD: Bank Details2 =====-->
         <!--Render: -->
         <xsl:call-template name="L1R2P6S21"/>
         <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L1R2', xdoxslt:get_variable($_XDOCTX, 'L1R2P6S21'))"/>
         <!--Render: -->
         <xsl:call-template name="L1R2P1S22"/>
         <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L1R2', xdoxslt:get_variable($_XDOCTX, 'L1R2P1S22'))"/>
         <!--Render: INSTRUCTION TYPE-->
         <xsl:call-template name="L1R2P13S23"/>
         <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L1R2', xdoxslt:get_variable($_XDOCTX, 'L1R2P13S23'))"/>
         <!--Render: -->
         <xsl:call-template name="L1R2P1S24"/>
         <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L1R2', xdoxslt:get_variable($_XDOCTX, 'L1R2P1S24'))"/>
         <!--Render: TOTAL NO OF INSTRUCTIONS IN BATCH-->
         <xsl:call-template name="L1R2P9S25"/>
         <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L1R2', xdoxslt:get_variable($_XDOCTX, 'L1R2P9S25'))"/>
         <!--Render: -->
         <xsl:call-template name="L1R2P1S26"/>
         <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L1R2', xdoxslt:get_variable($_XDOCTX, 'L1R2P1S26'))"/>
         <!--Render: BATCH REFERENCE-->
         <xsl:call-template name="L1R2P10S27"/>
         <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L1R2', xdoxslt:get_variable($_XDOCTX, 'L1R2P10S27'))"/>
         <!--Render: -->
         <xsl:call-template name="L1R2P1S28"/>
         <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L1R2', xdoxslt:get_variable($_XDOCTX, 'L1R2P1S28'))"/>
         <!--Render: FILTER-->
         <xsl:call-template name="L1R2P15S29"/>
         <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L1R2', xdoxslt:get_variable($_XDOCTX, 'L1R2P15S29'))"/>
         <!--Render: -->
         <xsl:call-template name="L1R2P1S30"/>
         <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L1R2', xdoxslt:get_variable($_XDOCTX, 'L1R2P1S30'))"/>
         <!--Render: FILTER-->
         <xsl:call-template name="L1R2P6S31"/>
         <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L1R2', xdoxslt:get_variable($_XDOCTX, 'L1R2P6S31'))"/>
         <!--Render: -->
         <xsl:call-template name="L1R2P1S32"/>
         <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L1R2', xdoxslt:get_variable($_XDOCTX, 'L1R2P1S32'))"/>
         <!--Render: PAYMENT PURPOSE CODE-->
         <xsl:call-template name="L1R2P10S33"/>
         <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L1R2', xdoxslt:get_variable($_XDOCTX, 'L1R2P10S33'))"/>
         <!--Render: -->
         <xsl:call-template name="L1R2P1S34"/>
         <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L1R2', xdoxslt:get_variable($_XDOCTX, 'L1R2P1S34'))"/>
         <!--Render: DEBTOR PAYMENT NARRATION-->
         <xsl:call-template name="L1R2P15S35"/>
         <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L1R2', xdoxslt:get_variable($_XDOCTX, 'L1R2P15S35'))"/>
         <!--Render: -->
         <xsl:call-template name="L1R2P1S36"/>
         <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L1R2', xdoxslt:get_variable($_XDOCTX, 'L1R2P1S36'))"/>
         <!--Render: FILTER-->
         <xsl:call-template name="L1R2P3S37"/>
         <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L1R2', xdoxslt:get_variable($_XDOCTX, 'L1R2P3S37'))"/>
         <!--Render: -->
         <xsl:call-template name="L1R2P1S38"/>
         <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L1R2', xdoxslt:get_variable($_XDOCTX, 'L1R2P1S38'))"/>
         <!--Render: CONSTANT EYE CATCHER-->
         <xsl:call-template name="L1R2P35S39"/>
         <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L1R2', xdoxslt:get_variable($_XDOCTX, 'L1R2P35S39'))"/>
         <!--Render: -->
         <xsl:call-template name="L1R2P1S40"/>
         <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L1R2', xdoxslt:get_variable($_XDOCTX, 'L1R2P1S40'))"/>
         <!--Render: VALUE DATE-->
         <xsl:call-template name="L1R2P8S41"/>
         <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L1R2', xdoxslt:get_variable($_XDOCTX, 'L1R2P8S41'))"/>
         <!--Render: -->
         <xsl:call-template name="L1R2P1S42"/>
         <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L1R2', xdoxslt:get_variable($_XDOCTX, 'L1R2P1S42'))"/>
         <!--Render: FIRST PARTY ACCOUNT-->
         <xsl:call-template name="L1R2P15S43"/>
         <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L1R2', xdoxslt:get_variable($_XDOCTX, 'L1R2P15S43'))"/>
         <!--Render: -->
         <xsl:call-template name="L1R2P1S44"/>
         <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L1R2', xdoxslt:get_variable($_XDOCTX, 'L1R2P1S44'))"/>
         <!--Render: TRANSACTION CURRENCY-->
         <xsl:call-template name="L1R2P3S45"/>
         <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L1R2', xdoxslt:get_variable($_XDOCTX, 'L1R2P3S45'))"/>
         <!--Render: -->
         <xsl:call-template name="L1R2P1S46"/>
         <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L1R2', xdoxslt:get_variable($_XDOCTX, 'L1R2P1S46'))"/>
         <!--Render: TRANSACTION AMOUNT-->
         <xsl:call-template name="L1R2P15S47"/>
         <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L1R2', xdoxslt:get_variable($_XDOCTX, 'L1R2P15S47'))"/>
         <!--Render: -->
         <xsl:call-template name="L1R2P1S48"/>
         <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L1R2', xdoxslt:get_variable($_XDOCTX, 'L1R2P1S48'))"/>
         <!--Render: TEMPLATE MODE-->
         <xsl:call-template name="L1R2P5S49"/>
         <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L1R2', xdoxslt:get_variable($_XDOCTX, 'L1R2P5S49'))"/>
         <!--Render: -->
         <xsl:call-template name="L1R2P1S50"/>
         <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L1R2', xdoxslt:get_variable($_XDOCTX, 'L1R2P1S50'))"/>
         <!--Render: BATCH TEMPLATE ID-->
         <xsl:call-template name="L1R2P5S51"/>
         <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L1R2', xdoxslt:get_variable($_XDOCTX, 'L1R2P5S51'))"/>
         <!--Render: -->
         <xsl:call-template name="L1R2P1S52"/>
         <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L1R2', xdoxslt:get_variable($_XDOCTX, 'L1R2P1S52'))"/>
         <!--Render: FIRST PARTY ACCOUNT COUNTRY-->
         <xsl:call-template name="L1R2P2S53"/>
         <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L1R2', xdoxslt:get_variable($_XDOCTX, 'L1R2P2S53'))"/>
         <!--Render: -->
         <xsl:call-template name="L1R2P1S54"/>
         <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L1R2', xdoxslt:get_variable($_XDOCTX, 'L1R2P1S54'))"/>
         <!--Render: FIRST PARTY ACCOUNT INSTITUTION-->
         <xsl:call-template name="L1R2P4S55"/>
         <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L1R2', xdoxslt:get_variable($_XDOCTX, 'L1R2P4S55'))"/>
         <!--Render: -->
         <xsl:call-template name="L1R2P1S56"/>
         <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L1R2', xdoxslt:get_variable($_XDOCTX, 'L1R2P1S56'))"/>
         <!--Render: FIRST PARTY ACCOUNT CURRENCY-->
         <xsl:call-template name="L1R2P3S57"/>
         <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L1R2', xdoxslt:get_variable($_XDOCTX, 'L1R2P3S57'))"/>
         <!--Render: -->
         <xsl:call-template name="L1R2P1S58"/>
         <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L1R2', xdoxslt:get_variable($_XDOCTX, 'L1R2P1S58'))"/>
         <!--Render: PAYMENT AMOUNT IN DEBIT ACCOUNT CURRENCY-->
         <xsl:call-template name="L1R2P5S59"/>
         <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L1R2', xdoxslt:get_variable($_XDOCTX, 'L1R2P5S59'))"/>
         <!--Render: -->
         <xsl:call-template name="L1R2P1S60"/>
         <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L1R2', xdoxslt:get_variable($_XDOCTX, 'L1R2P1S60'))"/>
         <!--Render: FIRST PARTY NAME-->
         <xsl:call-template name="L1R2P40S61"/>
         <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L1R2', xdoxslt:get_variable($_XDOCTX, 'L1R2P40S61'))"/>
         <!--Render: -->
         <xsl:call-template name="L1R2P1S62"/>
         <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L1R2', xdoxslt:get_variable($_XDOCTX, 'L1R2P1S62'))"/>
         <!--Render: FIRST PARTY INFORMATION LINE 1-->
         <xsl:call-template name="L1R2P5S63"/>
         <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L1R2', xdoxslt:get_variable($_XDOCTX, 'L1R2P5S63'))"/>
         <!--Render: -->
         <xsl:call-template name="L1R2P1S64"/>
         <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L1R2', xdoxslt:get_variable($_XDOCTX, 'L1R2P1S64'))"/>
         <!--Render: FIRST PARTY INFORMATION LINE 2-->
         <xsl:call-template name="L1R2P5S65"/>
         <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L1R2', xdoxslt:get_variable($_XDOCTX, 'L1R2P5S65'))"/>
         <!--Render: -->
         <xsl:call-template name="L1R2P1S66"/>
         <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L1R2', xdoxslt:get_variable($_XDOCTX, 'L1R2P1S66'))"/>
         <!--Render: FIRST PARTY INFORMATION LINE 3-->
         <xsl:call-template name="L1R2P5S67"/>
         <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L1R2', xdoxslt:get_variable($_XDOCTX, 'L1R2P5S67'))"/>
         <!--Render: -->
         <xsl:call-template name="L1R2P1S68"/>
         <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L1R2', xdoxslt:get_variable($_XDOCTX, 'L1R2P1S68'))"/>
         <!--Render: FIRST PARTY INFORMATION LINE 4-->
         <xsl:call-template name="L1R2P5S69"/>
         <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L1R2', xdoxslt:get_variable($_XDOCTX, 'L1R2P5S69'))"/>
         <!--Render: -->
         <xsl:call-template name="L1R2P1S70"/>
         <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L1R2', xdoxslt:get_variable($_XDOCTX, 'L1R2P1S70'))"/>
         <!--Render: PAYMENT CODE-->
         <xsl:call-template name="L1R2P3S71"/>
         <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L1R2', xdoxslt:get_variable($_XDOCTX, 'L1R2P3S71'))"/>
         <!--Render: -->
         <xsl:call-template name="L1R2P1S72"/>
         <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L1R2', xdoxslt:get_variable($_XDOCTX, 'L1R2P1S72'))"/>
         <!--Render: REFERENCE LINE 1-->
         <xsl:call-template name="L1R2P15S73"/>
         <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L1R2', xdoxslt:get_variable($_XDOCTX, 'L1R2P15S73'))"/>
         <xsl:value-of select="xdoxslt:get_variable($_XDOCTX, 'L1R2')"/>
         <!--Control: ===== END RECORD: Bank Details2 =====-->
         <!--Control: ===== Record Break =====-->
         <xsl:call-template name="_RECORDBREAK"/>
         <!--Control: Increase record counter: Bank Details2-->
         <xsl:value-of select="xdoxslt:next_sequence_number($_XDOCTX, 'Bank Details2_RC')"/>
      </xsl:for-each>
      <!--Control: ================ Start new level: G_ROWNUM=================-->
      <xsl:for-each select=".//G_ROWNUM" xdoeft:type="LEVEL" xdoeft:level-name="G_ROWNUM">
         <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R3',  string(''))"/>
         <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R3L',  number(0))"/>
         <!--Control: ===== START RECORD: Bank Details3 =====-->
         <!--Render: RECORD TYPE-->
         <xsl:call-template name="L1R3P6S74"/>
         <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L1R3', xdoxslt:get_variable($_XDOCTX, 'L1R3P6S74'))"/>
         <!--Render: -->
         <xsl:call-template name="L1R3P1S75"/>
         <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L1R3', xdoxslt:get_variable($_XDOCTX, 'L1R3P1S75'))"/>
         <!--Render: SECOND PARTY ACCOUNT NUMBER-->
         <xsl:call-template name="L1R3P23S76"/>
         <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L1R3', xdoxslt:get_variable($_XDOCTX, 'L1R3P23S76'))"/>
         <!--Render: -->
         <xsl:call-template name="L1R3P1S77"/>
         <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L1R3', xdoxslt:get_variable($_XDOCTX, 'L1R3P1S77'))"/>
         <!--Render: SECOND PARTY NAME-->
         <xsl:call-template name="L1R3P60S78"/>
         <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L1R3', xdoxslt:get_variable($_XDOCTX, 'L1R3P60S78'))"/>
         <!--Render: -->
         <xsl:call-template name="L1R3P1S79"/>
         <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L1R3', xdoxslt:get_variable($_XDOCTX, 'L1R3P1S79'))"/>
         <!--Render: SECOND PARTY NUMBER-->
         <xsl:call-template name="L1R3P8S80"/>
         <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L1R3', xdoxslt:get_variable($_XDOCTX, 'L1R3P8S80'))"/>
         <!--Render: -->
         <xsl:call-template name="L1R3P1S81"/>
         <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L1R3', xdoxslt:get_variable($_XDOCTX, 'L1R3P1S81'))"/>
         <!--Render: BENEFICIARY BANK ID-->
         <xsl:call-template name="L1R3P20S82"/>
         <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L1R3', xdoxslt:get_variable($_XDOCTX, 'L1R3P20S82'))"/>
         <!--Render: -->
         <xsl:call-template name="L1R3P1S83"/>
         <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L1R3', xdoxslt:get_variable($_XDOCTX, 'L1R3P1S83'))"/>
         <!--Render: BENEFICIARY BRANCH NUMBER-->
         <xsl:call-template name="L1R3P5S84"/>
         <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L1R3', xdoxslt:get_variable($_XDOCTX, 'L1R3P5S84'))"/>
         <!--Render: -->
         <xsl:call-template name="L1R3P1S85"/>
         <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L1R3', xdoxslt:get_variable($_XDOCTX, 'L1R3P1S85'))"/>
         <!--Render: TRANSACTION CODE-->
         <xsl:call-template name="L1R3P5S86"/>
         <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L1R3', xdoxslt:get_variable($_XDOCTX, 'L1R3P5S86'))"/>
         <!--Render: -->
         <xsl:call-template name="L1R3P1S87"/>
         <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L1R3', xdoxslt:get_variable($_XDOCTX, 'L1R3P1S87'))"/>
         <!--Render: SECOND PARTY TRANSACTION AMOUNT-->
         <xsl:call-template name="L1R3P15S88"/>
         <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L1R3', xdoxslt:get_variable($_XDOCTX, 'L1R3P15S88'))"/>
         <!--Render: -->
         <xsl:call-template name="L1R3P1S89"/>
         <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L1R3', xdoxslt:get_variable($_XDOCTX, 'L1R3P1S89'))"/>
         <!--Render: ENTRY VALUE DATE-->
         <xsl:call-template name="L1R3P5S90"/>
         <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L1R3', xdoxslt:get_variable($_XDOCTX, 'L1R3P5S90'))"/>
         <!--Render: -->
         <xsl:call-template name="L1R3P1S91"/>
         <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L1R3', xdoxslt:get_variable($_XDOCTX, 'L1R3P1S91'))"/>
         <!--Render: SECOND PARTY REFERENCE-->
         <xsl:call-template name="L1R3P20S92"/>
         <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L1R3', xdoxslt:get_variable($_XDOCTX, 'L1R3P20S92'))"/>
         <!--Render: -->
         <xsl:call-template name="L1R3P1S93"/>
         <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L1R3', xdoxslt:get_variable($_XDOCTX, 'L1R3P1S93'))"/>
         <!--Render: INFORMATION LINE 1-->
         <xsl:call-template name="L1R3P5S94"/>
         <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L1R3', xdoxslt:get_variable($_XDOCTX, 'L1R3P5S94'))"/>
         <!--Render: -->
         <xsl:call-template name="L1R3P1S95"/>
         <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L1R3', xdoxslt:get_variable($_XDOCTX, 'L1R3P1S95'))"/>
         <!--Render: INFORMATION LINE 2-->
         <xsl:call-template name="L1R3P5S96"/>
         <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L1R3', xdoxslt:get_variable($_XDOCTX, 'L1R3P5S96'))"/>
         <!--Render: -->
         <xsl:call-template name="L1R3P1S97"/>
         <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L1R3', xdoxslt:get_variable($_XDOCTX, 'L1R3P1S97'))"/>
         <!--Render: INFORMATION LINE 3-->
         <xsl:call-template name="L1R3P5S98"/>
         <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L1R3', xdoxslt:get_variable($_XDOCTX, 'L1R3P5S98'))"/>
         <!--Render: -->
         <xsl:call-template name="L1R3P1S99"/>
         <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L1R3', xdoxslt:get_variable($_XDOCTX, 'L1R3P1S99'))"/>
         <!--Render: INFORMATION LINE 4-->
         <xsl:call-template name="L1R3P5S100"/>
         <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L1R3', xdoxslt:get_variable($_XDOCTX, 'L1R3P5S100'))"/>
         <!--Render: -->
         <xsl:call-template name="L1R3P1S101"/>
         <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L1R3', xdoxslt:get_variable($_XDOCTX, 'L1R3P1S101'))"/>
         <!--Render: ADVICE INDICATOR-->
         <xsl:call-template name="L1R3P1S102"/>
         <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L1R3', xdoxslt:get_variable($_XDOCTX, 'L1R3P1S102'))"/>
         <!--Render: -->
         <xsl:call-template name="L1R3P1S103"/>
         <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L1R3', xdoxslt:get_variable($_XDOCTX, 'L1R3P1S103'))"/>
         <!--Render: WHT INDICATOR-->
         <xsl:call-template name="L1R3P1S104"/>
         <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L1R3', xdoxslt:get_variable($_XDOCTX, 'L1R3P1S104'))"/>
         <!--Render: -->
         <xsl:call-template name="L1R3P1S105"/>
         <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L1R3', xdoxslt:get_variable($_XDOCTX, 'L1R3P1S105'))"/>
         <!--Render: Filler-->
         <xsl:call-template name="L1R3P5S106"/>
         <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L1R3', xdoxslt:get_variable($_XDOCTX, 'L1R3P5S106'))"/>
         <!--Render: -->
         <xsl:call-template name="L1R3P1S107"/>
         <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L1R3', xdoxslt:get_variable($_XDOCTX, 'L1R3P1S107'))"/>
         <!--Render: Filler-->
         <xsl:call-template name="L1R3P5S108"/>
         <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L1R3', xdoxslt:get_variable($_XDOCTX, 'L1R3P5S108'))"/>
         <!--Render: -->
         <xsl:call-template name="L1R3P1S109"/>
         <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L1R3', xdoxslt:get_variable($_XDOCTX, 'L1R3P1S109'))"/>
         <!--Render: Filler-->
         <xsl:call-template name="L1R3P5S110"/>
         <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L1R3', xdoxslt:get_variable($_XDOCTX, 'L1R3P5S110'))"/>
         <!--Render: -->
         <xsl:call-template name="L1R3P1S111"/>
         <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L1R3', xdoxslt:get_variable($_XDOCTX, 'L1R3P1S111'))"/>
         <!--Render: Filler-->
         <xsl:call-template name="L1R3P5S112"/>
         <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L1R3', xdoxslt:get_variable($_XDOCTX, 'L1R3P5S112'))"/>
         <!--Render: -->
         <xsl:call-template name="L1R3P1S113"/>
         <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L1R3', xdoxslt:get_variable($_XDOCTX, 'L1R3P1S113'))"/>
         <!--Render: Filler-->
         <xsl:call-template name="L1R3P5S114"/>
         <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L1R3', xdoxslt:get_variable($_XDOCTX, 'L1R3P5S114'))"/>
         <!--Render: -->
         <xsl:call-template name="L1R3P1S115"/>
         <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L1R3', xdoxslt:get_variable($_XDOCTX, 'L1R3P1S115'))"/>
         <!--Render: Constant Eye
Catcher-->
         <xsl:call-template name="L1R3P5S116"/>
         <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L1R3', xdoxslt:get_variable($_XDOCTX, 'L1R3P5S116'))"/>
         <!--Render: -->
         <xsl:call-template name="L1R3P1S117"/>
         <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L1R3', xdoxslt:get_variable($_XDOCTX, 'L1R3P1S117'))"/>
         <!--Render: First Party
Reference-->
         <xsl:call-template name="L1R3P5S118"/>
         <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L1R3', xdoxslt:get_variable($_XDOCTX, 'L1R3P5S118'))"/>
         <!--Render: -->
         <xsl:call-template name="L1R3P1S119"/>
         <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L1R3', xdoxslt:get_variable($_XDOCTX, 'L1R3P1S119'))"/>
         <!--Render: Payment
Currency-->
         <xsl:call-template name="L1R3P5S120"/>
         <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L1R3', xdoxslt:get_variable($_XDOCTX, 'L1R3P5S120'))"/>
         <!--Render: -->
         <xsl:call-template name="L1R3P1S121"/>
         <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L1R3', xdoxslt:get_variable($_XDOCTX, 'L1R3P1S121'))"/>
         <!--Render: Template ID-->
         <xsl:call-template name="L1R3P5S122"/>
         <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L1R3', xdoxslt:get_variable($_XDOCTX, 'L1R3P5S122'))"/>
         <!--Render: -->
         <xsl:call-template name="L1R3P1S123"/>
         <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L1R3', xdoxslt:get_variable($_XDOCTX, 'L1R3P1S123'))"/>
         <!--Render: Exchange
Rate-->
         <xsl:call-template name="L1R3P5S124"/>
         <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L1R3', xdoxslt:get_variable($_XDOCTX, 'L1R3P5S124'))"/>
         <!--Render: -->
         <xsl:call-template name="L1R3P1S125"/>
         <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L1R3', xdoxslt:get_variable($_XDOCTX, 'L1R3P1S125'))"/>
         <!--Render: Intermediary
Institution
Bank ID/
SWIFT
Address
Code-->
         <xsl:call-template name="L1R3P5S126"/>
         <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L1R3', xdoxslt:get_variable($_XDOCTX, 'L1R3P5S126'))"/>
         <!--Render: -->
         <xsl:call-template name="L1R3P1S127"/>
         <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L1R3', xdoxslt:get_variable($_XDOCTX, 'L1R3P1S127'))"/>
         <!--Render: Intermediary
Institution
Bank Name-->
         <xsl:call-template name="L1R3P5S128"/>
         <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L1R3', xdoxslt:get_variable($_XDOCTX, 'L1R3P5S128'))"/>
         <!--Render: -->
         <xsl:call-template name="L1R3P1S129"/>
         <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L1R3', xdoxslt:get_variable($_XDOCTX, 'L1R3P1S129'))"/>
         <!--Render: Intermediary
Institution
Bank Address
Line 1-->
         <xsl:call-template name="L1R3P5S130"/>
         <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L1R3', xdoxslt:get_variable($_XDOCTX, 'L1R3P5S130'))"/>
         <!--Render: -->
         <xsl:call-template name="L1R3P1S131"/>
         <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L1R3', xdoxslt:get_variable($_XDOCTX, 'L1R3P1S131'))"/>
         <!--Render: Intermediary
Institution
Bank Address
Line 2-->
         <xsl:call-template name="L1R3P5S132"/>
         <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L1R3', xdoxslt:get_variable($_XDOCTX, 'L1R3P5S132'))"/>
         <!--Render: -->
         <xsl:call-template name="L1R3P1S133"/>
         <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L1R3', xdoxslt:get_variable($_XDOCTX, 'L1R3P1S133'))"/>
         <!--Render: Intermediary
Institution
Bank Address
Line 3-->
         <xsl:call-template name="L1R3P5S134"/>
         <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L1R3', xdoxslt:get_variable($_XDOCTX, 'L1R3P5S134'))"/>
         <!--Render: -->
         <xsl:call-template name="L1R3P1S135"/>
         <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L1R3', xdoxslt:get_variable($_XDOCTX, 'L1R3P1S135'))"/>
         <!--Render: Intermediary
Institution
Bank Address
Line 4-->
         <xsl:call-template name="L1R3P5S136"/>
         <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L1R3', xdoxslt:get_variable($_XDOCTX, 'L1R3P5S136'))"/>
         <!--Render: -->
         <xsl:call-template name="L1R3P1S137"/>
         <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L1R3', xdoxslt:get_variable($_XDOCTX, 'L1R3P1S137'))"/>
         <!--Render: Intermediary
Institution
Bank ID/
SWIFT
Address-->
         <xsl:call-template name="L1R3P5S138"/>
         <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L1R3', xdoxslt:get_variable($_XDOCTX, 'L1R3P5S138'))"/>
         <!--Render: -->
         <xsl:call-template name="L1R3P1S139"/>
         <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L1R3', xdoxslt:get_variable($_XDOCTX, 'L1R3P1S139'))"/>
         <!--Render: Intermediary
Institution
Account
Number-->
         <xsl:call-template name="L1R3P5S140"/>
         <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L1R3', xdoxslt:get_variable($_XDOCTX, 'L1R3P5S140'))"/>
         <!--Render: -->
         <xsl:call-template name="L1R3P1S141"/>
         <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L1R3', xdoxslt:get_variable($_XDOCTX, 'L1R3P1S141'))"/>
         <!--Render: Beneficiary
Bank ID/
SWIFT
Address
Code-->
         <xsl:call-template name="L1R3P5S142"/>
         <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L1R3', xdoxslt:get_variable($_XDOCTX, 'L1R3P5S142'))"/>
         <!--Render: -->
         <xsl:call-template name="L1R3P1S143"/>
         <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L1R3', xdoxslt:get_variable($_XDOCTX, 'L1R3P1S143'))"/>
         <!--Render: Beneficiary
Bank ID/
SWIFT
Address-->
         <xsl:call-template name="L1R3P5S144"/>
         <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L1R3', xdoxslt:get_variable($_XDOCTX, 'L1R3P5S144'))"/>
         <!--Render: -->
         <xsl:call-template name="L1R3P1S145"/>
         <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L1R3', xdoxslt:get_variable($_XDOCTX, 'L1R3P1S145'))"/>
         <!--Render: Beneficiary
Bank Name-->
         <xsl:call-template name="L1R3P5S146"/>
         <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L1R3', xdoxslt:get_variable($_XDOCTX, 'L1R3P5S146'))"/>
         <!--Render: -->
         <xsl:call-template name="L1R3P1S147"/>
         <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L1R3', xdoxslt:get_variable($_XDOCTX, 'L1R3P1S147'))"/>
         <!--Render: Beneficiary
Bank Address
Line 1-->
         <xsl:call-template name="L1R3P5S148"/>
         <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L1R3', xdoxslt:get_variable($_XDOCTX, 'L1R3P5S148'))"/>
         <!--Render: -->
         <xsl:call-template name="L1R3P1S149"/>
         <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L1R3', xdoxslt:get_variable($_XDOCTX, 'L1R3P1S149'))"/>
         <!--Render: Beneficiary
Bank Address
Line 2-->
         <xsl:call-template name="L1R3P5S150"/>
         <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L1R3', xdoxslt:get_variable($_XDOCTX, 'L1R3P5S150'))"/>
         <!--Render: -->
         <xsl:call-template name="L1R3P1S151"/>
         <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L1R3', xdoxslt:get_variable($_XDOCTX, 'L1R3P1S151'))"/>
         <!--Render: Beneficiary
Bank Address
Line 3-->
         <xsl:call-template name="L1R3P5S152"/>
         <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L1R3', xdoxslt:get_variable($_XDOCTX, 'L1R3P5S152'))"/>
         <!--Render: -->
         <xsl:call-template name="L1R3P1S153"/>
         <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L1R3', xdoxslt:get_variable($_XDOCTX, 'L1R3P1S153'))"/>
         <!--Render: Beneficiary
Bank Address
Line 4-->
         <xsl:call-template name="L1R3P5S154"/>
         <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L1R3', xdoxslt:get_variable($_XDOCTX, 'L1R3P5S154'))"/>
         <!--Render: -->
         <xsl:call-template name="L1R3P1S155"/>
         <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L1R3', xdoxslt:get_variable($_XDOCTX, 'L1R3P1S155'))"/>
         <!--Render: Beneficiary
Bank Country-->
         <xsl:call-template name="L1R3P5S156"/>
         <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L1R3', xdoxslt:get_variable($_XDOCTX, 'L1R3P5S156'))"/>
         <!--Render: -->
         <xsl:call-template name="L1R3P1S157"/>
         <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L1R3', xdoxslt:get_variable($_XDOCTX, 'L1R3P1S157'))"/>
         <!--Render: Beneficiary
CHIPS UID-->
         <xsl:call-template name="L1R3P5S158"/>
         <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L1R3', xdoxslt:get_variable($_XDOCTX, 'L1R3P5S158'))"/>
         <!--Render: -->
         <xsl:call-template name="L1R3P1S159"/>
         <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L1R3', xdoxslt:get_variable($_XDOCTX, 'L1R3P1S159'))"/>
         <!--Render: Payment
Details Line 1-->
         <xsl:call-template name="L1R3P5S160"/>
         <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L1R3', xdoxslt:get_variable($_XDOCTX, 'L1R3P5S160'))"/>
         <!--Render: -->
         <xsl:call-template name="L1R3P1S161"/>
         <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L1R3', xdoxslt:get_variable($_XDOCTX, 'L1R3P1S161'))"/>
         <!--Render: Payment
Details Line 2-->
         <xsl:call-template name="L1R3P5S162"/>
         <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L1R3', xdoxslt:get_variable($_XDOCTX, 'L1R3P5S162'))"/>
         <!--Render: -->
         <xsl:call-template name="L1R3P1S163"/>
         <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L1R3', xdoxslt:get_variable($_XDOCTX, 'L1R3P1S163'))"/>
         <!--Render: Payment
Details Line 3-->
         <xsl:call-template name="L1R3P5S164"/>
         <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L1R3', xdoxslt:get_variable($_XDOCTX, 'L1R3P5S164'))"/>
         <!--Render: -->
         <xsl:call-template name="L1R3P1S165"/>
         <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L1R3', xdoxslt:get_variable($_XDOCTX, 'L1R3P1S165'))"/>
         <!--Render: Payment
Details Line 4-->
         <xsl:call-template name="L1R3P5S166"/>
         <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L1R3', xdoxslt:get_variable($_XDOCTX, 'L1R3P5S166'))"/>
         <!--Render: -->
         <xsl:call-template name="L1R3P1S167"/>
         <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L1R3', xdoxslt:get_variable($_XDOCTX, 'L1R3P1S167'))"/>
         <!--Render: Details of
Charges-->
         <xsl:call-template name="L1R3P5S168"/>
         <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L1R3', xdoxslt:get_variable($_XDOCTX, 'L1R3P5S168'))"/>
         <!--Render: -->
         <xsl:call-template name="L1R3P1S169"/>
         <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L1R3', xdoxslt:get_variable($_XDOCTX, 'L1R3P1S169'))"/>
         <!--Render: Sender
Charges-->
         <xsl:call-template name="L1R3P5S170"/>
         <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L1R3', xdoxslt:get_variable($_XDOCTX, 'L1R3P5S170'))"/>
         <!--Render: -->
         <xsl:call-template name="L1R3P1S171"/>
         <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L1R3', xdoxslt:get_variable($_XDOCTX, 'L1R3P1S171'))"/>
         <!--Render: Charges
Account-->
         <xsl:call-template name="L1R3P5S172"/>
         <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L1R3', xdoxslt:get_variable($_XDOCTX, 'L1R3P5S172'))"/>
         <!--Render: -->
         <xsl:call-template name="L1R3P1S173"/>
         <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L1R3', xdoxslt:get_variable($_XDOCTX, 'L1R3P1S173'))"/>
         <!--Render: Instruction
Code Line 1-->
         <xsl:call-template name="L1R3P5S174"/>
         <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L1R3', xdoxslt:get_variable($_XDOCTX, 'L1R3P5S174'))"/>
         <!--Render: -->
         <xsl:call-template name="L1R3P1S175"/>
         <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L1R3', xdoxslt:get_variable($_XDOCTX, 'L1R3P1S175'))"/>
         <!--Render: Instruction
Code Line 2-->
         <xsl:call-template name="L1R3P5S176"/>
         <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L1R3', xdoxslt:get_variable($_XDOCTX, 'L1R3P5S176'))"/>
         <!--Render: -->
         <xsl:call-template name="L1R3P1S177"/>
         <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L1R3', xdoxslt:get_variable($_XDOCTX, 'L1R3P1S177'))"/>
         <!--Render: Instruction
Code Line 3-->
         <xsl:call-template name="L1R3P5S178"/>
         <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L1R3', xdoxslt:get_variable($_XDOCTX, 'L1R3P5S178'))"/>
         <!--Render: -->
         <xsl:call-template name="L1R3P1S179"/>
         <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L1R3', xdoxslt:get_variable($_XDOCTX, 'L1R3P1S179'))"/>
         <!--Render: Instruction
Code Line 4-->
         <xsl:call-template name="L1R3P5S180"/>
         <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L1R3', xdoxslt:get_variable($_XDOCTX, 'L1R3P5S180'))"/>
         <!--Render: -->
         <xsl:call-template name="L1R3P1S181"/>
         <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L1R3', xdoxslt:get_variable($_XDOCTX, 'L1R3P1S181'))"/>
         <!--Render: Bank to Bank
Information
Line 1-->
         <xsl:call-template name="L1R3P5S182"/>
         <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L1R3', xdoxslt:get_variable($_XDOCTX, 'L1R3P5S182'))"/>
         <!--Render: -->
         <xsl:call-template name="L1R3P1S183"/>
         <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L1R3', xdoxslt:get_variable($_XDOCTX, 'L1R3P1S183'))"/>
         <!--Render: Bank to Bank
Information
Line 2-->
         <xsl:call-template name="L1R3P5S184"/>
         <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L1R3', xdoxslt:get_variable($_XDOCTX, 'L1R3P5S184'))"/>
         <!--Render: -->
         <xsl:call-template name="L1R3P1S185"/>
         <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L1R3', xdoxslt:get_variable($_XDOCTX, 'L1R3P1S185'))"/>
         <!--Render: Bank to Bank
Information
Line 3-->
         <xsl:call-template name="L1R3P5S186"/>
         <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L1R3', xdoxslt:get_variable($_XDOCTX, 'L1R3P5S186'))"/>
         <!--Render: -->
         <xsl:call-template name="L1R3P1S187"/>
         <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L1R3', xdoxslt:get_variable($_XDOCTX, 'L1R3P1S187'))"/>
         <!--Render: Bank to Bank
Information
Line 4-->
         <xsl:call-template name="L1R3P5S188"/>
         <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L1R3', xdoxslt:get_variable($_XDOCTX, 'L1R3P5S188'))"/>
         <!--Render: -->
         <xsl:call-template name="L1R3P1S189"/>
         <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L1R3', xdoxslt:get_variable($_XDOCTX, 'L1R3P1S189'))"/>
         <!--Render: Bank to Bank
Information
Line 5-->
         <xsl:call-template name="L1R3P5S190"/>
         <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L1R3', xdoxslt:get_variable($_XDOCTX, 'L1R3P5S190'))"/>
         <!--Render: -->
         <xsl:call-template name="L1R3P1S191"/>
         <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L1R3', xdoxslt:get_variable($_XDOCTX, 'L1R3P1S191'))"/>
         <!--Render: Bank to Bank
Information
Line 6-->
         <xsl:call-template name="L1R3P5S192"/>
         <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L1R3', xdoxslt:get_variable($_XDOCTX, 'L1R3P5S192'))"/>
         <!--Render: -->
         <xsl:call-template name="L1R3P1S193"/>
         <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L1R3', xdoxslt:get_variable($_XDOCTX, 'L1R3P1S193'))"/>
         <!--Render: 1st Exchange
Contract
Number-->
         <xsl:call-template name="L1R3P5S194"/>
         <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L1R3', xdoxslt:get_variable($_XDOCTX, 'L1R3P5S194'))"/>
         <!--Render: -->
         <xsl:call-template name="L1R3P1S195"/>
         <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L1R3', xdoxslt:get_variable($_XDOCTX, 'L1R3P1S195'))"/>
         <!--Render: 1st Exchange
Contract
Amount-->
         <xsl:call-template name="L1R3P5S196"/>
         <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L1R3', xdoxslt:get_variable($_XDOCTX, 'L1R3P5S196'))"/>
         <!--Render: -->
         <xsl:call-template name="L1R3P1S197"/>
         <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L1R3', xdoxslt:get_variable($_XDOCTX, 'L1R3P1S197'))"/>
         <!--Render: 2nd Exchange
Contract
Number-->
         <xsl:call-template name="L1R3P5S198"/>
         <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L1R3', xdoxslt:get_variable($_XDOCTX, 'L1R3P5S198'))"/>
         <!--Render: -->
         <xsl:call-template name="L1R3P1S199"/>
         <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L1R3', xdoxslt:get_variable($_XDOCTX, 'L1R3P1S199'))"/>
         <!--Render: 2nd Exchange
Contract
Amount-->
         <xsl:call-template name="L1R3P5S200"/>
         <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L1R3', xdoxslt:get_variable($_XDOCTX, 'L1R3P5S200'))"/>
         <!--Render: -->
         <xsl:call-template name="L1R3P1S201"/>
         <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L1R3', xdoxslt:get_variable($_XDOCTX, 'L1R3P1S201'))"/>
         <!--Render: Regulatory
Reporting
Line 1-->
         <xsl:call-template name="L1R3P5S202"/>
         <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L1R3', xdoxslt:get_variable($_XDOCTX, 'L1R3P5S202'))"/>
         <!--Render: -->
         <xsl:call-template name="L1R3P1S203"/>
         <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L1R3', xdoxslt:get_variable($_XDOCTX, 'L1R3P1S203'))"/>
         <!--Render: Regulatory
Reporting
Line 2-->
         <xsl:call-template name="L1R3P5S204"/>
         <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L1R3', xdoxslt:get_variable($_XDOCTX, 'L1R3P5S204'))"/>
         <!--Render: -->
         <xsl:call-template name="L1R3P1S205"/>
         <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L1R3', xdoxslt:get_variable($_XDOCTX, 'L1R3P1S205'))"/>
         <!--Render: Regulatory
Reporting
Line 3-->
         <xsl:call-template name="L1R3P5S206"/>
         <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L1R3', xdoxslt:get_variable($_XDOCTX, 'L1R3P5S206'))"/>
         <!--Render: -->
         <xsl:call-template name="L1R3P1S207"/>
         <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L1R3', xdoxslt:get_variable($_XDOCTX, 'L1R3P1S207'))"/>
         <!--Render: Advise By-->
         <xsl:call-template name="L1R3P5S208"/>
         <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L1R3', xdoxslt:get_variable($_XDOCTX, 'L1R3P5S208'))"/>
         <!--Render: -->
         <xsl:call-template name="L1R3P1S209"/>
         <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L1R3', xdoxslt:get_variable($_XDOCTX, 'L1R3P1S209'))"/>
         <!--Render: Advise By
Number-->
         <xsl:call-template name="L1R3P5S210"/>
         <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L1R3', xdoxslt:get_variable($_XDOCTX, 'L1R3P5S210'))"/>
         <!--Render: -->
         <xsl:call-template name="L1R3P1S211"/>
         <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L1R3', xdoxslt:get_variable($_XDOCTX, 'L1R3P1S211'))"/>
         <!--Render: Intermediary
Bank Country-->
         <xsl:call-template name="L1R3P5S212"/>
         <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L1R3', xdoxslt:get_variable($_XDOCTX, 'L1R3P5S212'))"/>
         <xsl:value-of select="xdoxslt:get_variable($_XDOCTX, 'L1R3')"/>
         <!--Control: ===== END RECORD: Bank Details3 =====-->
         <!--Control: ===== Record Break =====-->
         <xsl:call-template name="_RECORDBREAK"/>
         <!--Control: Increase record counter: Bank Details3-->
         <xsl:value-of select="xdoxslt:next_sequence_number($_XDOCTX, 'Bank Details3_RC')"/>
      </xsl:for-each>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'MESSAGE1', xdoxslt:removeAll(string(xdoxslt:get_variable($_XDOCTX, 'MESSAGETEMPLATES')), string(xdoxslt:get_variable($_XDOCTX, 'MESSAGE'))))"/>
      <xsl:variable name="MESSAGELENGTH" select="string-length(xdoxslt:get_variable($_XDOCTX, 'MESSAGE1'))"/>
      <xsl:value-of select="xdoxslt:get_variable($_XDOCTX, 'MESSAGE')"/>
   </xsl:template>
   <xsl:template name="_RECORDCOUNTER">
      <!--Record Counter Init-->
      <!--Definition: Bank Details1_RC-->
      <xsl:call-template name="SEQ_START_Bank Details1_RC"/>
      <xsl:value-of select="xdoxslt:create_sequence_number($_XDOCTX, string('Bank Details1_RC'), number(1), number(999999), xdoxslt:get_variable($_XDOCTX, 'SEQ_START_Bank Details1_RC_V'), number(1))"/>
      <!--Definition: Bank Details2_RC-->
      <xsl:call-template name="SEQ_START_Bank Details2_RC"/>
      <xsl:value-of select="xdoxslt:create_sequence_number($_XDOCTX, string('Bank Details2_RC'), number(1), number(999999), xdoxslt:get_variable($_XDOCTX, 'SEQ_START_Bank Details2_RC_V'), number(1))"/>
      <!--Definition: Bank Details3_RC-->
      <xsl:call-template name="SEQ_START_Bank Details3_RC"/>
      <xsl:value-of select="xdoxslt:create_sequence_number($_XDOCTX, string('Bank Details3_RC'), number(1), number(999999), xdoxslt:get_variable($_XDOCTX, 'SEQ_START_Bank Details3_RC_V'), number(1))"/>
   </xsl:template>
   <xsl:template name="SEQ_START_Bank Details1_RC">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: 0-->
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'SEQ_START_Bank Details1_RC_V', 0)"/>
   </xsl:template>
   <xsl:template name="L1R1P3S0">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR(('IFH')),'NONE')-->
      <xsl:variable name="v1" select="string('IFH')"/>
      <xsl:variable name="v2" select="xdoxslt:convert_case(string($v1), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string($v2))>3">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v3', substring(string($v2), 1,3))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v3', $v2)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R1P3S0', xdoxslt:get_variable($_XDOCTX, '$v3'))"/>
   </xsl:template>
   <xsl:template name="L1R1P1S1">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR((',')),'NONE')-->
      <xsl:variable name="v4" select="string(',')"/>
      <xsl:variable name="v5" select="xdoxslt:convert_case(string($v4), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string($v5))>1">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v6', substring(string($v5), 1,1))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v6', $v5)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R1P1S1', xdoxslt:get_variable($_XDOCTX, '$v6'))"/>
   </xsl:template>
   <xsl:template name="L1R1P14S2">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR(('IFILE')),'NONE')-->
      <xsl:variable name="v7" select="string('IFILE')"/>
      <xsl:variable name="v8" select="xdoxslt:convert_case(string($v7), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string($v8))>14">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v9', substring(string($v8), 1,14))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v9', $v8)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R1P14S2', xdoxslt:get_variable($_XDOCTX, '$v9'))"/>
   </xsl:template>
   <xsl:template name="L1R1P1S3">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR((',')),'NONE')-->
      <xsl:variable name="v10" select="string(',')"/>
      <xsl:variable name="v11" select="xdoxslt:convert_case(string($v10), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string($v11))>1">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v12', substring(string($v11), 1,1))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v12', $v11)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R1P1S3', xdoxslt:get_variable($_XDOCTX, '$v12'))"/>
   </xsl:template>
   <xsl:template name="L1R1P9S4">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR(('CSV')),'NONE')-->
      <xsl:variable name="v13" select="string('CSV')"/>
      <xsl:variable name="v14" select="xdoxslt:convert_case(string($v13), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string($v14))>9">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v15', substring(string($v14), 1,9))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v15', $v14)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R1P9S4', xdoxslt:get_variable($_XDOCTX, '$v15'))"/>
   </xsl:template>
   <xsl:template name="L1R1P1S5">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR((',')),'NONE')-->
      <xsl:variable name="v16" select="string(',')"/>
      <xsl:variable name="v17" select="xdoxslt:convert_case(string($v16), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string($v17))>1">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v18', substring(string($v17), 1,1))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v18', $v17)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R1P1S5', xdoxslt:get_variable($_XDOCTX, '$v18'))"/>
   </xsl:template>
   <xsl:template name="L1R1P23S6">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR(('ABC71759001')),'NONE')-->
      <xsl:variable name="v19" select="string('ABC71759001')"/>
      <xsl:variable name="v20" select="xdoxslt:convert_case(string($v19), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string($v20))>23">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v21', substring(string($v20), 1,23))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v21', $v20)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R1P23S6', xdoxslt:get_variable($_XDOCTX, '$v21'))"/>
   </xsl:template>
   <xsl:template name="L1R1P1S7">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR((',')),'NONE')-->
      <xsl:variable name="v22" select="string(',')"/>
      <xsl:variable name="v23" select="xdoxslt:convert_case(string($v22), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string($v23))>1">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v24', substring(string($v23), 1,1))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v24', $v23)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R1P1S7', xdoxslt:get_variable($_XDOCTX, '$v24'))"/>
   </xsl:template>
   <xsl:template name="L1R1P23S8">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR(('AEHBMEGAE020228557')),'NONE')-->
      <xsl:variable name="v25" select="string('AEHBMEGAE020228557')"/>
      <xsl:variable name="v26" select="xdoxslt:convert_case(string($v25), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string($v26))>23">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v27', substring(string($v26), 1,23))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v27', $v26)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R1P23S8', xdoxslt:get_variable($_XDOCTX, '$v27'))"/>
   </xsl:template>
   <xsl:template name="L1R1P1S9">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR((',')),'NONE')-->
      <xsl:variable name="v28" select="string(',')"/>
      <xsl:variable name="v29" select="xdoxslt:convert_case(string($v28), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string($v29))>1">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v30', substring(string($v29), 1,1))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v30', $v29)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R1P1S9', xdoxslt:get_variable($_XDOCTX, '$v30'))"/>
   </xsl:template>
   <xsl:template name="L1R1P40S10">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR((CF_FILE_REF1)),'NONE')-->
      <xsl:variable name="v31" select="string(xdoxslt:normalize_string($_XDOCTX, .//CF_FILE_REF1))"/>
      <xsl:variable name="v32" select="xdoxslt:convert_case(string($v31), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string($v32))>40">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v33', substring(string($v32), 1,40))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v33', $v32)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R1P40S10', xdoxslt:get_variable($_XDOCTX, '$v33'))"/>
   </xsl:template>
   <xsl:template name="L1R1P1S11">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR((',')),'NONE')-->
      <xsl:variable name="v34" select="string(',')"/>
      <xsl:variable name="v35" select="xdoxslt:convert_case(string($v34), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string($v35))>1">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v36', substring(string($v35), 1,1))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v36', $v35)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R1P1S11', xdoxslt:get_variable($_XDOCTX, '$v36'))"/>
   </xsl:template>
   <xsl:template name="L1R1P10S12">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR((CF_CREATION_DATE)),'NONE')-->
      <xsl:variable name="v37" select="string(xdoxslt:normalize_string($_XDOCTX, .//CF_CREATION_DATE))"/>
      <xsl:variable name="v38" select="xdoxslt:convert_case(string($v37), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string($v38))>10">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v39', substring(string($v38), 1,10))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v39', $v38)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R1P10S12', xdoxslt:get_variable($_XDOCTX, '$v39'))"/>
   </xsl:template>
   <xsl:template name="L1R1P1S13">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR((',')),'NONE')-->
      <xsl:variable name="v40" select="string(',')"/>
      <xsl:variable name="v41" select="xdoxslt:convert_case(string($v40), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string($v41))>1">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v42', substring(string($v41), 1,1))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v42', $v41)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R1P1S13', xdoxslt:get_variable($_XDOCTX, '$v42'))"/>
   </xsl:template>
   <xsl:template name="L1R1P10S14">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR((CF_CREATION_TIME)),'NONE')-->
      <xsl:variable name="v43" select="string(xdoxslt:normalize_string($_XDOCTX, .//CF_CREATION_TIME))"/>
      <xsl:variable name="v44" select="xdoxslt:convert_case(string($v43), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string($v44))>10">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v45', substring(string($v44), 1,10))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v45', $v44)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R1P10S14', xdoxslt:get_variable($_XDOCTX, '$v45'))"/>
   </xsl:template>
   <xsl:template name="L1R1P1S15">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR((',')),'NONE')-->
      <xsl:variable name="v46" select="string(',')"/>
      <xsl:variable name="v47" select="xdoxslt:convert_case(string($v46), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string($v47))>1">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v48', substring(string($v47), 1,1))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v48', $v47)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R1P1S15', xdoxslt:get_variable($_XDOCTX, '$v48'))"/>
   </xsl:template>
   <xsl:template name="L1R1P15S16">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR(('P')),'NONE')-->
      <xsl:variable name="v49" select="string('P')"/>
      <xsl:variable name="v50" select="xdoxslt:convert_case(string($v49), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string($v50))>15">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v51', substring(string($v50), 1,15))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v51', $v50)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R1P15S16', xdoxslt:get_variable($_XDOCTX, '$v51'))"/>
   </xsl:template>
   <xsl:template name="L1R1P1S17">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR((',')),'NONE')-->
      <xsl:variable name="v52" select="string(',')"/>
      <xsl:variable name="v53" select="xdoxslt:convert_case(string($v52), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string($v53))>1">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v54', substring(string($v53), 1,1))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v54', $v53)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R1P1S17', xdoxslt:get_variable($_XDOCTX, '$v54'))"/>
   </xsl:template>
   <xsl:template name="L1R1P4S18">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR(('1.0')),'NONE')-->
      <xsl:variable name="v55" select="string('1.0')"/>
      <xsl:variable name="v56" select="xdoxslt:convert_case(string($v55), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string($v56))>4">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v57', substring(string($v56), 1,4))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v57', $v56)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R1P4S18', xdoxslt:get_variable($_XDOCTX, '$v57'))"/>
   </xsl:template>
   <xsl:template name="L1R1P1S19">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR((',')),'NONE')-->
      <xsl:variable name="v58" select="string(',')"/>
      <xsl:variable name="v59" select="xdoxslt:convert_case(string($v58), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string($v59))>1">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v60', substring(string($v59), 1,1))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v60', $v59)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R1P1S19', xdoxslt:get_variable($_XDOCTX, '$v60'))"/>
   </xsl:template>
   <xsl:template name="L1R1P4S20">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: TO_NUMBER((CF_COUNT1))-->
      <xsl:variable name="v61" select="xdoxslt:to_number(xdoxslt:normalize_string($_XDOCTX, .//CF_COUNT1))"/>
      <xsl:choose>
         <xsl:when test="string-length(string($v61))>4">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v62', substring(string($v61), 1,4))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v62', $v61)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R1P4S20', xdoxslt:get_variable($_XDOCTX, '$v62'))"/>
   </xsl:template>
   <xsl:template name="SEQ_START_Bank Details2_RC">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: 0-->
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'SEQ_START_Bank Details2_RC_V', 0)"/>
   </xsl:template>
   <xsl:template name="L1R2P6S21">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR(('BATHDR')),'NONE')-->
      <xsl:variable name="v63" select="string('BATHDR')"/>
      <xsl:variable name="v64" select="xdoxslt:convert_case(string($v63), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string($v64))>6">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v65', substring(string($v64), 1,6))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v65', $v64)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R2P6S21', xdoxslt:get_variable($_XDOCTX, '$v65'))"/>
   </xsl:template>
   <xsl:template name="L1R2P1S22">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR((',')),'NONE')-->
      <xsl:variable name="v66" select="string(',')"/>
      <xsl:variable name="v67" select="xdoxslt:convert_case(string($v66), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string($v67))>1">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v68', substring(string($v67), 1,1))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v68', $v67)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R2P1S22', xdoxslt:get_variable($_XDOCTX, '$v68'))"/>
   </xsl:template>
   <xsl:template name="L1R2P13S23">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR(('ACH-CR')),'NONE')-->
      <xsl:variable name="v69" select="string('ACH-CR')"/>
      <xsl:variable name="v70" select="xdoxslt:convert_case(string($v69), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string($v70))>13">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v71', substring(string($v70), 1,13))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v71', $v70)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R2P13S23', xdoxslt:get_variable($_XDOCTX, '$v71'))"/>
   </xsl:template>
   <xsl:template name="L1R2P1S24">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR((',')),'NONE')-->
      <xsl:variable name="v72" select="string(',')"/>
      <xsl:variable name="v73" select="xdoxslt:convert_case(string($v72), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string($v73))>1">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v74', substring(string($v73), 1,1))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v74', $v73)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R2P1S24', xdoxslt:get_variable($_XDOCTX, '$v74'))"/>
   </xsl:template>
   <xsl:template name="L1R2P9S25">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: TO_NUMBER((CS_COUNT))-->
      <xsl:variable name="v75" select="xdoxslt:to_number(xdoxslt:normalize_string($_XDOCTX, .//CS_COUNT))"/>
      <xsl:choose>
         <xsl:when test="string-length(string($v75))>9">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v76', substring(string($v75), 1,9))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v76', $v75)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R2P9S25', xdoxslt:get_variable($_XDOCTX, '$v76'))"/>
   </xsl:template>
   <xsl:template name="L1R2P1S26">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR((',')),'NONE')-->
      <xsl:variable name="v77" select="string(',')"/>
      <xsl:variable name="v78" select="xdoxslt:convert_case(string($v77), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string($v78))>1">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v79', substring(string($v78), 1,1))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v79', $v78)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R2P1S26', xdoxslt:get_variable($_XDOCTX, '$v79'))"/>
   </xsl:template>
   <xsl:template name="L1R2P10S27">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR((NULL)),'NONE')-->
      <xsl:variable name="v80" select="string('')"/>
      <xsl:variable name="v81" select="string($v80)"/>
      <xsl:variable name="v82" select="xdoxslt:convert_case(string($v81), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string($v82))>10">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v83', substring(string($v82), 1,10))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v83', $v82)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R2P10S27', xdoxslt:get_variable($_XDOCTX, '$v83'))"/>
   </xsl:template>
   <xsl:template name="L1R2P1S28">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR((',')),'NONE')-->
      <xsl:variable name="v84" select="string(',')"/>
      <xsl:variable name="v85" select="xdoxslt:convert_case(string($v84), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string($v85))>1">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v86', substring(string($v85), 1,1))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v86', $v85)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R2P1S28', xdoxslt:get_variable($_XDOCTX, '$v86'))"/>
   </xsl:template>
   <xsl:template name="L1R2P15S29">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR((NULL)),'NONE')-->
      <xsl:variable name="v87" select="string('')"/>
      <xsl:variable name="v88" select="string($v87)"/>
      <xsl:variable name="v89" select="xdoxslt:convert_case(string($v88), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string($v89))>15">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v90', substring(string($v89), 1,15))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v90', $v89)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R2P15S29', xdoxslt:get_variable($_XDOCTX, '$v90'))"/>
   </xsl:template>
   <xsl:template name="L1R2P1S30">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR((',')),'NONE')-->
      <xsl:variable name="v91" select="string(',')"/>
      <xsl:variable name="v92" select="xdoxslt:convert_case(string($v91), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string($v92))>1">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v93', substring(string($v92), 1,1))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v93', $v92)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R2P1S30', xdoxslt:get_variable($_XDOCTX, '$v93'))"/>
   </xsl:template>
   <xsl:template name="L1R2P6S31">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR((NULL)),'NONE')-->
      <xsl:variable name="v94" select="string('')"/>
      <xsl:variable name="v95" select="string($v94)"/>
      <xsl:variable name="v96" select="xdoxslt:convert_case(string($v95), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string($v96))>6">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v97', substring(string($v96), 1,6))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v97', $v96)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R2P6S31', xdoxslt:get_variable($_XDOCTX, '$v97'))"/>
   </xsl:template>
   <xsl:template name="L1R2P1S32">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR((',')),'NONE')-->
      <xsl:variable name="v98" select="string(',')"/>
      <xsl:variable name="v99" select="xdoxslt:convert_case(string($v98), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string($v99))>1">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v100', substring(string($v99), 1,1))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v100', $v99)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R2P1S32', xdoxslt:get_variable($_XDOCTX, '$v100'))"/>
   </xsl:template>
   <xsl:template name="L1R2P10S33">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR((NULL)),'NONE')-->
      <xsl:variable name="v101" select="string('')"/>
      <xsl:variable name="v102" select="string($v101)"/>
      <xsl:variable name="v103" select="xdoxslt:convert_case(string($v102), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string($v103))>10">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v104', substring(string($v103), 1,10))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v104', $v103)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R2P10S33', xdoxslt:get_variable($_XDOCTX, '$v104'))"/>
   </xsl:template>
   <xsl:template name="L1R2P1S34">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR((',')),'NONE')-->
      <xsl:variable name="v105" select="string(',')"/>
      <xsl:variable name="v106" select="xdoxslt:convert_case(string($v105), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string($v106))>1">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v107', substring(string($v106), 1,1))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v107', $v106)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R2P1S34', xdoxslt:get_variable($_XDOCTX, '$v107'))"/>
   </xsl:template>
   <xsl:template name="L1R2P15S35">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR((NULL)),'NONE')-->
      <xsl:variable name="v108" select="string('')"/>
      <xsl:variable name="v109" select="string($v108)"/>
      <xsl:variable name="v110" select="xdoxslt:convert_case(string($v109), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string($v110))>15">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v111', substring(string($v110), 1,15))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v111', $v110)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R2P15S35', xdoxslt:get_variable($_XDOCTX, '$v111'))"/>
   </xsl:template>
   <xsl:template name="L1R2P1S36">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR((',')),'NONE')-->
      <xsl:variable name="v112" select="string(',')"/>
      <xsl:variable name="v113" select="xdoxslt:convert_case(string($v112), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string($v113))>1">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v114', substring(string($v113), 1,1))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v114', $v113)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R2P1S36', xdoxslt:get_variable($_XDOCTX, '$v114'))"/>
   </xsl:template>
   <xsl:template name="L1R2P3S37">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR((NULL)),'NONE')-->
      <xsl:variable name="v115" select="string('')"/>
      <xsl:variable name="v116" select="string($v115)"/>
      <xsl:variable name="v117" select="xdoxslt:convert_case(string($v116), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string($v117))>3">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v118', substring(string($v117), 1,3))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v118', $v117)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R2P3S37', xdoxslt:get_variable($_XDOCTX, '$v118'))"/>
   </xsl:template>
   <xsl:template name="L1R2P1S38">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR((',')),'NONE')-->
      <xsl:variable name="v119" select="string(',')"/>
      <xsl:variable name="v120" select="xdoxslt:convert_case(string($v119), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string($v120))>1">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v121', substring(string($v120), 1,1))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v121', $v120)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R2P1S38', xdoxslt:get_variable($_XDOCTX, '$v121'))"/>
   </xsl:template>
   <xsl:template name="L1R2P35S39">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR(('@1ST@')),'NONE')-->
      <xsl:variable name="v122" select="string('@1ST@')"/>
      <xsl:variable name="v123" select="xdoxslt:convert_case(string($v122), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string($v123))>35">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v124', substring(string($v123), 1,35))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v124', $v123)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R2P35S39', xdoxslt:get_variable($_XDOCTX, '$v124'))"/>
   </xsl:template>
   <xsl:template name="L1R2P1S40">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR((',')),'NONE')-->
      <xsl:variable name="v125" select="string(',')"/>
      <xsl:variable name="v126" select="xdoxslt:convert_case(string($v125), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string($v126))>1">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v127', substring(string($v126), 1,1))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v127', $v126)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R2P1S40', xdoxslt:get_variable($_XDOCTX, '$v127'))"/>
   </xsl:template>
   <xsl:template name="L1R2P8S41">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR((CF_VALUE_DATE)),'NONE')-->
      <xsl:variable name="v128" select="string(xdoxslt:normalize_string($_XDOCTX, .//CF_VALUE_DATE))"/>
      <xsl:variable name="v129" select="xdoxslt:convert_case(string($v128), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string($v129))>8">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v130', substring(string($v129), 1,8))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v130', $v129)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R2P8S41', xdoxslt:get_variable($_XDOCTX, '$v130'))"/>
   </xsl:template>
   <xsl:template name="L1R2P1S42">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR((',')),'NONE')-->
      <xsl:variable name="v131" select="string(',')"/>
      <xsl:variable name="v132" select="xdoxslt:convert_case(string($v131), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string($v132))>1">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v133', substring(string($v132), 1,1))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v133', $v132)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R2P1S42', xdoxslt:get_variable($_XDOCTX, '$v133'))"/>
   </xsl:template>
   <xsl:template name="L1R2P15S43">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR(('020228557002')),'NONE')-->
      <xsl:variable name="v134" select="string('020228557002')"/>
      <xsl:variable name="v135" select="xdoxslt:convert_case(string($v134), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string($v135))>15">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v136', substring(string($v135), 1,15))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v136', $v135)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R2P15S43', xdoxslt:get_variable($_XDOCTX, '$v136'))"/>
   </xsl:template>
   <xsl:template name="L1R2P1S44">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR((',')),'NONE')-->
      <xsl:variable name="v137" select="string(',')"/>
      <xsl:variable name="v138" select="xdoxslt:convert_case(string($v137), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string($v138))>1">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v139', substring(string($v138), 1,1))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v139', $v138)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R2P1S44', xdoxslt:get_variable($_XDOCTX, '$v139'))"/>
   </xsl:template>
   <xsl:template name="L1R2P3S45">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR(('AED')),'NONE')-->
      <xsl:variable name="v140" select="string('AED')"/>
      <xsl:variable name="v141" select="xdoxslt:convert_case(string($v140), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string($v141))>3">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v142', substring(string($v141), 1,3))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v142', $v141)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R2P3S45', xdoxslt:get_variable($_XDOCTX, '$v142'))"/>
   </xsl:template>
   <xsl:template name="L1R2P1S46">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR((',')),'NONE')-->
      <xsl:variable name="v143" select="string(',')"/>
      <xsl:variable name="v144" select="xdoxslt:convert_case(string($v143), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string($v144))>1">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v145', substring(string($v144), 1,1))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v145', $v144)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R2P1S46', xdoxslt:get_variable($_XDOCTX, '$v145'))"/>
   </xsl:template>
   <xsl:template name="L1R2P15S47">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR((CF_NETPAY)),'NONE')-->
      <xsl:variable name="v146" select="string(xdoxslt:normalize_string($_XDOCTX, .//CF_NETPAY))"/>
      <xsl:variable name="v147" select="xdoxslt:convert_case(string($v146), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string($v147))>15">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v148', substring(string($v147), 1,15))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v148', $v147)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R2P15S47', xdoxslt:get_variable($_XDOCTX, '$v148'))"/>
   </xsl:template>
   <xsl:template name="L1R2P1S48">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR((',')),'NONE')-->
      <xsl:variable name="v149" select="string(',')"/>
      <xsl:variable name="v150" select="xdoxslt:convert_case(string($v149), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string($v150))>1">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v151', substring(string($v150), 1,1))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v151', $v150)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R2P1S48', xdoxslt:get_variable($_XDOCTX, '$v151'))"/>
   </xsl:template>
   <xsl:template name="L1R2P5S49">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR((NULL)),'NONE')-->
      <xsl:variable name="v152" select="string('')"/>
      <xsl:variable name="v153" select="string($v152)"/>
      <xsl:variable name="v154" select="xdoxslt:convert_case(string($v153), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string($v154))>5">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v155', substring(string($v154), 1,5))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v155', $v154)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R2P5S49', xdoxslt:get_variable($_XDOCTX, '$v155'))"/>
   </xsl:template>
   <xsl:template name="L1R2P1S50">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR((',')),'NONE')-->
      <xsl:variable name="v156" select="string(',')"/>
      <xsl:variable name="v157" select="xdoxslt:convert_case(string($v156), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string($v157))>1">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v158', substring(string($v157), 1,1))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v158', $v157)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R2P1S50', xdoxslt:get_variable($_XDOCTX, '$v158'))"/>
   </xsl:template>
   <xsl:template name="L1R2P5S51">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR((NULL)),'NONE')-->
      <xsl:variable name="v159" select="string('')"/>
      <xsl:variable name="v160" select="string($v159)"/>
      <xsl:variable name="v161" select="xdoxslt:convert_case(string($v160), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string($v161))>5">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v162', substring(string($v161), 1,5))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v162', $v161)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R2P5S51', xdoxslt:get_variable($_XDOCTX, '$v162'))"/>
   </xsl:template>
   <xsl:template name="L1R2P1S52">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR((',')),'NONE')-->
      <xsl:variable name="v163" select="string(',')"/>
      <xsl:variable name="v164" select="xdoxslt:convert_case(string($v163), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string($v164))>1">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v165', substring(string($v164), 1,1))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v165', $v164)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R2P1S52', xdoxslt:get_variable($_XDOCTX, '$v165'))"/>
   </xsl:template>
   <xsl:template name="L1R2P2S53">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR(('AE')),'NONE')-->
      <xsl:variable name="v166" select="string('AE')"/>
      <xsl:variable name="v167" select="xdoxslt:convert_case(string($v166), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string($v167))>2">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v168', substring(string($v167), 1,2))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v168', $v167)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R2P2S53', xdoxslt:get_variable($_XDOCTX, '$v168'))"/>
   </xsl:template>
   <xsl:template name="L1R2P1S54">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR((',')),'NONE')-->
      <xsl:variable name="v169" select="string(',')"/>
      <xsl:variable name="v170" select="xdoxslt:convert_case(string($v169), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string($v170))>1">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v171', substring(string($v170), 1,1))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v171', $v170)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R2P1S54', xdoxslt:get_variable($_XDOCTX, '$v171'))"/>
   </xsl:template>
   <xsl:template name="L1R2P4S55">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR(('HBME')),'NONE')-->
      <xsl:variable name="v172" select="string('HBME')"/>
      <xsl:variable name="v173" select="xdoxslt:convert_case(string($v172), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string($v173))>4">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v174', substring(string($v173), 1,4))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v174', $v173)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R2P4S55', xdoxslt:get_variable($_XDOCTX, '$v174'))"/>
   </xsl:template>
   <xsl:template name="L1R2P1S56">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR((',')),'NONE')-->
      <xsl:variable name="v175" select="string(',')"/>
      <xsl:variable name="v176" select="xdoxslt:convert_case(string($v175), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string($v176))>1">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v177', substring(string($v176), 1,1))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v177', $v176)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R2P1S56', xdoxslt:get_variable($_XDOCTX, '$v177'))"/>
   </xsl:template>
   <xsl:template name="L1R2P3S57">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR(('AED')),'NONE')-->
      <xsl:variable name="v178" select="string('AED')"/>
      <xsl:variable name="v179" select="xdoxslt:convert_case(string($v178), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string($v179))>3">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v180', substring(string($v179), 1,3))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v180', $v179)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R2P3S57', xdoxslt:get_variable($_XDOCTX, '$v180'))"/>
   </xsl:template>
   <xsl:template name="L1R2P1S58">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR((',')),'NONE')-->
      <xsl:variable name="v181" select="string(',')"/>
      <xsl:variable name="v182" select="xdoxslt:convert_case(string($v181), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string($v182))>1">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v183', substring(string($v182), 1,1))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v183', $v182)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R2P1S58', xdoxslt:get_variable($_XDOCTX, '$v183'))"/>
   </xsl:template>
   <xsl:template name="L1R2P5S59">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR((NULL)),'NONE')-->
      <xsl:variable name="v184" select="string('')"/>
      <xsl:variable name="v185" select="string($v184)"/>
      <xsl:variable name="v186" select="xdoxslt:convert_case(string($v185), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string($v186))>5">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v187', substring(string($v186), 1,5))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v187', $v186)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R2P5S59', xdoxslt:get_variable($_XDOCTX, '$v187'))"/>
   </xsl:template>
   <xsl:template name="L1R2P1S60">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR((',')),'NONE')-->
      <xsl:variable name="v188" select="string(',')"/>
      <xsl:variable name="v189" select="xdoxslt:convert_case(string($v188), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string($v189))>1">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v190', substring(string($v189), 1,1))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v190', $v189)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R2P1S60', xdoxslt:get_variable($_XDOCTX, '$v190'))"/>
   </xsl:template>
   <xsl:template name="L1R2P40S61">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR(('SHUAA Capital psc')),'NONE')-->
      <xsl:variable name="v191" select="string('SHUAA Capital psc')"/>
      <xsl:variable name="v192" select="xdoxslt:convert_case(string($v191), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string($v192))>40">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v193', substring(string($v192), 1,40))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v193', $v192)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R2P40S61', xdoxslt:get_variable($_XDOCTX, '$v193'))"/>
   </xsl:template>
   <xsl:template name="L1R2P1S62">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR((',')),'NONE')-->
      <xsl:variable name="v194" select="string(',')"/>
      <xsl:variable name="v195" select="xdoxslt:convert_case(string($v194), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string($v195))>1">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v196', substring(string($v195), 1,1))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v196', $v195)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R2P1S62', xdoxslt:get_variable($_XDOCTX, '$v196'))"/>
   </xsl:template>
   <xsl:template name="L1R2P5S63">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR((NULL)),'NONE')-->
      <xsl:variable name="v197" select="string('')"/>
      <xsl:variable name="v198" select="string($v197)"/>
      <xsl:variable name="v199" select="xdoxslt:convert_case(string($v198), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string($v199))>5">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v200', substring(string($v199), 1,5))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v200', $v199)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R2P5S63', xdoxslt:get_variable($_XDOCTX, '$v200'))"/>
   </xsl:template>
   <xsl:template name="L1R2P1S64">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR((',')),'NONE')-->
      <xsl:variable name="v201" select="string(',')"/>
      <xsl:variable name="v202" select="xdoxslt:convert_case(string($v201), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string($v202))>1">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v203', substring(string($v202), 1,1))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v203', $v202)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R2P1S64', xdoxslt:get_variable($_XDOCTX, '$v203'))"/>
   </xsl:template>
   <xsl:template name="L1R2P5S65">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR((NULL)),'NONE')-->
      <xsl:variable name="v204" select="string('')"/>
      <xsl:variable name="v205" select="string($v204)"/>
      <xsl:variable name="v206" select="xdoxslt:convert_case(string($v205), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string($v206))>5">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v207', substring(string($v206), 1,5))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v207', $v206)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R2P5S65', xdoxslt:get_variable($_XDOCTX, '$v207'))"/>
   </xsl:template>
   <xsl:template name="L1R2P1S66">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR((',')),'NONE')-->
      <xsl:variable name="v208" select="string(',')"/>
      <xsl:variable name="v209" select="xdoxslt:convert_case(string($v208), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string($v209))>1">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v210', substring(string($v209), 1,1))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v210', $v209)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R2P1S66', xdoxslt:get_variable($_XDOCTX, '$v210'))"/>
   </xsl:template>
   <xsl:template name="L1R2P5S67">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR((NULL)),'NONE')-->
      <xsl:variable name="v211" select="string('')"/>
      <xsl:variable name="v212" select="string($v211)"/>
      <xsl:variable name="v213" select="xdoxslt:convert_case(string($v212), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string($v213))>5">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v214', substring(string($v213), 1,5))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v214', $v213)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R2P5S67', xdoxslt:get_variable($_XDOCTX, '$v214'))"/>
   </xsl:template>
   <xsl:template name="L1R2P1S68">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR((',')),'NONE')-->
      <xsl:variable name="v215" select="string(',')"/>
      <xsl:variable name="v216" select="xdoxslt:convert_case(string($v215), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string($v216))>1">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v217', substring(string($v216), 1,1))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v217', $v216)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R2P1S68', xdoxslt:get_variable($_XDOCTX, '$v217'))"/>
   </xsl:template>
   <xsl:template name="L1R2P5S69">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR((NULL)),'NONE')-->
      <xsl:variable name="v218" select="string('')"/>
      <xsl:variable name="v219" select="string($v218)"/>
      <xsl:variable name="v220" select="xdoxslt:convert_case(string($v219), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string($v220))>5">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v221', substring(string($v220), 1,5))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v221', $v220)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R2P5S69', xdoxslt:get_variable($_XDOCTX, '$v221'))"/>
   </xsl:template>
   <xsl:template name="L1R2P1S70">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR((',')),'NONE')-->
      <xsl:variable name="v222" select="string(',')"/>
      <xsl:variable name="v223" select="xdoxslt:convert_case(string($v222), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string($v223))>1">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v224', substring(string($v223), 1,1))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v224', $v223)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R2P1S70', xdoxslt:get_variable($_XDOCTX, '$v224'))"/>
   </xsl:template>
   <xsl:template name="L1R2P3S71">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR(('W01')),'NONE')-->
      <xsl:variable name="v225" select="string('W01')"/>
      <xsl:variable name="v226" select="xdoxslt:convert_case(string($v225), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string($v226))>3">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v227', substring(string($v226), 1,3))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v227', $v226)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R2P3S71', xdoxslt:get_variable($_XDOCTX, '$v227'))"/>
   </xsl:template>
   <xsl:template name="L1R2P1S72">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR((',')),'NONE')-->
      <xsl:variable name="v228" select="string(',')"/>
      <xsl:variable name="v229" select="xdoxslt:convert_case(string($v228), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string($v229))>1">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v230', substring(string($v229), 1,1))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v230', $v229)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R2P1S72', xdoxslt:get_variable($_XDOCTX, '$v230'))"/>
   </xsl:template>
   <xsl:template name="L1R2P15S73">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR(('F0000000200664')),'NONE')-->
      <xsl:variable name="v231" select="string('F0000000200664')"/>
      <xsl:variable name="v232" select="xdoxslt:convert_case(string($v231), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string($v232))>15">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v233', substring(string($v232), 1,15))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v233', $v232)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R2P15S73', xdoxslt:get_variable($_XDOCTX, '$v233'))"/>
   </xsl:template>
   <xsl:template name="SEQ_START_Bank Details3_RC">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: 0-->
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'SEQ_START_Bank Details3_RC_V', 0)"/>
   </xsl:template>
   <xsl:template name="L1R3P6S74">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR(('SECPTY')),'NONE')-->
      <xsl:variable name="v234" select="string('SECPTY')"/>
      <xsl:variable name="v235" select="xdoxslt:convert_case(string($v234), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string($v235))>6">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v236', substring(string($v235), 1,6))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v236', $v235)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R3P6S74', xdoxslt:get_variable($_XDOCTX, '$v236'))"/>
   </xsl:template>
   <xsl:template name="L1R3P1S75">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR((',')),'NONE')-->
      <xsl:variable name="v237" select="string(',')"/>
      <xsl:variable name="v238" select="xdoxslt:convert_case(string($v237), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string($v238))>1">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v239', substring(string($v238), 1,1))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v239', $v238)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R3P1S75', xdoxslt:get_variable($_XDOCTX, '$v239'))"/>
   </xsl:template>
   <xsl:template name="L1R3P23S76">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR((SECOND_PARTY_ACCOUNT_NUMBER)),'NONE')-->
      <xsl:variable name="v240" select="string(xdoxslt:normalize_string($_XDOCTX, .//SECOND_PARTY_ACCOUNT_NUMBER))"/>
      <xsl:variable name="v241" select="xdoxslt:convert_case(string($v240), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string($v241))>23">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v242', substring(string($v241), 1,23))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v242', $v241)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R3P23S76', xdoxslt:get_variable($_XDOCTX, '$v242'))"/>
   </xsl:template>
   <xsl:template name="L1R3P1S77">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR((',')),'NONE')-->
      <xsl:variable name="v243" select="string(',')"/>
      <xsl:variable name="v244" select="xdoxslt:convert_case(string($v243), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string($v244))>1">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v245', substring(string($v244), 1,1))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v245', $v244)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R3P1S77', xdoxslt:get_variable($_XDOCTX, '$v245'))"/>
   </xsl:template>
   <xsl:template name="L1R3P60S78">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR((SECOND_PARTY_MOL_ID)),'NONE')-->
      <xsl:variable name="v246" select="string(xdoxslt:normalize_string($_XDOCTX, .//SECOND_PARTY_MOL_ID))"/>
      <xsl:variable name="v247" select="xdoxslt:convert_case(string($v246), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string($v247))>60">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v248', substring(string($v247), 1,60))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v248', $v247)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R3P60S78', xdoxslt:get_variable($_XDOCTX, '$v248'))"/>
   </xsl:template>
   <xsl:template name="L1R3P1S79">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR((',')),'NONE')-->
      <xsl:variable name="v249" select="string(',')"/>
      <xsl:variable name="v250" select="xdoxslt:convert_case(string($v249), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string($v250))>1">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v251', substring(string($v250), 1,1))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v251', $v250)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R3P1S79', xdoxslt:get_variable($_XDOCTX, '$v251'))"/>
   </xsl:template>
   <xsl:template name="L1R3P8S80">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR((UNIQUE_ID)),'NONE')-->
      <xsl:variable name="v252" select="string(xdoxslt:normalize_string($_XDOCTX, .//UNIQUE_ID))"/>
      <xsl:variable name="v253" select="xdoxslt:convert_case(string($v252), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string($v253))>8">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v254', substring(string($v253), 1,8))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v254', $v253)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R3P8S80', xdoxslt:get_variable($_XDOCTX, '$v254'))"/>
   </xsl:template>
   <xsl:template name="L1R3P1S81">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR((',')),'NONE')-->
      <xsl:variable name="v255" select="string(',')"/>
      <xsl:variable name="v256" select="xdoxslt:convert_case(string($v255), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string($v256))>1">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v257', substring(string($v256), 1,1))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v257', $v256)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R3P1S81', xdoxslt:get_variable($_XDOCTX, '$v257'))"/>
   </xsl:template>
   <xsl:template name="L1R3P20S82">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR((BENEFICIARY_BANK_ID)),'NONE')-->
      <xsl:variable name="v258" select="string(xdoxslt:normalize_string($_XDOCTX, .//BENEFICIARY_BANK_ID))"/>
      <xsl:variable name="v259" select="xdoxslt:convert_case(string($v258), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string($v259))>20">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v260', substring(string($v259), 1,20))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v260', $v259)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R3P20S82', xdoxslt:get_variable($_XDOCTX, '$v260'))"/>
   </xsl:template>
   <xsl:template name="L1R3P1S83">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR((',')),'NONE')-->
      <xsl:variable name="v261" select="string(',')"/>
      <xsl:variable name="v262" select="xdoxslt:convert_case(string($v261), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string($v262))>1">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v263', substring(string($v262), 1,1))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v263', $v262)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R3P1S83', xdoxslt:get_variable($_XDOCTX, '$v263'))"/>
   </xsl:template>
   <xsl:template name="L1R3P5S84">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR((NULL)),'NONE')-->
      <xsl:variable name="v264" select="string('')"/>
      <xsl:variable name="v265" select="string($v264)"/>
      <xsl:variable name="v266" select="xdoxslt:convert_case(string($v265), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string($v266))>5">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v267', substring(string($v266), 1,5))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v267', $v266)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R3P5S84', xdoxslt:get_variable($_XDOCTX, '$v267'))"/>
   </xsl:template>
   <xsl:template name="L1R3P1S85">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR((',')),'NONE')-->
      <xsl:variable name="v268" select="string(',')"/>
      <xsl:variable name="v269" select="xdoxslt:convert_case(string($v268), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string($v269))>1">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v270', substring(string($v269), 1,1))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v270', $v269)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R3P1S85', xdoxslt:get_variable($_XDOCTX, '$v270'))"/>
   </xsl:template>
   <xsl:template name="L1R3P5S86">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR((NULL)),'NONE')-->
      <xsl:variable name="v271" select="string('')"/>
      <xsl:variable name="v272" select="string($v271)"/>
      <xsl:variable name="v273" select="xdoxslt:convert_case(string($v272), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string($v273))>5">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v274', substring(string($v273), 1,5))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v274', $v273)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R3P5S86', xdoxslt:get_variable($_XDOCTX, '$v274'))"/>
   </xsl:template>
   <xsl:template name="L1R3P1S87">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR((',')),'NONE')-->
      <xsl:variable name="v275" select="string(',')"/>
      <xsl:variable name="v276" select="xdoxslt:convert_case(string($v275), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string($v276))>1">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v277', substring(string($v276), 1,1))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v277', $v276)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R3P1S87', xdoxslt:get_variable($_XDOCTX, '$v277'))"/>
   </xsl:template>
   <xsl:template name="L1R3P15S88">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR((CF_NET_PAY)),'NONE')-->
      <xsl:variable name="v278" select="string(xdoxslt:normalize_string($_XDOCTX, .//CF_NET_PAY))"/>
      <xsl:variable name="v279" select="xdoxslt:convert_case(string($v278), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string($v279))>15">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v280', substring(string($v279), 1,15))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v280', $v279)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R3P15S88', xdoxslt:get_variable($_XDOCTX, '$v280'))"/>
   </xsl:template>
   <xsl:template name="L1R3P1S89">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR((',')),'NONE')-->
      <xsl:variable name="v281" select="string(',')"/>
      <xsl:variable name="v282" select="xdoxslt:convert_case(string($v281), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string($v282))>1">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v283', substring(string($v282), 1,1))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v283', $v282)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R3P1S89', xdoxslt:get_variable($_XDOCTX, '$v283'))"/>
   </xsl:template>
   <xsl:template name="L1R3P5S90">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR((NULL)),'NONE')-->
      <xsl:variable name="v284" select="string('')"/>
      <xsl:variable name="v285" select="string($v284)"/>
      <xsl:variable name="v286" select="xdoxslt:convert_case(string($v285), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string($v286))>5">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v287', substring(string($v286), 1,5))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v287', $v286)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R3P5S90', xdoxslt:get_variable($_XDOCTX, '$v287'))"/>
   </xsl:template>
   <xsl:template name="L1R3P1S91">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR((',')),'NONE')-->
      <xsl:variable name="v288" select="string(',')"/>
      <xsl:variable name="v289" select="xdoxslt:convert_case(string($v288), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string($v289))>1">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v290', substring(string($v289), 1,1))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v290', $v289)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R3P1S91', xdoxslt:get_variable($_XDOCTX, '$v290'))"/>
   </xsl:template>
   <xsl:template name="L1R3P20S92">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR((CODE)),'NONE')-->
      <xsl:variable name="v291" select="string(xdoxslt:normalize_string($_XDOCTX, .//CODE))"/>
      <xsl:variable name="v292" select="xdoxslt:convert_case(string($v291), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string($v292))>20">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v293', substring(string($v292), 1,20))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v293', $v292)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R3P20S92', xdoxslt:get_variable($_XDOCTX, '$v293'))"/>
   </xsl:template>
   <xsl:template name="L1R3P1S93">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR((',')),'NONE')-->
      <xsl:variable name="v294" select="string(',')"/>
      <xsl:variable name="v295" select="xdoxslt:convert_case(string($v294), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string($v295))>1">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v296', substring(string($v295), 1,1))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v296', $v295)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R3P1S93', xdoxslt:get_variable($_XDOCTX, '$v296'))"/>
   </xsl:template>
   <xsl:template name="L1R3P5S94">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR((NULL)),'NONE')-->
      <xsl:variable name="v297" select="string('')"/>
      <xsl:variable name="v298" select="string($v297)"/>
      <xsl:variable name="v299" select="xdoxslt:convert_case(string($v298), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string($v299))>5">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v300', substring(string($v299), 1,5))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v300', $v299)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R3P5S94', xdoxslt:get_variable($_XDOCTX, '$v300'))"/>
   </xsl:template>
   <xsl:template name="L1R3P1S95">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR((',')),'NONE')-->
      <xsl:variable name="v301" select="string(',')"/>
      <xsl:variable name="v302" select="xdoxslt:convert_case(string($v301), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string($v302))>1">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v303', substring(string($v302), 1,1))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v303', $v302)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R3P1S95', xdoxslt:get_variable($_XDOCTX, '$v303'))"/>
   </xsl:template>
   <xsl:template name="L1R3P5S96">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR((NULL)),'NONE')-->
      <xsl:variable name="v304" select="string('')"/>
      <xsl:variable name="v305" select="string($v304)"/>
      <xsl:variable name="v306" select="xdoxslt:convert_case(string($v305), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string($v306))>5">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v307', substring(string($v306), 1,5))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v307', $v306)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R3P5S96', xdoxslt:get_variable($_XDOCTX, '$v307'))"/>
   </xsl:template>
   <xsl:template name="L1R3P1S97">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR((',')),'NONE')-->
      <xsl:variable name="v308" select="string(',')"/>
      <xsl:variable name="v309" select="xdoxslt:convert_case(string($v308), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string($v309))>1">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v310', substring(string($v309), 1,1))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v310', $v309)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R3P1S97', xdoxslt:get_variable($_XDOCTX, '$v310'))"/>
   </xsl:template>
   <xsl:template name="L1R3P5S98">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR((NULL)),'NONE')-->
      <xsl:variable name="v311" select="string('')"/>
      <xsl:variable name="v312" select="string($v311)"/>
      <xsl:variable name="v313" select="xdoxslt:convert_case(string($v312), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string($v313))>5">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v314', substring(string($v313), 1,5))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v314', $v313)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R3P5S98', xdoxslt:get_variable($_XDOCTX, '$v314'))"/>
   </xsl:template>
   <xsl:template name="L1R3P1S99">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR((',')),'NONE')-->
      <xsl:variable name="v315" select="string(',')"/>
      <xsl:variable name="v316" select="xdoxslt:convert_case(string($v315), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string($v316))>1">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v317', substring(string($v316), 1,1))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v317', $v316)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R3P1S99', xdoxslt:get_variable($_XDOCTX, '$v317'))"/>
   </xsl:template>
   <xsl:template name="L1R3P5S100">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR((NULL)),'NONE')-->
      <xsl:variable name="v318" select="string('')"/>
      <xsl:variable name="v319" select="string($v318)"/>
      <xsl:variable name="v320" select="xdoxslt:convert_case(string($v319), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string($v320))>5">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v321', substring(string($v320), 1,5))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v321', $v320)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R3P5S100', xdoxslt:get_variable($_XDOCTX, '$v321'))"/>
   </xsl:template>
   <xsl:template name="L1R3P1S101">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR((',')),'NONE')-->
      <xsl:variable name="v322" select="string(',')"/>
      <xsl:variable name="v323" select="xdoxslt:convert_case(string($v322), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string($v323))>1">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v324', substring(string($v323), 1,1))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v324', $v323)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R3P1S101', xdoxslt:get_variable($_XDOCTX, '$v324'))"/>
   </xsl:template>
   <xsl:template name="L1R3P1S102">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR(('N')),'NONE')-->
      <xsl:variable name="v325" select="string('N')"/>
      <xsl:variable name="v326" select="xdoxslt:convert_case(string($v325), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string($v326))>1">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v327', substring(string($v326), 1,1))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v327', $v326)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R3P1S102', xdoxslt:get_variable($_XDOCTX, '$v327'))"/>
   </xsl:template>
   <xsl:template name="L1R3P1S103">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR((',')),'NONE')-->
      <xsl:variable name="v328" select="string(',')"/>
      <xsl:variable name="v329" select="xdoxslt:convert_case(string($v328), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string($v329))>1">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v330', substring(string($v329), 1,1))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v330', $v329)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R3P1S103', xdoxslt:get_variable($_XDOCTX, '$v330'))"/>
   </xsl:template>
   <xsl:template name="L1R3P1S104">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR(('N')),'NONE')-->
      <xsl:variable name="v331" select="string('N')"/>
      <xsl:variable name="v332" select="xdoxslt:convert_case(string($v331), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string($v332))>1">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v333', substring(string($v332), 1,1))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v333', $v332)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R3P1S104', xdoxslt:get_variable($_XDOCTX, '$v333'))"/>
   </xsl:template>
   <xsl:template name="L1R3P1S105">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR((',')),'NONE')-->
      <xsl:variable name="v334" select="string(',')"/>
      <xsl:variable name="v335" select="xdoxslt:convert_case(string($v334), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string($v335))>1">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v336', substring(string($v335), 1,1))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v336', $v335)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R3P1S105', xdoxslt:get_variable($_XDOCTX, '$v336'))"/>
   </xsl:template>
   <xsl:template name="L1R3P5S106">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR((NULL)),'NONE')-->
      <xsl:variable name="v337" select="string('')"/>
      <xsl:variable name="v338" select="string($v337)"/>
      <xsl:variable name="v339" select="xdoxslt:convert_case(string($v338), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string($v339))>5">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v340', substring(string($v339), 1,5))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v340', $v339)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R3P5S106', xdoxslt:get_variable($_XDOCTX, '$v340'))"/>
   </xsl:template>
   <xsl:template name="L1R3P1S107">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR((',')),'NONE')-->
      <xsl:variable name="v341" select="string(',')"/>
      <xsl:variable name="v342" select="xdoxslt:convert_case(string($v341), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string($v342))>1">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v343', substring(string($v342), 1,1))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v343', $v342)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R3P1S107', xdoxslt:get_variable($_XDOCTX, '$v343'))"/>
   </xsl:template>
   <xsl:template name="L1R3P5S108">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR((NULL)),'NONE')-->
      <xsl:variable name="v344" select="string('')"/>
      <xsl:variable name="v345" select="string($v344)"/>
      <xsl:variable name="v346" select="xdoxslt:convert_case(string($v345), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string($v346))>5">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v347', substring(string($v346), 1,5))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v347', $v346)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R3P5S108', xdoxslt:get_variable($_XDOCTX, '$v347'))"/>
   </xsl:template>
   <xsl:template name="L1R3P1S109">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR((',')),'NONE')-->
      <xsl:variable name="v348" select="string(',')"/>
      <xsl:variable name="v349" select="xdoxslt:convert_case(string($v348), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string($v349))>1">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v350', substring(string($v349), 1,1))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v350', $v349)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R3P1S109', xdoxslt:get_variable($_XDOCTX, '$v350'))"/>
   </xsl:template>
   <xsl:template name="L1R3P5S110">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR((NULL)),'NONE')-->
      <xsl:variable name="v351" select="string('')"/>
      <xsl:variable name="v352" select="string($v351)"/>
      <xsl:variable name="v353" select="xdoxslt:convert_case(string($v352), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string($v353))>5">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v354', substring(string($v353), 1,5))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v354', $v353)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R3P5S110', xdoxslt:get_variable($_XDOCTX, '$v354'))"/>
   </xsl:template>
   <xsl:template name="L1R3P1S111">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR((',')),'NONE')-->
      <xsl:variable name="v355" select="string(',')"/>
      <xsl:variable name="v356" select="xdoxslt:convert_case(string($v355), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string($v356))>1">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v357', substring(string($v356), 1,1))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v357', $v356)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R3P1S111', xdoxslt:get_variable($_XDOCTX, '$v357'))"/>
   </xsl:template>
   <xsl:template name="L1R3P5S112">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR((NULL)),'NONE')-->
      <xsl:variable name="v358" select="string('')"/>
      <xsl:variable name="v359" select="string($v358)"/>
      <xsl:variable name="v360" select="xdoxslt:convert_case(string($v359), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string($v360))>5">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v361', substring(string($v360), 1,5))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v361', $v360)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R3P5S112', xdoxslt:get_variable($_XDOCTX, '$v361'))"/>
   </xsl:template>
   <xsl:template name="L1R3P1S113">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR((',')),'NONE')-->
      <xsl:variable name="v362" select="string(',')"/>
      <xsl:variable name="v363" select="xdoxslt:convert_case(string($v362), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string($v363))>1">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v364', substring(string($v363), 1,1))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v364', $v363)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R3P1S113', xdoxslt:get_variable($_XDOCTX, '$v364'))"/>
   </xsl:template>
   <xsl:template name="L1R3P5S114">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR((NULL)),'NONE')-->
      <xsl:variable name="v365" select="string('')"/>
      <xsl:variable name="v366" select="string($v365)"/>
      <xsl:variable name="v367" select="xdoxslt:convert_case(string($v366), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string($v367))>5">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v368', substring(string($v367), 1,5))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v368', $v367)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R3P5S114', xdoxslt:get_variable($_XDOCTX, '$v368'))"/>
   </xsl:template>
   <xsl:template name="L1R3P1S115">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR((',')),'NONE')-->
      <xsl:variable name="v369" select="string(',')"/>
      <xsl:variable name="v370" select="xdoxslt:convert_case(string($v369), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string($v370))>1">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v371', substring(string($v370), 1,1))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v371', $v370)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R3P1S115', xdoxslt:get_variable($_XDOCTX, '$v371'))"/>
   </xsl:template>
   <xsl:template name="L1R3P5S116">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR(('@LVP@')),'NONE')-->
      <xsl:variable name="v372" select="string('@LVP@')"/>
      <xsl:variable name="v373" select="xdoxslt:convert_case(string($v372), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string($v373))>5">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v374', substring(string($v373), 1,5))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v374', $v373)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R3P5S116', xdoxslt:get_variable($_XDOCTX, '$v374'))"/>
   </xsl:template>
   <xsl:template name="L1R3P1S117">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR((',')),'NONE')-->
      <xsl:variable name="v375" select="string(',')"/>
      <xsl:variable name="v376" select="xdoxslt:convert_case(string($v375), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string($v376))>1">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v377', substring(string($v376), 1,1))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v377', $v376)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R3P1S117', xdoxslt:get_variable($_XDOCTX, '$v377'))"/>
   </xsl:template>
   <xsl:template name="L1R3P5S118">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR((NULL)),'NONE')-->
      <xsl:variable name="v378" select="string('')"/>
      <xsl:variable name="v379" select="string($v378)"/>
      <xsl:variable name="v380" select="xdoxslt:convert_case(string($v379), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string($v380))>5">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v381', substring(string($v380), 1,5))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v381', $v380)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R3P5S118', xdoxslt:get_variable($_XDOCTX, '$v381'))"/>
   </xsl:template>
   <xsl:template name="L1R3P1S119">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR((',')),'NONE')-->
      <xsl:variable name="v382" select="string(',')"/>
      <xsl:variable name="v383" select="xdoxslt:convert_case(string($v382), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string($v383))>1">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v384', substring(string($v383), 1,1))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v384', $v383)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R3P1S119', xdoxslt:get_variable($_XDOCTX, '$v384'))"/>
   </xsl:template>
   <xsl:template name="L1R3P5S120">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR((NULL)),'NONE')-->
      <xsl:variable name="v385" select="string('')"/>
      <xsl:variable name="v386" select="string($v385)"/>
      <xsl:variable name="v387" select="xdoxslt:convert_case(string($v386), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string($v387))>5">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v388', substring(string($v387), 1,5))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v388', $v387)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R3P5S120', xdoxslt:get_variable($_XDOCTX, '$v388'))"/>
   </xsl:template>
   <xsl:template name="L1R3P1S121">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR((',')),'NONE')-->
      <xsl:variable name="v389" select="string(',')"/>
      <xsl:variable name="v390" select="xdoxslt:convert_case(string($v389), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string($v390))>1">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v391', substring(string($v390), 1,1))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v391', $v390)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R3P1S121', xdoxslt:get_variable($_XDOCTX, '$v391'))"/>
   </xsl:template>
   <xsl:template name="L1R3P5S122">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR((NULL)),'NONE')-->
      <xsl:variable name="v392" select="string('')"/>
      <xsl:variable name="v393" select="string($v392)"/>
      <xsl:variable name="v394" select="xdoxslt:convert_case(string($v393), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string($v394))>5">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v395', substring(string($v394), 1,5))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v395', $v394)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R3P5S122', xdoxslt:get_variable($_XDOCTX, '$v395'))"/>
   </xsl:template>
   <xsl:template name="L1R3P1S123">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR((',')),'NONE')-->
      <xsl:variable name="v396" select="string(',')"/>
      <xsl:variable name="v397" select="xdoxslt:convert_case(string($v396), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string($v397))>1">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v398', substring(string($v397), 1,1))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v398', $v397)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R3P1S123', xdoxslt:get_variable($_XDOCTX, '$v398'))"/>
   </xsl:template>
   <xsl:template name="L1R3P5S124">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR((NULL)),'NONE')-->
      <xsl:variable name="v399" select="string('')"/>
      <xsl:variable name="v400" select="string($v399)"/>
      <xsl:variable name="v401" select="xdoxslt:convert_case(string($v400), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string($v401))>5">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v402', substring(string($v401), 1,5))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v402', $v401)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R3P5S124', xdoxslt:get_variable($_XDOCTX, '$v402'))"/>
   </xsl:template>
   <xsl:template name="L1R3P1S125">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR((',')),'NONE')-->
      <xsl:variable name="v403" select="string(',')"/>
      <xsl:variable name="v404" select="xdoxslt:convert_case(string($v403), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string($v404))>1">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v405', substring(string($v404), 1,1))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v405', $v404)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R3P1S125', xdoxslt:get_variable($_XDOCTX, '$v405'))"/>
   </xsl:template>
   <xsl:template name="L1R3P5S126">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR((NULL)),'NONE')-->
      <xsl:variable name="v406" select="string('')"/>
      <xsl:variable name="v407" select="string($v406)"/>
      <xsl:variable name="v408" select="xdoxslt:convert_case(string($v407), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string($v408))>5">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v409', substring(string($v408), 1,5))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v409', $v408)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R3P5S126', xdoxslt:get_variable($_XDOCTX, '$v409'))"/>
   </xsl:template>
   <xsl:template name="L1R3P1S127">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR((',')),'NONE')-->
      <xsl:variable name="v410" select="string(',')"/>
      <xsl:variable name="v411" select="xdoxslt:convert_case(string($v410), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string($v411))>1">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v412', substring(string($v411), 1,1))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v412', $v411)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R3P1S127', xdoxslt:get_variable($_XDOCTX, '$v412'))"/>
   </xsl:template>
   <xsl:template name="L1R3P5S128">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR((NULL)),'NONE')-->
      <xsl:variable name="v413" select="string('')"/>
      <xsl:variable name="v414" select="string($v413)"/>
      <xsl:variable name="v415" select="xdoxslt:convert_case(string($v414), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string($v415))>5">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v416', substring(string($v415), 1,5))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v416', $v415)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R3P5S128', xdoxslt:get_variable($_XDOCTX, '$v416'))"/>
   </xsl:template>
   <xsl:template name="L1R3P1S129">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR((',')),'NONE')-->
      <xsl:variable name="v417" select="string(',')"/>
      <xsl:variable name="v418" select="xdoxslt:convert_case(string($v417), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string($v418))>1">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v419', substring(string($v418), 1,1))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v419', $v418)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R3P1S129', xdoxslt:get_variable($_XDOCTX, '$v419'))"/>
   </xsl:template>
   <xsl:template name="L1R3P5S130">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR((NULL)),'NONE')-->
      <xsl:variable name="v420" select="string('')"/>
      <xsl:variable name="v421" select="string($v420)"/>
      <xsl:variable name="v422" select="xdoxslt:convert_case(string($v421), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string($v422))>5">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v423', substring(string($v422), 1,5))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v423', $v422)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R3P5S130', xdoxslt:get_variable($_XDOCTX, '$v423'))"/>
   </xsl:template>
   <xsl:template name="L1R3P1S131">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR((',')),'NONE')-->
      <xsl:variable name="v424" select="string(',')"/>
      <xsl:variable name="v425" select="xdoxslt:convert_case(string($v424), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string($v425))>1">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v426', substring(string($v425), 1,1))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v426', $v425)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R3P1S131', xdoxslt:get_variable($_XDOCTX, '$v426'))"/>
   </xsl:template>
   <xsl:template name="L1R3P5S132">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR((NULL)),'NONE')-->
      <xsl:variable name="v427" select="string('')"/>
      <xsl:variable name="v428" select="string($v427)"/>
      <xsl:variable name="v429" select="xdoxslt:convert_case(string($v428), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string($v429))>5">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v430', substring(string($v429), 1,5))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v430', $v429)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R3P5S132', xdoxslt:get_variable($_XDOCTX, '$v430'))"/>
   </xsl:template>
   <xsl:template name="L1R3P1S133">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR((',')),'NONE')-->
      <xsl:variable name="v431" select="string(',')"/>
      <xsl:variable name="v432" select="xdoxslt:convert_case(string($v431), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string($v432))>1">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v433', substring(string($v432), 1,1))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v433', $v432)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R3P1S133', xdoxslt:get_variable($_XDOCTX, '$v433'))"/>
   </xsl:template>
   <xsl:template name="L1R3P5S134">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR((NULL)),'NONE')-->
      <xsl:variable name="v434" select="string('')"/>
      <xsl:variable name="v435" select="string($v434)"/>
      <xsl:variable name="v436" select="xdoxslt:convert_case(string($v435), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string($v436))>5">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v437', substring(string($v436), 1,5))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v437', $v436)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R3P5S134', xdoxslt:get_variable($_XDOCTX, '$v437'))"/>
   </xsl:template>
   <xsl:template name="L1R3P1S135">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR((',')),'NONE')-->
      <xsl:variable name="v438" select="string(',')"/>
      <xsl:variable name="v439" select="xdoxslt:convert_case(string($v438), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string($v439))>1">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v440', substring(string($v439), 1,1))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v440', $v439)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R3P1S135', xdoxslt:get_variable($_XDOCTX, '$v440'))"/>
   </xsl:template>
   <xsl:template name="L1R3P5S136">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR((NULL)),'NONE')-->
      <xsl:variable name="v441" select="string('')"/>
      <xsl:variable name="v442" select="string($v441)"/>
      <xsl:variable name="v443" select="xdoxslt:convert_case(string($v442), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string($v443))>5">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v444', substring(string($v443), 1,5))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v444', $v443)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R3P5S136', xdoxslt:get_variable($_XDOCTX, '$v444'))"/>
   </xsl:template>
   <xsl:template name="L1R3P1S137">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR((',')),'NONE')-->
      <xsl:variable name="v445" select="string(',')"/>
      <xsl:variable name="v446" select="xdoxslt:convert_case(string($v445), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string($v446))>1">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v447', substring(string($v446), 1,1))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v447', $v446)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R3P1S137', xdoxslt:get_variable($_XDOCTX, '$v447'))"/>
   </xsl:template>
   <xsl:template name="L1R3P5S138">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR((NULL)),'NONE')-->
      <xsl:variable name="v448" select="string('')"/>
      <xsl:variable name="v449" select="string($v448)"/>
      <xsl:variable name="v450" select="xdoxslt:convert_case(string($v449), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string($v450))>5">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v451', substring(string($v450), 1,5))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v451', $v450)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R3P5S138', xdoxslt:get_variable($_XDOCTX, '$v451'))"/>
   </xsl:template>
   <xsl:template name="L1R3P1S139">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR((',')),'NONE')-->
      <xsl:variable name="v452" select="string(',')"/>
      <xsl:variable name="v453" select="xdoxslt:convert_case(string($v452), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string($v453))>1">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v454', substring(string($v453), 1,1))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v454', $v453)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R3P1S139', xdoxslt:get_variable($_XDOCTX, '$v454'))"/>
   </xsl:template>
   <xsl:template name="L1R3P5S140">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR((NULL)),'NONE')-->
      <xsl:variable name="v455" select="string('')"/>
      <xsl:variable name="v456" select="string($v455)"/>
      <xsl:variable name="v457" select="xdoxslt:convert_case(string($v456), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string($v457))>5">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v458', substring(string($v457), 1,5))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v458', $v457)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R3P5S140', xdoxslt:get_variable($_XDOCTX, '$v458'))"/>
   </xsl:template>
   <xsl:template name="L1R3P1S141">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR((',')),'NONE')-->
      <xsl:variable name="v459" select="string(',')"/>
      <xsl:variable name="v460" select="xdoxslt:convert_case(string($v459), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string($v460))>1">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v461', substring(string($v460), 1,1))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v461', $v460)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R3P1S141', xdoxslt:get_variable($_XDOCTX, '$v461'))"/>
   </xsl:template>
   <xsl:template name="L1R3P5S142">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR((NULL)),'NONE')-->
      <xsl:variable name="v462" select="string('')"/>
      <xsl:variable name="v463" select="string($v462)"/>
      <xsl:variable name="v464" select="xdoxslt:convert_case(string($v463), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string($v464))>5">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v465', substring(string($v464), 1,5))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v465', $v464)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R3P5S142', xdoxslt:get_variable($_XDOCTX, '$v465'))"/>
   </xsl:template>
   <xsl:template name="L1R3P1S143">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR((',')),'NONE')-->
      <xsl:variable name="v466" select="string(',')"/>
      <xsl:variable name="v467" select="xdoxslt:convert_case(string($v466), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string($v467))>1">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v468', substring(string($v467), 1,1))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v468', $v467)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R3P1S143', xdoxslt:get_variable($_XDOCTX, '$v468'))"/>
   </xsl:template>
   <xsl:template name="L1R3P5S144">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR((NULL)),'NONE')-->
      <xsl:variable name="v469" select="string('')"/>
      <xsl:variable name="v470" select="string($v469)"/>
      <xsl:variable name="v471" select="xdoxslt:convert_case(string($v470), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string($v471))>5">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v472', substring(string($v471), 1,5))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v472', $v471)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R3P5S144', xdoxslt:get_variable($_XDOCTX, '$v472'))"/>
   </xsl:template>
   <xsl:template name="L1R3P1S145">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR((',')),'NONE')-->
      <xsl:variable name="v473" select="string(',')"/>
      <xsl:variable name="v474" select="xdoxslt:convert_case(string($v473), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string($v474))>1">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v475', substring(string($v474), 1,1))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v475', $v474)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R3P1S145', xdoxslt:get_variable($_XDOCTX, '$v475'))"/>
   </xsl:template>
   <xsl:template name="L1R3P5S146">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR((NULL)),'NONE')-->
      <xsl:variable name="v476" select="string('')"/>
      <xsl:variable name="v477" select="string($v476)"/>
      <xsl:variable name="v478" select="xdoxslt:convert_case(string($v477), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string($v478))>5">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v479', substring(string($v478), 1,5))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v479', $v478)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R3P5S146', xdoxslt:get_variable($_XDOCTX, '$v479'))"/>
   </xsl:template>
   <xsl:template name="L1R3P1S147">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR((',')),'NONE')-->
      <xsl:variable name="v480" select="string(',')"/>
      <xsl:variable name="v481" select="xdoxslt:convert_case(string($v480), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string($v481))>1">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v482', substring(string($v481), 1,1))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v482', $v481)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R3P1S147', xdoxslt:get_variable($_XDOCTX, '$v482'))"/>
   </xsl:template>
   <xsl:template name="L1R3P5S148">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR((NULL)),'NONE')-->
      <xsl:variable name="v483" select="string('')"/>
      <xsl:variable name="v484" select="string($v483)"/>
      <xsl:variable name="v485" select="xdoxslt:convert_case(string($v484), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string($v485))>5">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v486', substring(string($v485), 1,5))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v486', $v485)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R3P5S148', xdoxslt:get_variable($_XDOCTX, '$v486'))"/>
   </xsl:template>
   <xsl:template name="L1R3P1S149">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR((',')),'NONE')-->
      <xsl:variable name="v487" select="string(',')"/>
      <xsl:variable name="v488" select="xdoxslt:convert_case(string($v487), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string($v488))>1">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v489', substring(string($v488), 1,1))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v489', $v488)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R3P1S149', xdoxslt:get_variable($_XDOCTX, '$v489'))"/>
   </xsl:template>
   <xsl:template name="L1R3P5S150">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR((NULL)),'NONE')-->
      <xsl:variable name="v490" select="string('')"/>
      <xsl:variable name="v491" select="string($v490)"/>
      <xsl:variable name="v492" select="xdoxslt:convert_case(string($v491), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string($v492))>5">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v493', substring(string($v492), 1,5))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v493', $v492)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R3P5S150', xdoxslt:get_variable($_XDOCTX, '$v493'))"/>
   </xsl:template>
   <xsl:template name="L1R3P1S151">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR((',')),'NONE')-->
      <xsl:variable name="v494" select="string(',')"/>
      <xsl:variable name="v495" select="xdoxslt:convert_case(string($v494), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string($v495))>1">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v496', substring(string($v495), 1,1))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v496', $v495)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R3P1S151', xdoxslt:get_variable($_XDOCTX, '$v496'))"/>
   </xsl:template>
   <xsl:template name="L1R3P5S152">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR((NULL)),'NONE')-->
      <xsl:variable name="v497" select="string('')"/>
      <xsl:variable name="v498" select="string($v497)"/>
      <xsl:variable name="v499" select="xdoxslt:convert_case(string($v498), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string($v499))>5">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v500', substring(string($v499), 1,5))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v500', $v499)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R3P5S152', xdoxslt:get_variable($_XDOCTX, '$v500'))"/>
   </xsl:template>
   <xsl:template name="L1R3P1S153">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR((',')),'NONE')-->
      <xsl:variable name="v501" select="string(',')"/>
      <xsl:variable name="v502" select="xdoxslt:convert_case(string($v501), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string($v502))>1">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v503', substring(string($v502), 1,1))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v503', $v502)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R3P1S153', xdoxslt:get_variable($_XDOCTX, '$v503'))"/>
   </xsl:template>
   <xsl:template name="L1R3P5S154">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR((NULL)),'NONE')-->
      <xsl:variable name="v504" select="string('')"/>
      <xsl:variable name="v505" select="string($v504)"/>
      <xsl:variable name="v506" select="xdoxslt:convert_case(string($v505), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string($v506))>5">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v507', substring(string($v506), 1,5))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v507', $v506)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R3P5S154', xdoxslt:get_variable($_XDOCTX, '$v507'))"/>
   </xsl:template>
   <xsl:template name="L1R3P1S155">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR((',')),'NONE')-->
      <xsl:variable name="v508" select="string(',')"/>
      <xsl:variable name="v509" select="xdoxslt:convert_case(string($v508), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string($v509))>1">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v510', substring(string($v509), 1,1))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v510', $v509)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R3P1S155', xdoxslt:get_variable($_XDOCTX, '$v510'))"/>
   </xsl:template>
   <xsl:template name="L1R3P5S156">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR((NULL)),'NONE')-->
      <xsl:variable name="v511" select="string('')"/>
      <xsl:variable name="v512" select="string($v511)"/>
      <xsl:variable name="v513" select="xdoxslt:convert_case(string($v512), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string($v513))>5">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v514', substring(string($v513), 1,5))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v514', $v513)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R3P5S156', xdoxslt:get_variable($_XDOCTX, '$v514'))"/>
   </xsl:template>
   <xsl:template name="L1R3P1S157">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR((',')),'NONE')-->
      <xsl:variable name="v515" select="string(',')"/>
      <xsl:variable name="v516" select="xdoxslt:convert_case(string($v515), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string($v516))>1">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v517', substring(string($v516), 1,1))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v517', $v516)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R3P1S157', xdoxslt:get_variable($_XDOCTX, '$v517'))"/>
   </xsl:template>
   <xsl:template name="L1R3P5S158">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR((NULL)),'NONE')-->
      <xsl:variable name="v518" select="string('')"/>
      <xsl:variable name="v519" select="string($v518)"/>
      <xsl:variable name="v520" select="xdoxslt:convert_case(string($v519), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string($v520))>5">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v521', substring(string($v520), 1,5))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v521', $v520)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R3P5S158', xdoxslt:get_variable($_XDOCTX, '$v521'))"/>
   </xsl:template>
   <xsl:template name="L1R3P1S159">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR((',')),'NONE')-->
      <xsl:variable name="v522" select="string(',')"/>
      <xsl:variable name="v523" select="xdoxslt:convert_case(string($v522), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string($v523))>1">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v524', substring(string($v523), 1,1))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v524', $v523)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R3P1S159', xdoxslt:get_variable($_XDOCTX, '$v524'))"/>
   </xsl:template>
   <xsl:template name="L1R3P5S160">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR((NULL)),'NONE')-->
      <xsl:variable name="v525" select="string('')"/>
      <xsl:variable name="v526" select="string($v525)"/>
      <xsl:variable name="v527" select="xdoxslt:convert_case(string($v526), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string($v527))>5">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v528', substring(string($v527), 1,5))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v528', $v527)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R3P5S160', xdoxslt:get_variable($_XDOCTX, '$v528'))"/>
   </xsl:template>
   <xsl:template name="L1R3P1S161">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR((',')),'NONE')-->
      <xsl:variable name="v529" select="string(',')"/>
      <xsl:variable name="v530" select="xdoxslt:convert_case(string($v529), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string($v530))>1">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v531', substring(string($v530), 1,1))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v531', $v530)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R3P1S161', xdoxslt:get_variable($_XDOCTX, '$v531'))"/>
   </xsl:template>
   <xsl:template name="L1R3P5S162">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR((NULL)),'NONE')-->
      <xsl:variable name="v532" select="string('')"/>
      <xsl:variable name="v533" select="string($v532)"/>
      <xsl:variable name="v534" select="xdoxslt:convert_case(string($v533), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string($v534))>5">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v535', substring(string($v534), 1,5))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v535', $v534)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R3P5S162', xdoxslt:get_variable($_XDOCTX, '$v535'))"/>
   </xsl:template>
   <xsl:template name="L1R3P1S163">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR((',')),'NONE')-->
      <xsl:variable name="v536" select="string(',')"/>
      <xsl:variable name="v537" select="xdoxslt:convert_case(string($v536), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string($v537))>1">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v538', substring(string($v537), 1,1))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v538', $v537)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R3P1S163', xdoxslt:get_variable($_XDOCTX, '$v538'))"/>
   </xsl:template>
   <xsl:template name="L1R3P5S164">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR((NULL)),'NONE')-->
      <xsl:variable name="v539" select="string('')"/>
      <xsl:variable name="v540" select="string($v539)"/>
      <xsl:variable name="v541" select="xdoxslt:convert_case(string($v540), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string($v541))>5">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v542', substring(string($v541), 1,5))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v542', $v541)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R3P5S164', xdoxslt:get_variable($_XDOCTX, '$v542'))"/>
   </xsl:template>
   <xsl:template name="L1R3P1S165">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR((',')),'NONE')-->
      <xsl:variable name="v543" select="string(',')"/>
      <xsl:variable name="v544" select="xdoxslt:convert_case(string($v543), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string($v544))>1">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v545', substring(string($v544), 1,1))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v545', $v544)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R3P1S165', xdoxslt:get_variable($_XDOCTX, '$v545'))"/>
   </xsl:template>
   <xsl:template name="L1R3P5S166">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR((NULL)),'NONE')-->
      <xsl:variable name="v546" select="string('')"/>
      <xsl:variable name="v547" select="string($v546)"/>
      <xsl:variable name="v548" select="xdoxslt:convert_case(string($v547), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string($v548))>5">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v549', substring(string($v548), 1,5))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v549', $v548)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R3P5S166', xdoxslt:get_variable($_XDOCTX, '$v549'))"/>
   </xsl:template>
   <xsl:template name="L1R3P1S167">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR((',')),'NONE')-->
      <xsl:variable name="v550" select="string(',')"/>
      <xsl:variable name="v551" select="xdoxslt:convert_case(string($v550), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string($v551))>1">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v552', substring(string($v551), 1,1))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v552', $v551)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R3P1S167', xdoxslt:get_variable($_XDOCTX, '$v552'))"/>
   </xsl:template>
   <xsl:template name="L1R3P5S168">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR((NULL)),'NONE')-->
      <xsl:variable name="v553" select="string('')"/>
      <xsl:variable name="v554" select="string($v553)"/>
      <xsl:variable name="v555" select="xdoxslt:convert_case(string($v554), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string($v555))>5">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v556', substring(string($v555), 1,5))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v556', $v555)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R3P5S168', xdoxslt:get_variable($_XDOCTX, '$v556'))"/>
   </xsl:template>
   <xsl:template name="L1R3P1S169">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR((',')),'NONE')-->
      <xsl:variable name="v557" select="string(',')"/>
      <xsl:variable name="v558" select="xdoxslt:convert_case(string($v557), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string($v558))>1">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v559', substring(string($v558), 1,1))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v559', $v558)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R3P1S169', xdoxslt:get_variable($_XDOCTX, '$v559'))"/>
   </xsl:template>
   <xsl:template name="L1R3P5S170">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR((NULL)),'NONE')-->
      <xsl:variable name="v560" select="string('')"/>
      <xsl:variable name="v561" select="string($v560)"/>
      <xsl:variable name="v562" select="xdoxslt:convert_case(string($v561), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string($v562))>5">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v563', substring(string($v562), 1,5))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v563', $v562)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R3P5S170', xdoxslt:get_variable($_XDOCTX, '$v563'))"/>
   </xsl:template>
   <xsl:template name="L1R3P1S171">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR((',')),'NONE')-->
      <xsl:variable name="v564" select="string(',')"/>
      <xsl:variable name="v565" select="xdoxslt:convert_case(string($v564), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string($v565))>1">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v566', substring(string($v565), 1,1))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v566', $v565)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R3P1S171', xdoxslt:get_variable($_XDOCTX, '$v566'))"/>
   </xsl:template>
   <xsl:template name="L1R3P5S172">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR((NULL)),'NONE')-->
      <xsl:variable name="v567" select="string('')"/>
      <xsl:variable name="v568" select="string($v567)"/>
      <xsl:variable name="v569" select="xdoxslt:convert_case(string($v568), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string($v569))>5">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v570', substring(string($v569), 1,5))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v570', $v569)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R3P5S172', xdoxslt:get_variable($_XDOCTX, '$v570'))"/>
   </xsl:template>
   <xsl:template name="L1R3P1S173">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR((',')),'NONE')-->
      <xsl:variable name="v571" select="string(',')"/>
      <xsl:variable name="v572" select="xdoxslt:convert_case(string($v571), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string($v572))>1">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v573', substring(string($v572), 1,1))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v573', $v572)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R3P1S173', xdoxslt:get_variable($_XDOCTX, '$v573'))"/>
   </xsl:template>
   <xsl:template name="L1R3P5S174">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR((NULL)),'NONE')-->
      <xsl:variable name="v574" select="string('')"/>
      <xsl:variable name="v575" select="string($v574)"/>
      <xsl:variable name="v576" select="xdoxslt:convert_case(string($v575), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string($v576))>5">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v577', substring(string($v576), 1,5))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v577', $v576)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R3P5S174', xdoxslt:get_variable($_XDOCTX, '$v577'))"/>
   </xsl:template>
   <xsl:template name="L1R3P1S175">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR((',')),'NONE')-->
      <xsl:variable name="v578" select="string(',')"/>
      <xsl:variable name="v579" select="xdoxslt:convert_case(string($v578), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string($v579))>1">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v580', substring(string($v579), 1,1))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v580', $v579)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R3P1S175', xdoxslt:get_variable($_XDOCTX, '$v580'))"/>
   </xsl:template>
   <xsl:template name="L1R3P5S176">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR((NULL)),'NONE')-->
      <xsl:variable name="v581" select="string('')"/>
      <xsl:variable name="v582" select="string($v581)"/>
      <xsl:variable name="v583" select="xdoxslt:convert_case(string($v582), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string($v583))>5">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v584', substring(string($v583), 1,5))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v584', $v583)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R3P5S176', xdoxslt:get_variable($_XDOCTX, '$v584'))"/>
   </xsl:template>
   <xsl:template name="L1R3P1S177">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR((',')),'NONE')-->
      <xsl:variable name="v585" select="string(',')"/>
      <xsl:variable name="v586" select="xdoxslt:convert_case(string($v585), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string($v586))>1">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v587', substring(string($v586), 1,1))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v587', $v586)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R3P1S177', xdoxslt:get_variable($_XDOCTX, '$v587'))"/>
   </xsl:template>
   <xsl:template name="L1R3P5S178">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR((NULL)),'NONE')-->
      <xsl:variable name="v588" select="string('')"/>
      <xsl:variable name="v589" select="string($v588)"/>
      <xsl:variable name="v590" select="xdoxslt:convert_case(string($v589), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string($v590))>5">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v591', substring(string($v590), 1,5))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v591', $v590)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R3P5S178', xdoxslt:get_variable($_XDOCTX, '$v591'))"/>
   </xsl:template>
   <xsl:template name="L1R3P1S179">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR((',')),'NONE')-->
      <xsl:variable name="v592" select="string(',')"/>
      <xsl:variable name="v593" select="xdoxslt:convert_case(string($v592), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string($v593))>1">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v594', substring(string($v593), 1,1))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v594', $v593)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R3P1S179', xdoxslt:get_variable($_XDOCTX, '$v594'))"/>
   </xsl:template>
   <xsl:template name="L1R3P5S180">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR((NULL)),'NONE')-->
      <xsl:variable name="v595" select="string('')"/>
      <xsl:variable name="v596" select="string($v595)"/>
      <xsl:variable name="v597" select="xdoxslt:convert_case(string($v596), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string($v597))>5">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v598', substring(string($v597), 1,5))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v598', $v597)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R3P5S180', xdoxslt:get_variable($_XDOCTX, '$v598'))"/>
   </xsl:template>
   <xsl:template name="L1R3P1S181">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR((',')),'NONE')-->
      <xsl:variable name="v599" select="string(',')"/>
      <xsl:variable name="v600" select="xdoxslt:convert_case(string($v599), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string($v600))>1">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v601', substring(string($v600), 1,1))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v601', $v600)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R3P1S181', xdoxslt:get_variable($_XDOCTX, '$v601'))"/>
   </xsl:template>
   <xsl:template name="L1R3P5S182">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR((NULL)),'NONE')-->
      <xsl:variable name="v602" select="string('')"/>
      <xsl:variable name="v603" select="string($v602)"/>
      <xsl:variable name="v604" select="xdoxslt:convert_case(string($v603), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string($v604))>5">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v605', substring(string($v604), 1,5))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v605', $v604)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R3P5S182', xdoxslt:get_variable($_XDOCTX, '$v605'))"/>
   </xsl:template>
   <xsl:template name="L1R3P1S183">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR((',')),'NONE')-->
      <xsl:variable name="v606" select="string(',')"/>
      <xsl:variable name="v607" select="xdoxslt:convert_case(string($v606), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string($v607))>1">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v608', substring(string($v607), 1,1))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v608', $v607)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R3P1S183', xdoxslt:get_variable($_XDOCTX, '$v608'))"/>
   </xsl:template>
   <xsl:template name="L1R3P5S184">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR((NULL)),'NONE')-->
      <xsl:variable name="v609" select="string('')"/>
      <xsl:variable name="v610" select="string($v609)"/>
      <xsl:variable name="v611" select="xdoxslt:convert_case(string($v610), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string($v611))>5">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v612', substring(string($v611), 1,5))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v612', $v611)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R3P5S184', xdoxslt:get_variable($_XDOCTX, '$v612'))"/>
   </xsl:template>
   <xsl:template name="L1R3P1S185">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR((',')),'NONE')-->
      <xsl:variable name="v613" select="string(',')"/>
      <xsl:variable name="v614" select="xdoxslt:convert_case(string($v613), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string($v614))>1">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v615', substring(string($v614), 1,1))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v615', $v614)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R3P1S185', xdoxslt:get_variable($_XDOCTX, '$v615'))"/>
   </xsl:template>
   <xsl:template name="L1R3P5S186">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR((NULL)),'NONE')-->
      <xsl:variable name="v616" select="string('')"/>
      <xsl:variable name="v617" select="string($v616)"/>
      <xsl:variable name="v618" select="xdoxslt:convert_case(string($v617), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string($v618))>5">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v619', substring(string($v618), 1,5))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v619', $v618)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R3P5S186', xdoxslt:get_variable($_XDOCTX, '$v619'))"/>
   </xsl:template>
   <xsl:template name="L1R3P1S187">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR((',')),'NONE')-->
      <xsl:variable name="v620" select="string(',')"/>
      <xsl:variable name="v621" select="xdoxslt:convert_case(string($v620), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string($v621))>1">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v622', substring(string($v621), 1,1))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v622', $v621)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R3P1S187', xdoxslt:get_variable($_XDOCTX, '$v622'))"/>
   </xsl:template>
   <xsl:template name="L1R3P5S188">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR((NULL)),'NONE')-->
      <xsl:variable name="v623" select="string('')"/>
      <xsl:variable name="v624" select="string($v623)"/>
      <xsl:variable name="v625" select="xdoxslt:convert_case(string($v624), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string($v625))>5">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v626', substring(string($v625), 1,5))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v626', $v625)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R3P5S188', xdoxslt:get_variable($_XDOCTX, '$v626'))"/>
   </xsl:template>
   <xsl:template name="L1R3P1S189">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR((',')),'NONE')-->
      <xsl:variable name="v627" select="string(',')"/>
      <xsl:variable name="v628" select="xdoxslt:convert_case(string($v627), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string($v628))>1">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v629', substring(string($v628), 1,1))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v629', $v628)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R3P1S189', xdoxslt:get_variable($_XDOCTX, '$v629'))"/>
   </xsl:template>
   <xsl:template name="L1R3P5S190">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR((NULL)),'NONE')-->
      <xsl:variable name="v630" select="string('')"/>
      <xsl:variable name="v631" select="string($v630)"/>
      <xsl:variable name="v632" select="xdoxslt:convert_case(string($v631), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string($v632))>5">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v633', substring(string($v632), 1,5))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v633', $v632)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R3P5S190', xdoxslt:get_variable($_XDOCTX, '$v633'))"/>
   </xsl:template>
   <xsl:template name="L1R3P1S191">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR((',')),'NONE')-->
      <xsl:variable name="v634" select="string(',')"/>
      <xsl:variable name="v635" select="xdoxslt:convert_case(string($v634), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string($v635))>1">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v636', substring(string($v635), 1,1))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v636', $v635)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R3P1S191', xdoxslt:get_variable($_XDOCTX, '$v636'))"/>
   </xsl:template>
   <xsl:template name="L1R3P5S192">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR((NULL)),'NONE')-->
      <xsl:variable name="v637" select="string('')"/>
      <xsl:variable name="v638" select="string($v637)"/>
      <xsl:variable name="v639" select="xdoxslt:convert_case(string($v638), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string($v639))>5">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v640', substring(string($v639), 1,5))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v640', $v639)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R3P5S192', xdoxslt:get_variable($_XDOCTX, '$v640'))"/>
   </xsl:template>
   <xsl:template name="L1R3P1S193">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR((',')),'NONE')-->
      <xsl:variable name="v641" select="string(',')"/>
      <xsl:variable name="v642" select="xdoxslt:convert_case(string($v641), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string($v642))>1">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v643', substring(string($v642), 1,1))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v643', $v642)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R3P1S193', xdoxslt:get_variable($_XDOCTX, '$v643'))"/>
   </xsl:template>
   <xsl:template name="L1R3P5S194">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR((NULL)),'NONE')-->
      <xsl:variable name="v644" select="string('')"/>
      <xsl:variable name="v645" select="string($v644)"/>
      <xsl:variable name="v646" select="xdoxslt:convert_case(string($v645), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string($v646))>5">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v647', substring(string($v646), 1,5))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v647', $v646)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R3P5S194', xdoxslt:get_variable($_XDOCTX, '$v647'))"/>
   </xsl:template>
   <xsl:template name="L1R3P1S195">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR((',')),'NONE')-->
      <xsl:variable name="v648" select="string(',')"/>
      <xsl:variable name="v649" select="xdoxslt:convert_case(string($v648), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string($v649))>1">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v650', substring(string($v649), 1,1))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v650', $v649)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R3P1S195', xdoxslt:get_variable($_XDOCTX, '$v650'))"/>
   </xsl:template>
   <xsl:template name="L1R3P5S196">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR((NULL)),'NONE')-->
      <xsl:variable name="v651" select="string('')"/>
      <xsl:variable name="v652" select="string($v651)"/>
      <xsl:variable name="v653" select="xdoxslt:convert_case(string($v652), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string($v653))>5">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v654', substring(string($v653), 1,5))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v654', $v653)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R3P5S196', xdoxslt:get_variable($_XDOCTX, '$v654'))"/>
   </xsl:template>
   <xsl:template name="L1R3P1S197">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR((',')),'NONE')-->
      <xsl:variable name="v655" select="string(',')"/>
      <xsl:variable name="v656" select="xdoxslt:convert_case(string($v655), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string($v656))>1">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v657', substring(string($v656), 1,1))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v657', $v656)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R3P1S197', xdoxslt:get_variable($_XDOCTX, '$v657'))"/>
   </xsl:template>
   <xsl:template name="L1R3P5S198">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR((NULL)),'NONE')-->
      <xsl:variable name="v658" select="string('')"/>
      <xsl:variable name="v659" select="string($v658)"/>
      <xsl:variable name="v660" select="xdoxslt:convert_case(string($v659), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string($v660))>5">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v661', substring(string($v660), 1,5))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v661', $v660)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R3P5S198', xdoxslt:get_variable($_XDOCTX, '$v661'))"/>
   </xsl:template>
   <xsl:template name="L1R3P1S199">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR((',')),'NONE')-->
      <xsl:variable name="v662" select="string(',')"/>
      <xsl:variable name="v663" select="xdoxslt:convert_case(string($v662), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string($v663))>1">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v664', substring(string($v663), 1,1))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v664', $v663)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R3P1S199', xdoxslt:get_variable($_XDOCTX, '$v664'))"/>
   </xsl:template>
   <xsl:template name="L1R3P5S200">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR((NULL)),'NONE')-->
      <xsl:variable name="v665" select="string('')"/>
      <xsl:variable name="v666" select="string($v665)"/>
      <xsl:variable name="v667" select="xdoxslt:convert_case(string($v666), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string($v667))>5">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v668', substring(string($v667), 1,5))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v668', $v667)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R3P5S200', xdoxslt:get_variable($_XDOCTX, '$v668'))"/>
   </xsl:template>
   <xsl:template name="L1R3P1S201">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR((',')),'NONE')-->
      <xsl:variable name="v669" select="string(',')"/>
      <xsl:variable name="v670" select="xdoxslt:convert_case(string($v669), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string($v670))>1">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v671', substring(string($v670), 1,1))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v671', $v670)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R3P1S201', xdoxslt:get_variable($_XDOCTX, '$v671'))"/>
   </xsl:template>
   <xsl:template name="L1R3P5S202">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR(('SAL')),'NONE')-->
      <xsl:variable name="v672" select="string('SAL')"/>
      <xsl:variable name="v673" select="xdoxslt:convert_case(string($v672), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string($v673))>5">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v674', substring(string($v673), 1,5))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v674', $v673)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R3P5S202', xdoxslt:get_variable($_XDOCTX, '$v674'))"/>
   </xsl:template>
   <xsl:template name="L1R3P1S203">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR((',')),'NONE')-->
      <xsl:variable name="v675" select="string(',')"/>
      <xsl:variable name="v676" select="xdoxslt:convert_case(string($v675), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string($v676))>1">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v677', substring(string($v676), 1,1))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v677', $v676)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R3P1S203', xdoxslt:get_variable($_XDOCTX, '$v677'))"/>
   </xsl:template>
   <xsl:template name="L1R3P5S204">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR((NULL)),'NONE')-->
      <xsl:variable name="v678" select="string('')"/>
      <xsl:variable name="v679" select="string($v678)"/>
      <xsl:variable name="v680" select="xdoxslt:convert_case(string($v679), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string($v680))>5">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v681', substring(string($v680), 1,5))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v681', $v680)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R3P5S204', xdoxslt:get_variable($_XDOCTX, '$v681'))"/>
   </xsl:template>
   <xsl:template name="L1R3P1S205">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR((',')),'NONE')-->
      <xsl:variable name="v682" select="string(',')"/>
      <xsl:variable name="v683" select="xdoxslt:convert_case(string($v682), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string($v683))>1">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v684', substring(string($v683), 1,1))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v684', $v683)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R3P1S205', xdoxslt:get_variable($_XDOCTX, '$v684'))"/>
   </xsl:template>
   <xsl:template name="L1R3P5S206">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR((NULL)),'NONE')-->
      <xsl:variable name="v685" select="string('')"/>
      <xsl:variable name="v686" select="string($v685)"/>
      <xsl:variable name="v687" select="xdoxslt:convert_case(string($v686), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string($v687))>5">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v688', substring(string($v687), 1,5))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v688', $v687)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R3P5S206', xdoxslt:get_variable($_XDOCTX, '$v688'))"/>
   </xsl:template>
   <xsl:template name="L1R3P1S207">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR((',')),'NONE')-->
      <xsl:variable name="v689" select="string(',')"/>
      <xsl:variable name="v690" select="xdoxslt:convert_case(string($v689), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string($v690))>1">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v691', substring(string($v690), 1,1))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v691', $v690)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R3P1S207', xdoxslt:get_variable($_XDOCTX, '$v691'))"/>
   </xsl:template>
   <xsl:template name="L1R3P5S208">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR((NULL)),'NONE')-->
      <xsl:variable name="v692" select="string('')"/>
      <xsl:variable name="v693" select="string($v692)"/>
      <xsl:variable name="v694" select="xdoxslt:convert_case(string($v693), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string($v694))>5">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v695', substring(string($v694), 1,5))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v695', $v694)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R3P5S208', xdoxslt:get_variable($_XDOCTX, '$v695'))"/>
   </xsl:template>
   <xsl:template name="L1R3P1S209">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR((',')),'NONE')-->
      <xsl:variable name="v696" select="string(',')"/>
      <xsl:variable name="v697" select="xdoxslt:convert_case(string($v696), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string($v697))>1">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v698', substring(string($v697), 1,1))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v698', $v697)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R3P1S209', xdoxslt:get_variable($_XDOCTX, '$v698'))"/>
   </xsl:template>
   <xsl:template name="L1R3P5S210">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR((NULL)),'NONE')-->
      <xsl:variable name="v699" select="string('')"/>
      <xsl:variable name="v700" select="string($v699)"/>
      <xsl:variable name="v701" select="xdoxslt:convert_case(string($v700), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string($v701))>5">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v702', substring(string($v701), 1,5))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v702', $v701)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R3P5S210', xdoxslt:get_variable($_XDOCTX, '$v702'))"/>
   </xsl:template>
   <xsl:template name="L1R3P1S211">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR((',')),'NONE')-->
      <xsl:variable name="v703" select="string(',')"/>
      <xsl:variable name="v704" select="xdoxslt:convert_case(string($v703), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string($v704))>1">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v705', substring(string($v704), 1,1))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v705', $v704)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R3P1S211', xdoxslt:get_variable($_XDOCTX, '$v705'))"/>
   </xsl:template>
   <xsl:template name="L1R3P5S212">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR((NULL)),'NONE')-->
      <xsl:variable name="v706" select="string('')"/>
      <xsl:variable name="v707" select="string($v706)"/>
      <xsl:variable name="v708" select="xdoxslt:convert_case(string($v707), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string($v708))>5">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v709', substring(string($v708), 1,5))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v709', $v708)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R3P5S212', xdoxslt:get_variable($_XDOCTX, '$v709'))"/>
   </xsl:template>
   <xsl:template name="_RECORDBREAK">
      <!--Record Break-->
      <xsl:variable name="RECORDBREAK" select="concat(xdoxslt:chr(13), xdoxslt:chr(10))"/>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'RECORD_BREAK_LENGTH',string-length($RECORDBREAK))"/>
      <xsl:value-of select="string($RECORDBREAK)"/>
   </xsl:template>
   <xsl:template name="_BLOCK_FILLER">
      <!--Block Filler-->
      <xsl:param name="BLOCK_BEGIN"/>
      <xsl:param name="BLOCK_END"/>
      <xsl:param name="BLOCK_SPAN"/>
      <xsl:param name="BLOCK_FILL_CHAR"/>
      <xsl:param name="BLOCK_RECORD_LENGTH"/>
      <xsl:param name="RECORD_BREAK_LENGTH"/>
      <xsl:param name="BLOCK_RECORD_COUNTER"/>
      <xsl:if test="number(string-length($BLOCK_END) - string-length($BLOCK_BEGIN) - number($BLOCK_RECORD_COUNTER) * number($RECORD_BREAK_LENGTH)) mod (number($BLOCK_SPAN) * number($BLOCK_RECORD_LENGTH)) > 0">
         <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'MESSAGE', xdoxslt:fill_block($BLOCK_END, $BLOCK_FILL_CHAR, $BLOCK_RECORD_LENGTH))"/>
         <xsl:call-template name="_RECORDBREAK"/>
         <xsl:call-template name="_BLOCK_FILLER">
            <xsl:with-param name="BLOCK_BEGIN" select="string($BLOCK_BEGIN)"/>
            <xsl:with-param name="BLOCK_END" select="string(xdoxslt:get_variable($_XDOCTX, 'MESSAGE'))"/>
            <xsl:with-param name="BLOCK_SPAN" select="$BLOCK_SPAN"/>
            <xsl:with-param name="BLOCK_FILL_CHAR" select="$BLOCK_FILL_CHAR"/>
            <xsl:with-param name="BLOCK_RECORD_LENGTH" select="$BLOCK_RECORD_LENGTH"/>
            <xsl:with-param name="RECORD_BREAK_LENGTH" select="$RECORD_BREAK_LENGTH"/>
            <xsl:with-param name="BLOCK_RECORD_COUNTER" select="number($BLOCK_RECORD_COUNTER) + number(1)"/>
         </xsl:call-template>
      </xsl:if>
   </xsl:template>
</xsl:stylesheet>
