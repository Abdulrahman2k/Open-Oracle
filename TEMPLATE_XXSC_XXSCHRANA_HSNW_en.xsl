<?xml version = '1.0' encoding = 'utf-8'?>
<!-- $Header: TEMPLATE_XXSC_XXSCHRANA_HSNW_en.xsl 115.0 2016/05/23 09:25:39 xdouser noship $ -->
<!-- dbdrv: none -->

<!--Generated by Oracle BI Publisher 10.1.3.4.2-->
<xsl:stylesheet version="2.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" xmlns:fo="http://www.w3.org/1999/XSL/Format" xmlns:ora="http://www.oracle.com/XSL/Transform/java/" xmlns:xdofo="http://xmlns.oracle.com/oxp/fo/extensions" xmlns:xdoxslt="http://www.oracle.com/XSL/Transform/java/oracle.apps.xdo.template.rtf.XSLTFunctions" xmlns:xdoxliff="urn:oasis:names:tc:xliff:document:1.1" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:OutBoundPayments="http://xmlns.oracle.com/iby/EFTTemplateSample" xmlns:General="http://xmlns.oracle.com/iby" xmlns:Address="http://xmlns.oracle.com/iby/address" xmlns:PaymentsCommon="http://xmlns.oracle.com/iby/PaymentsCommon" xmlns:xdoeft="http://xmlns.oracle.com/iby/xdoeft">
   <xsl:output method="text" encoding="iso-8859-1"/>
   <xsl:param name="_XDOCTX">#</xsl:param>
   <xsl:decimal-format name="_DECIMALFORMAT" grouping-separator="," decimal-separator="."/>
   <xsl:template match="/">
      <!--Startup: Init Record Counters-->
      <xsl:call-template name="_RECORDCOUNTER"/>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'MESSAGE', string(''))"/>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'MESSAGETEMPLATES', string(''))"/>
      <!--Control: ================ Start new level: XXSCHRANA_HSNW=================-->
      <xsl:for-each select=".//XXSCHRANA_HSNW" xdoeft:type="LEVEL" xdoeft:level-name="XXSCHRANA_HSNW">
         <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R1',  string(''))"/>
         <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R1L',  number(0))"/>
         <!--Control: ===== START RECORD: Bank Details1 =====-->
         <!--Render: CONSTANT1-->
         <xsl:call-template name="L1R1P3S0"/>
         <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L1R1', xdoxslt:get_variable($_XDOCTX, 'L1R1P3S0'))"/>
         <!--Render: -->
         <xsl:call-template name="L1R1P1S1"/>
         <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L1R1', xdoxslt:get_variable($_XDOCTX, 'L1R1P1S1'))"/>
         <!--Render: CONSTANT2-->
         <xsl:call-template name="L1R1P14S2"/>
         <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L1R1', xdoxslt:get_variable($_XDOCTX, 'L1R1P14S2'))"/>
         <!--Render: -->
         <xsl:call-template name="L1R1P1S3"/>
         <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L1R1', xdoxslt:get_variable($_XDOCTX, 'L1R1P1S3'))"/>
         <!--Render: CONSTANT3-->
         <xsl:call-template name="L1R1P9S4"/>
         <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L1R1', xdoxslt:get_variable($_XDOCTX, 'L1R1P9S4'))"/>
         <!--Render: -->
         <xsl:call-template name="L1R1P1S5"/>
         <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L1R1', xdoxslt:get_variable($_XDOCTX, 'L1R1P1S5'))"/>
         <!--Render: HSBC CONNECT CUSTOMER ID-->
         <xsl:call-template name="L1R1P23S6"/>
         <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L1R1', xdoxslt:get_variable($_XDOCTX, 'L1R1P23S6'))"/>
         <!--Render: -->
         <xsl:call-template name="L1R1P1S7"/>
         <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L1R1', xdoxslt:get_variable($_XDOCTX, 'L1R1P1S7'))"/>
         <!--Render: HSBC NET CUSTOMER ID-->
         <xsl:call-template name="L1R1P30S8"/>
         <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L1R1', xdoxslt:get_variable($_XDOCTX, 'L1R1P30S8'))"/>
         <!--Render: -->
         <xsl:call-template name="L1R1P1S9"/>
         <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L1R1', xdoxslt:get_variable($_XDOCTX, 'L1R1P1S9'))"/>
         <!--Render: FILE REFERENCE-->
         <xsl:call-template name="L1R1P40S10"/>
         <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L1R1', xdoxslt:get_variable($_XDOCTX, 'L1R1P40S10'))"/>
         <!--Render: -->
         <xsl:call-template name="L1R1P1S11"/>
         <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L1R1', xdoxslt:get_variable($_XDOCTX, 'L1R1P1S11'))"/>
         <!--Render: FILE CREATION DATE-->
         <xsl:call-template name="L1R1P14S12"/>
         <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L1R1', xdoxslt:get_variable($_XDOCTX, 'L1R1P14S12'))"/>
         <!--Render: -->
         <xsl:call-template name="L1R1P1S13"/>
         <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L1R1', xdoxslt:get_variable($_XDOCTX, 'L1R1P1S13'))"/>
         <!--Render: FILE CREATION TIME-->
         <xsl:call-template name="L1R1P10S14"/>
         <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L1R1', xdoxslt:get_variable($_XDOCTX, 'L1R1P10S14'))"/>
         <!--Render: -->
         <xsl:call-template name="L1R1P1S15"/>
         <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L1R1', xdoxslt:get_variable($_XDOCTX, 'L1R1P1S15'))"/>
         <!--Render: AUTHORIZATION TYPE-->
         <xsl:call-template name="L1R1P15S16"/>
         <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L1R1', xdoxslt:get_variable($_XDOCTX, 'L1R1P15S16'))"/>
         <!--Render: -->
         <xsl:call-template name="L1R1P1S17"/>
         <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L1R1', xdoxslt:get_variable($_XDOCTX, 'L1R1P1S17'))"/>
         <!--Render: FILE VERSION-->
         <xsl:call-template name="L1R1P4S18"/>
         <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L1R1', xdoxslt:get_variable($_XDOCTX, 'L1R1P4S18'))"/>
         <!--Render: -->
         <xsl:call-template name="L1R1P1S19"/>
         <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L1R1', xdoxslt:get_variable($_XDOCTX, 'L1R1P1S19'))"/>
         <!--Render: RECORD COUNT-->
         <xsl:call-template name="L1R1P4S20"/>
         <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L1R1', xdoxslt:get_variable($_XDOCTX, 'L1R1P4S20'))"/>
         <xsl:value-of select="xdoxslt:get_variable($_XDOCTX, 'L1R1')"/>
         <!--Control: ===== END RECORD: Bank Details1 =====-->
         <!--Control: ===== Record Break =====-->
         <xsl:call-template name="_RECORDBREAK"/>
         <!--Control: Increase record counter: Bank Details1-->
         <xsl:value-of select="xdoxslt:next_sequence_number($_XDOCTX, 'Bank Details1_RC')"/>
         <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R2',  string(''))"/>
         <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R2L',  number(0))"/>
         <!--Control: ===== START RECORD: Bank Details2 =====-->
         <!--Render: -->
         <xsl:call-template name="L1R2P6S21"/>
         <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L1R2', xdoxslt:get_variable($_XDOCTX, 'L1R2P6S21'))"/>
         <!--Render: -->
         <xsl:call-template name="L1R2P1S22"/>
         <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L1R2', xdoxslt:get_variable($_XDOCTX, 'L1R2P1S22'))"/>
         <!--Render: INSTRUCTION TYPE-->
         <xsl:call-template name="L1R2P13S23"/>
         <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L1R2', xdoxslt:get_variable($_XDOCTX, 'L1R2P13S23'))"/>
         <!--Render: -->
         <xsl:call-template name="L1R2P1S24"/>
         <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L1R2', xdoxslt:get_variable($_XDOCTX, 'L1R2P1S24'))"/>
         <!--Render: TOTAL NO OF INSTRUCTIONS IN BATCH-->
         <xsl:call-template name="L1R2P9S25"/>
         <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L1R2', xdoxslt:get_variable($_XDOCTX, 'L1R2P9S25'))"/>
         <!--Render: -->
         <xsl:call-template name="L1R2P1S26"/>
         <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L1R2', xdoxslt:get_variable($_XDOCTX, 'L1R2P1S26'))"/>
         <!--Render: BATCH REFERENCE-->
         <xsl:call-template name="L1R2P10S27"/>
         <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L1R2', xdoxslt:get_variable($_XDOCTX, 'L1R2P10S27'))"/>
         <!--Render: -->
         <xsl:call-template name="L1R2P1S28"/>
         <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L1R2', xdoxslt:get_variable($_XDOCTX, 'L1R2P1S28'))"/>
         <!--Render: FILTER-->
         <xsl:call-template name="L1R2P15S29"/>
         <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L1R2', xdoxslt:get_variable($_XDOCTX, 'L1R2P15S29'))"/>
         <!--Render: -->
         <xsl:call-template name="L1R2P1S30"/>
         <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L1R2', xdoxslt:get_variable($_XDOCTX, 'L1R2P1S30'))"/>
         <!--Render: FILTER-->
         <xsl:call-template name="L1R2P6S31"/>
         <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L1R2', xdoxslt:get_variable($_XDOCTX, 'L1R2P6S31'))"/>
         <!--Render: -->
         <xsl:call-template name="L1R2P1S32"/>
         <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L1R2', xdoxslt:get_variable($_XDOCTX, 'L1R2P1S32'))"/>
         <!--Render: PAYMENT PURPOSE CODE-->
         <xsl:call-template name="L1R2P10S33"/>
         <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L1R2', xdoxslt:get_variable($_XDOCTX, 'L1R2P10S33'))"/>
         <!--Render: -->
         <xsl:call-template name="L1R2P1S34"/>
         <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L1R2', xdoxslt:get_variable($_XDOCTX, 'L1R2P1S34'))"/>
         <!--Render: DEBTOR PAYMENT NARRATION-->
         <xsl:call-template name="L1R2P15S35"/>
         <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L1R2', xdoxslt:get_variable($_XDOCTX, 'L1R2P15S35'))"/>
         <!--Render: -->
         <xsl:call-template name="L1R2P1S36"/>
         <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L1R2', xdoxslt:get_variable($_XDOCTX, 'L1R2P1S36'))"/>
         <!--Render: FILTER-->
         <xsl:call-template name="L1R2P3S37"/>
         <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L1R2', xdoxslt:get_variable($_XDOCTX, 'L1R2P3S37'))"/>
         <!--Render: -->
         <xsl:call-template name="L1R2P1S38"/>
         <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L1R2', xdoxslt:get_variable($_XDOCTX, 'L1R2P1S38'))"/>
         <!--Render: CONSTANT EYE CATCHER-->
         <xsl:call-template name="L1R2P35S39"/>
         <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L1R2', xdoxslt:get_variable($_XDOCTX, 'L1R2P35S39'))"/>
         <!--Render: -->
         <xsl:call-template name="L1R2P1S40"/>
         <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L1R2', xdoxslt:get_variable($_XDOCTX, 'L1R2P1S40'))"/>
         <!--Render: VALUE DATE-->
         <xsl:call-template name="L1R2P8S41"/>
         <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L1R2', xdoxslt:get_variable($_XDOCTX, 'L1R2P8S41'))"/>
         <!--Render: -->
         <xsl:call-template name="L1R2P1S42"/>
         <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L1R2', xdoxslt:get_variable($_XDOCTX, 'L1R2P1S42'))"/>
         <!--Render: FIRST PARTY ACCOUNT-->
         <xsl:call-template name="L1R2P15S43"/>
         <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L1R2', xdoxslt:get_variable($_XDOCTX, 'L1R2P15S43'))"/>
         <!--Render: -->
         <xsl:call-template name="L1R2P1S44"/>
         <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L1R2', xdoxslt:get_variable($_XDOCTX, 'L1R2P1S44'))"/>
         <!--Render: TRANSACTION CURRENCY-->
         <xsl:call-template name="L1R2P3S45"/>
         <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L1R2', xdoxslt:get_variable($_XDOCTX, 'L1R2P3S45'))"/>
         <!--Render: -->
         <xsl:call-template name="L1R2P1S46"/>
         <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L1R2', xdoxslt:get_variable($_XDOCTX, 'L1R2P1S46'))"/>
         <!--Render: TRANSACTION AMOUNT-->
         <xsl:call-template name="L1R2P15S47"/>
         <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L1R2', xdoxslt:get_variable($_XDOCTX, 'L1R2P15S47'))"/>
         <!--Render: -->
         <xsl:call-template name="L1R2P1S48"/>
         <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L1R2', xdoxslt:get_variable($_XDOCTX, 'L1R2P1S48'))"/>
         <!--Render: TEMPLATE MODE-->
         <xsl:call-template name="L1R2P5S49"/>
         <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L1R2', xdoxslt:get_variable($_XDOCTX, 'L1R2P5S49'))"/>
         <!--Render: -->
         <xsl:call-template name="L1R2P1S50"/>
         <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L1R2', xdoxslt:get_variable($_XDOCTX, 'L1R2P1S50'))"/>
         <!--Render: BATCH TEMPLATE ID-->
         <xsl:call-template name="L1R2P5S51"/>
         <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L1R2', xdoxslt:get_variable($_XDOCTX, 'L1R2P5S51'))"/>
         <!--Render: -->
         <xsl:call-template name="L1R2P1S52"/>
         <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L1R2', xdoxslt:get_variable($_XDOCTX, 'L1R2P1S52'))"/>
         <!--Render: FIRST PARTY ACCOUNT COUNTRY-->
         <xsl:call-template name="L1R2P2S53"/>
         <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L1R2', xdoxslt:get_variable($_XDOCTX, 'L1R2P2S53'))"/>
         <!--Render: -->
         <xsl:call-template name="L1R2P1S54"/>
         <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L1R2', xdoxslt:get_variable($_XDOCTX, 'L1R2P1S54'))"/>
         <!--Render: FIRST PARTY ACCOUNT INSTITUTION-->
         <xsl:call-template name="L1R2P4S55"/>
         <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L1R2', xdoxslt:get_variable($_XDOCTX, 'L1R2P4S55'))"/>
         <!--Render: -->
         <xsl:call-template name="L1R2P1S56"/>
         <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L1R2', xdoxslt:get_variable($_XDOCTX, 'L1R2P1S56'))"/>
         <!--Render: FIRST PARTY ACCOUNT CURRENCY-->
         <xsl:call-template name="L1R2P3S57"/>
         <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L1R2', xdoxslt:get_variable($_XDOCTX, 'L1R2P3S57'))"/>
         <!--Render: -->
         <xsl:call-template name="L1R2P1S58"/>
         <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L1R2', xdoxslt:get_variable($_XDOCTX, 'L1R2P1S58'))"/>
         <!--Render: PAYMENT AMOUNT IN DEBIT ACCOUNT CURRENCY-->
         <xsl:call-template name="L1R2P5S59"/>
         <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L1R2', xdoxslt:get_variable($_XDOCTX, 'L1R2P5S59'))"/>
         <!--Render: -->
         <xsl:call-template name="L1R2P1S60"/>
         <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L1R2', xdoxslt:get_variable($_XDOCTX, 'L1R2P1S60'))"/>
         <!--Render: FIRST PARTY NAME-->
         <xsl:call-template name="L1R2P40S61"/>
         <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L1R2', xdoxslt:get_variable($_XDOCTX, 'L1R2P40S61'))"/>
         <!--Render: -->
         <xsl:call-template name="L1R2P1S62"/>
         <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L1R2', xdoxslt:get_variable($_XDOCTX, 'L1R2P1S62'))"/>
         <!--Render: FIRST PARTY INFORMATION LINE 1-->
         <xsl:call-template name="L1R2P5S63"/>
         <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L1R2', xdoxslt:get_variable($_XDOCTX, 'L1R2P5S63'))"/>
         <!--Render: -->
         <xsl:call-template name="L1R2P1S64"/>
         <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L1R2', xdoxslt:get_variable($_XDOCTX, 'L1R2P1S64'))"/>
         <!--Render: FIRST PARTY INFORMATION LINE 2-->
         <xsl:call-template name="L1R2P5S65"/>
         <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L1R2', xdoxslt:get_variable($_XDOCTX, 'L1R2P5S65'))"/>
         <!--Render: -->
         <xsl:call-template name="L1R2P1S66"/>
         <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L1R2', xdoxslt:get_variable($_XDOCTX, 'L1R2P1S66'))"/>
         <!--Render: FIRST PARTY INFORMATION LINE 3-->
         <xsl:call-template name="L1R2P5S67"/>
         <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L1R2', xdoxslt:get_variable($_XDOCTX, 'L1R2P5S67'))"/>
         <!--Render: -->
         <xsl:call-template name="L1R2P1S68"/>
         <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L1R2', xdoxslt:get_variable($_XDOCTX, 'L1R2P1S68'))"/>
         <!--Render: FIRST PARTY INFORMATION LINE 4-->
         <xsl:call-template name="L1R2P5S69"/>
         <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L1R2', xdoxslt:get_variable($_XDOCTX, 'L1R2P5S69'))"/>
         <!--Render: -->
         <xsl:call-template name="L1R2P1S70"/>
         <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L1R2', xdoxslt:get_variable($_XDOCTX, 'L1R2P1S70'))"/>
         <!--Render: PAYMENT CODE-->
         <xsl:call-template name="L1R2P3S71"/>
         <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L1R2', xdoxslt:get_variable($_XDOCTX, 'L1R2P3S71'))"/>
         <!--Render: -->
         <xsl:call-template name="L1R2P1S72"/>
         <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L1R2', xdoxslt:get_variable($_XDOCTX, 'L1R2P1S72'))"/>
         <!--Render: REFERENCE LINE 1-->
         <xsl:call-template name="L1R2P20S73"/>
         <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L1R2', xdoxslt:get_variable($_XDOCTX, 'L1R2P20S73'))"/>
         <xsl:value-of select="xdoxslt:get_variable($_XDOCTX, 'L1R2')"/>
         <!--Control: ===== END RECORD: Bank Details2 =====-->
         <!--Control: ===== Record Break =====-->
         <xsl:call-template name="_RECORDBREAK"/>
         <!--Control: Increase record counter: Bank Details2-->
         <xsl:value-of select="xdoxslt:next_sequence_number($_XDOCTX, 'Bank Details2_RC')"/>
      </xsl:for-each>
      <!--Control: ================ Start new level: G_ROWNUM=================-->
      <xsl:for-each select=".//G_ROWNUM" xdoeft:type="LEVEL" xdoeft:level-name="G_ROWNUM">
         <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R3',  string(''))"/>
         <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R3L',  number(0))"/>
         <!--Control: ===== START RECORD: Bank Details3 =====-->
         <!--Render: RECORD TYPE-->
         <xsl:call-template name="L1R3P6S74"/>
         <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L1R3', xdoxslt:get_variable($_XDOCTX, 'L1R3P6S74'))"/>
         <!--Render: -->
         <xsl:call-template name="L1R3P1S75"/>
         <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L1R3', xdoxslt:get_variable($_XDOCTX, 'L1R3P1S75'))"/>
         <!--Render: SECOND PARTY ACCOUNT NUMBER-->
         <xsl:call-template name="L1R3P23S76"/>
         <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L1R3', xdoxslt:get_variable($_XDOCTX, 'L1R3P23S76'))"/>
         <!--Render: -->
         <xsl:call-template name="L1R3P1S77"/>
         <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L1R3', xdoxslt:get_variable($_XDOCTX, 'L1R3P1S77'))"/>
         <!--Render: SECOND PARTY NAME-->
         <xsl:call-template name="L1R3P20S78"/>
         <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L1R3', xdoxslt:get_variable($_XDOCTX, 'L1R3P20S78'))"/>
         <!--Render: -->
         <xsl:call-template name="L1R3P1S79"/>
         <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L1R3', xdoxslt:get_variable($_XDOCTX, 'L1R3P1S79'))"/>
         <!--Render: SECOND PARTY NUMBER-->
         <xsl:call-template name="L1R3P8S80"/>
         <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L1R3', xdoxslt:get_variable($_XDOCTX, 'L1R3P8S80'))"/>
         <!--Render: -->
         <xsl:call-template name="L1R3P1S81"/>
         <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L1R3', xdoxslt:get_variable($_XDOCTX, 'L1R3P1S81'))"/>
         <!--Render: BENEFICIARY BANK ID-->
         <xsl:call-template name="L1R3P15S82"/>
         <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L1R3', xdoxslt:get_variable($_XDOCTX, 'L1R3P15S82'))"/>
         <!--Render: -->
         <xsl:call-template name="L1R3P1S83"/>
         <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L1R3', xdoxslt:get_variable($_XDOCTX, 'L1R3P1S83'))"/>
         <!--Render: BENEFICIARY BRANCH NUMBER-->
         <xsl:call-template name="L1R3P5S84"/>
         <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L1R3', xdoxslt:get_variable($_XDOCTX, 'L1R3P5S84'))"/>
         <!--Render: -->
         <xsl:call-template name="L1R3P1S85"/>
         <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L1R3', xdoxslt:get_variable($_XDOCTX, 'L1R3P1S85'))"/>
         <!--Render: TRANSACTION CODE-->
         <xsl:call-template name="L1R3P5S86"/>
         <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L1R3', xdoxslt:get_variable($_XDOCTX, 'L1R3P5S86'))"/>
         <!--Render: -->
         <xsl:call-template name="L1R3P1S87"/>
         <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L1R3', xdoxslt:get_variable($_XDOCTX, 'L1R3P1S87'))"/>
         <!--Render: SECOND PARTY TRANSACTION AMOUNT-->
         <xsl:call-template name="L1R3P15S88"/>
         <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L1R3', xdoxslt:get_variable($_XDOCTX, 'L1R3P15S88'))"/>
         <!--Render: -->
         <xsl:call-template name="L1R3P1S89"/>
         <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L1R3', xdoxslt:get_variable($_XDOCTX, 'L1R3P1S89'))"/>
         <!--Render: ENTRY VALUE DATE-->
         <xsl:call-template name="L1R3P5S90"/>
         <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L1R3', xdoxslt:get_variable($_XDOCTX, 'L1R3P5S90'))"/>
         <!--Render: -->
         <xsl:call-template name="L1R3P1S91"/>
         <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L1R3', xdoxslt:get_variable($_XDOCTX, 'L1R3P1S91'))"/>
         <!--Render: SECOND PARTY REFERENCE-->
         <xsl:call-template name="L1R3P20S92"/>
         <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L1R3', xdoxslt:get_variable($_XDOCTX, 'L1R3P20S92'))"/>
         <!--Render: -->
         <xsl:call-template name="L1R3P1S93"/>
         <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L1R3', xdoxslt:get_variable($_XDOCTX, 'L1R3P1S93'))"/>
         <!--Render: INFORMATION LINE 1-->
         <xsl:call-template name="L1R3P5S94"/>
         <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L1R3', xdoxslt:get_variable($_XDOCTX, 'L1R3P5S94'))"/>
         <!--Render: -->
         <xsl:call-template name="L1R3P1S95"/>
         <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L1R3', xdoxslt:get_variable($_XDOCTX, 'L1R3P1S95'))"/>
         <!--Render: INFORMATION LINE 2-->
         <xsl:call-template name="L1R3P5S96"/>
         <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L1R3', xdoxslt:get_variable($_XDOCTX, 'L1R3P5S96'))"/>
         <!--Render: -->
         <xsl:call-template name="L1R3P1S97"/>
         <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L1R3', xdoxslt:get_variable($_XDOCTX, 'L1R3P1S97'))"/>
         <!--Render: INFORMATION LINE 3-->
         <xsl:call-template name="L1R3P5S98"/>
         <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L1R3', xdoxslt:get_variable($_XDOCTX, 'L1R3P5S98'))"/>
         <!--Render: -->
         <xsl:call-template name="L1R3P1S99"/>
         <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L1R3', xdoxslt:get_variable($_XDOCTX, 'L1R3P1S99'))"/>
         <!--Render: INFORMATION LINE 4-->
         <xsl:call-template name="L1R3P5S100"/>
         <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L1R3', xdoxslt:get_variable($_XDOCTX, 'L1R3P5S100'))"/>
         <!--Render: -->
         <xsl:call-template name="L1R3P1S101"/>
         <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L1R3', xdoxslt:get_variable($_XDOCTX, 'L1R3P1S101'))"/>
         <!--Render: ADVICE INDICATOR-->
         <xsl:call-template name="L1R3P1S102"/>
         <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L1R3', xdoxslt:get_variable($_XDOCTX, 'L1R3P1S102'))"/>
         <!--Render: -->
         <xsl:call-template name="L1R3P1S103"/>
         <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L1R3', xdoxslt:get_variable($_XDOCTX, 'L1R3P1S103'))"/>
         <!--Render: WHT INDICATOR-->
         <xsl:call-template name="L1R3P1S104"/>
         <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L1R3', xdoxslt:get_variable($_XDOCTX, 'L1R3P1S104'))"/>
         <!--Render: -->
         <xsl:call-template name="L1R3P1S105"/>
         <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L1R3', xdoxslt:get_variable($_XDOCTX, 'L1R3P1S105'))"/>
         <!--Render: Filler-->
         <xsl:call-template name="L1R3P5S106"/>
         <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L1R3', xdoxslt:get_variable($_XDOCTX, 'L1R3P5S106'))"/>
         <!--Render: -->
         <xsl:call-template name="L1R3P1S107"/>
         <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L1R3', xdoxslt:get_variable($_XDOCTX, 'L1R3P1S107'))"/>
         <!--Render: Filler-->
         <xsl:call-template name="L1R3P5S108"/>
         <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L1R3', xdoxslt:get_variable($_XDOCTX, 'L1R3P5S108'))"/>
         <!--Render: -->
         <xsl:call-template name="L1R3P1S109"/>
         <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L1R3', xdoxslt:get_variable($_XDOCTX, 'L1R3P1S109'))"/>
         <!--Render: Filler-->
         <xsl:call-template name="L1R3P5S110"/>
         <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L1R3', xdoxslt:get_variable($_XDOCTX, 'L1R3P5S110'))"/>
         <!--Render: -->
         <xsl:call-template name="L1R3P1S111"/>
         <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L1R3', xdoxslt:get_variable($_XDOCTX, 'L1R3P1S111'))"/>
         <!--Render: Filler-->
         <xsl:call-template name="L1R3P5S112"/>
         <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L1R3', xdoxslt:get_variable($_XDOCTX, 'L1R3P5S112'))"/>
         <!--Render: -->
         <xsl:call-template name="L1R3P1S113"/>
         <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L1R3', xdoxslt:get_variable($_XDOCTX, 'L1R3P1S113'))"/>
         <!--Render: Filler-->
         <xsl:call-template name="L1R3P5S114"/>
         <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L1R3', xdoxslt:get_variable($_XDOCTX, 'L1R3P5S114'))"/>
         <!--Render: -->
         <xsl:call-template name="L1R3P1S115"/>
         <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L1R3', xdoxslt:get_variable($_XDOCTX, 'L1R3P1S115'))"/>
         <!--Render: Constant Eye
Catcher-->
         <xsl:call-template name="L1R3P5S116"/>
         <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L1R3', xdoxslt:get_variable($_XDOCTX, 'L1R3P5S116'))"/>
         <!--Render: -->
         <xsl:call-template name="L1R3P1S117"/>
         <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L1R3', xdoxslt:get_variable($_XDOCTX, 'L1R3P1S117'))"/>
         <!--Render: First Party
Reference-->
         <xsl:call-template name="L1R3P5S118"/>
         <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L1R3', xdoxslt:get_variable($_XDOCTX, 'L1R3P5S118'))"/>
         <!--Render: -->
         <xsl:call-template name="L1R3P1S119"/>
         <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L1R3', xdoxslt:get_variable($_XDOCTX, 'L1R3P1S119'))"/>
         <!--Render: Payment
Currency-->
         <xsl:call-template name="L1R3P5S120"/>
         <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L1R3', xdoxslt:get_variable($_XDOCTX, 'L1R3P5S120'))"/>
         <!--Render: -->
         <xsl:call-template name="L1R3P1S121"/>
         <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L1R3', xdoxslt:get_variable($_XDOCTX, 'L1R3P1S121'))"/>
         <!--Render: Template ID-->
         <xsl:call-template name="L1R3P5S122"/>
         <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L1R3', xdoxslt:get_variable($_XDOCTX, 'L1R3P5S122'))"/>
         <!--Render: -->
         <xsl:call-template name="L1R3P1S123"/>
         <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L1R3', xdoxslt:get_variable($_XDOCTX, 'L1R3P1S123'))"/>
         <!--Render: Exchange
Rate-->
         <xsl:call-template name="L1R3P5S124"/>
         <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L1R3', xdoxslt:get_variable($_XDOCTX, 'L1R3P5S124'))"/>
         <!--Render: -->
         <xsl:call-template name="L1R3P1S125"/>
         <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L1R3', xdoxslt:get_variable($_XDOCTX, 'L1R3P1S125'))"/>
         <!--Render: Intermediary
Institution
Bank ID/
SWIFT
Address
Code-->
         <xsl:call-template name="L1R3P5S126"/>
         <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L1R3', xdoxslt:get_variable($_XDOCTX, 'L1R3P5S126'))"/>
         <!--Render: -->
         <xsl:call-template name="L1R3P1S127"/>
         <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L1R3', xdoxslt:get_variable($_XDOCTX, 'L1R3P1S127'))"/>
         <!--Render: Intermediary
Institution
Bank Name-->
         <xsl:call-template name="L1R3P5S128"/>
         <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L1R3', xdoxslt:get_variable($_XDOCTX, 'L1R3P5S128'))"/>
         <!--Render: -->
         <xsl:call-template name="L1R3P1S129"/>
         <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L1R3', xdoxslt:get_variable($_XDOCTX, 'L1R3P1S129'))"/>
         <!--Render: Intermediary
Institution
Bank Address
Line 1-->
         <xsl:call-template name="L1R3P5S130"/>
         <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L1R3', xdoxslt:get_variable($_XDOCTX, 'L1R3P5S130'))"/>
         <!--Render: -->
         <xsl:call-template name="L1R3P1S131"/>
         <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L1R3', xdoxslt:get_variable($_XDOCTX, 'L1R3P1S131'))"/>
         <!--Render: Intermediary
Institution
Bank Address
Line 2-->
         <xsl:call-template name="L1R3P5S132"/>
         <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L1R3', xdoxslt:get_variable($_XDOCTX, 'L1R3P5S132'))"/>
         <!--Render: -->
         <xsl:call-template name="L1R3P1S133"/>
         <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L1R3', xdoxslt:get_variable($_XDOCTX, 'L1R3P1S133'))"/>
         <!--Render: Intermediary
Institution
Bank Address
Line 3-->
         <xsl:call-template name="L1R3P5S134"/>
         <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L1R3', xdoxslt:get_variable($_XDOCTX, 'L1R3P5S134'))"/>
         <!--Render: -->
         <xsl:call-template name="L1R3P1S135"/>
         <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L1R3', xdoxslt:get_variable($_XDOCTX, 'L1R3P1S135'))"/>
         <!--Render: Intermediary
Institution
Bank Address
Line 4-->
         <xsl:call-template name="L1R3P5S136"/>
         <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L1R3', xdoxslt:get_variable($_XDOCTX, 'L1R3P5S136'))"/>
         <!--Render: -->
         <xsl:call-template name="L1R3P1S137"/>
         <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L1R3', xdoxslt:get_variable($_XDOCTX, 'L1R3P1S137'))"/>
         <!--Render: Intermediary
Institution
Bank ID/
SWIFT
Address-->
         <xsl:call-template name="L1R3P5S138"/>
         <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L1R3', xdoxslt:get_variable($_XDOCTX, 'L1R3P5S138'))"/>
         <!--Render: -->
         <xsl:call-template name="L1R3P1S139"/>
         <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L1R3', xdoxslt:get_variable($_XDOCTX, 'L1R3P1S139'))"/>
         <!--Render: Intermediary
Institution
Account
Number-->
         <xsl:call-template name="L1R3P5S140"/>
         <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L1R3', xdoxslt:get_variable($_XDOCTX, 'L1R3P5S140'))"/>
         <!--Render: -->
         <xsl:call-template name="L1R3P1S141"/>
         <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L1R3', xdoxslt:get_variable($_XDOCTX, 'L1R3P1S141'))"/>
         <!--Render: Beneficiary
Bank ID/
SWIFT
Address
Code-->
         <xsl:call-template name="L1R3P5S142"/>
         <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L1R3', xdoxslt:get_variable($_XDOCTX, 'L1R3P5S142'))"/>
         <!--Render: -->
         <xsl:call-template name="L1R3P1S143"/>
         <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L1R3', xdoxslt:get_variable($_XDOCTX, 'L1R3P1S143'))"/>
         <!--Render: Beneficiary
Bank ID/
SWIFT
Address-->
         <xsl:call-template name="L1R3P5S144"/>
         <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L1R3', xdoxslt:get_variable($_XDOCTX, 'L1R3P5S144'))"/>
         <!--Render: -->
         <xsl:call-template name="L1R3P1S145"/>
         <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L1R3', xdoxslt:get_variable($_XDOCTX, 'L1R3P1S145'))"/>
         <!--Render: Beneficiary
Bank Name-->
         <xsl:call-template name="L1R3P5S146"/>
         <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L1R3', xdoxslt:get_variable($_XDOCTX, 'L1R3P5S146'))"/>
         <!--Render: -->
         <xsl:call-template name="L1R3P1S147"/>
         <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L1R3', xdoxslt:get_variable($_XDOCTX, 'L1R3P1S147'))"/>
         <!--Render: Beneficiary
Bank Address
Line 1-->
         <xsl:call-template name="L1R3P5S148"/>
         <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L1R3', xdoxslt:get_variable($_XDOCTX, 'L1R3P5S148'))"/>
         <!--Render: -->
         <xsl:call-template name="L1R3P1S149"/>
         <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L1R3', xdoxslt:get_variable($_XDOCTX, 'L1R3P1S149'))"/>
         <!--Render: Beneficiary
Bank Address
Line 2-->
         <xsl:call-template name="L1R3P5S150"/>
         <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L1R3', xdoxslt:get_variable($_XDOCTX, 'L1R3P5S150'))"/>
         <!--Render: -->
         <xsl:call-template name="L1R3P1S151"/>
         <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L1R3', xdoxslt:get_variable($_XDOCTX, 'L1R3P1S151'))"/>
         <!--Render: Beneficiary
Bank Address
Line 3-->
         <xsl:call-template name="L1R3P5S152"/>
         <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L1R3', xdoxslt:get_variable($_XDOCTX, 'L1R3P5S152'))"/>
         <!--Render: -->
         <xsl:call-template name="L1R3P1S153"/>
         <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L1R3', xdoxslt:get_variable($_XDOCTX, 'L1R3P1S153'))"/>
         <!--Render: Beneficiary
Bank Address
Line 4-->
         <xsl:call-template name="L1R3P5S154"/>
         <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L1R3', xdoxslt:get_variable($_XDOCTX, 'L1R3P5S154'))"/>
         <!--Render: -->
         <xsl:call-template name="L1R3P1S155"/>
         <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L1R3', xdoxslt:get_variable($_XDOCTX, 'L1R3P1S155'))"/>
         <!--Render: Beneficiary
Bank Country-->
         <xsl:call-template name="L1R3P5S156"/>
         <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L1R3', xdoxslt:get_variable($_XDOCTX, 'L1R3P5S156'))"/>
         <!--Render: -->
         <xsl:call-template name="L1R3P1S157"/>
         <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L1R3', xdoxslt:get_variable($_XDOCTX, 'L1R3P1S157'))"/>
         <!--Render: Beneficiary
CHIPS UID-->
         <xsl:call-template name="L1R3P5S158"/>
         <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L1R3', xdoxslt:get_variable($_XDOCTX, 'L1R3P5S158'))"/>
         <!--Render: -->
         <xsl:call-template name="L1R3P1S159"/>
         <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L1R3', xdoxslt:get_variable($_XDOCTX, 'L1R3P1S159'))"/>
         <!--Render: Payment
Details Line 1-->
         <xsl:call-template name="L1R3P5S160"/>
         <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L1R3', xdoxslt:get_variable($_XDOCTX, 'L1R3P5S160'))"/>
         <!--Render: -->
         <xsl:call-template name="L1R3P1S161"/>
         <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L1R3', xdoxslt:get_variable($_XDOCTX, 'L1R3P1S161'))"/>
         <!--Render: Payment
Details Line 2-->
         <xsl:call-template name="L1R3P5S162"/>
         <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L1R3', xdoxslt:get_variable($_XDOCTX, 'L1R3P5S162'))"/>
         <!--Render: -->
         <xsl:call-template name="L1R3P1S163"/>
         <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L1R3', xdoxslt:get_variable($_XDOCTX, 'L1R3P1S163'))"/>
         <!--Render: Payment
Details Line 3-->
         <xsl:call-template name="L1R3P5S164"/>
         <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L1R3', xdoxslt:get_variable($_XDOCTX, 'L1R3P5S164'))"/>
         <!--Render: -->
         <xsl:call-template name="L1R3P1S165"/>
         <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L1R3', xdoxslt:get_variable($_XDOCTX, 'L1R3P1S165'))"/>
         <!--Render: Payment
Details Line 4-->
         <xsl:call-template name="L1R3P5S166"/>
         <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L1R3', xdoxslt:get_variable($_XDOCTX, 'L1R3P5S166'))"/>
         <!--Render: -->
         <xsl:call-template name="L1R3P1S167"/>
         <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L1R3', xdoxslt:get_variable($_XDOCTX, 'L1R3P1S167'))"/>
         <!--Render: Details of
Charges-->
         <xsl:call-template name="L1R3P5S168"/>
         <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L1R3', xdoxslt:get_variable($_XDOCTX, 'L1R3P5S168'))"/>
         <!--Render: -->
         <xsl:call-template name="L1R3P1S169"/>
         <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L1R3', xdoxslt:get_variable($_XDOCTX, 'L1R3P1S169'))"/>
         <!--Render: Sender
Charges-->
         <xsl:call-template name="L1R3P5S170"/>
         <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L1R3', xdoxslt:get_variable($_XDOCTX, 'L1R3P5S170'))"/>
         <!--Render: -->
         <xsl:call-template name="L1R3P1S171"/>
         <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L1R3', xdoxslt:get_variable($_XDOCTX, 'L1R3P1S171'))"/>
         <!--Render: Charges
Account-->
         <xsl:call-template name="L1R3P5S172"/>
         <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L1R3', xdoxslt:get_variable($_XDOCTX, 'L1R3P5S172'))"/>
         <!--Render: -->
         <xsl:call-template name="L1R3P1S173"/>
         <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L1R3', xdoxslt:get_variable($_XDOCTX, 'L1R3P1S173'))"/>
         <!--Render: Instruction
Code Line 1-->
         <xsl:call-template name="L1R3P5S174"/>
         <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L1R3', xdoxslt:get_variable($_XDOCTX, 'L1R3P5S174'))"/>
         <!--Render: -->
         <xsl:call-template name="L1R3P1S175"/>
         <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L1R3', xdoxslt:get_variable($_XDOCTX, 'L1R3P1S175'))"/>
         <!--Render: Instruction
Code Line 2-->
         <xsl:call-template name="L1R3P5S176"/>
         <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L1R3', xdoxslt:get_variable($_XDOCTX, 'L1R3P5S176'))"/>
         <!--Render: -->
         <xsl:call-template name="L1R3P1S177"/>
         <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L1R3', xdoxslt:get_variable($_XDOCTX, 'L1R3P1S177'))"/>
         <!--Render: Instruction
Code Line 3-->
         <xsl:call-template name="L1R3P5S178"/>
         <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L1R3', xdoxslt:get_variable($_XDOCTX, 'L1R3P5S178'))"/>
         <!--Render: -->
         <xsl:call-template name="L1R3P1S179"/>
         <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L1R3', xdoxslt:get_variable($_XDOCTX, 'L1R3P1S179'))"/>
         <!--Render: Instruction
Code Line 4-->
         <xsl:call-template name="L1R3P5S180"/>
         <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L1R3', xdoxslt:get_variable($_XDOCTX, 'L1R3P5S180'))"/>
         <!--Render: -->
         <xsl:call-template name="L1R3P1S181"/>
         <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L1R3', xdoxslt:get_variable($_XDOCTX, 'L1R3P1S181'))"/>
         <!--Render: Bank to Bank
Information
Line 1-->
         <xsl:call-template name="L1R3P5S182"/>
         <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L1R3', xdoxslt:get_variable($_XDOCTX, 'L1R3P5S182'))"/>
         <!--Render: -->
         <xsl:call-template name="L1R3P1S183"/>
         <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L1R3', xdoxslt:get_variable($_XDOCTX, 'L1R3P1S183'))"/>
         <!--Render: Bank to Bank
Information
Line 2-->
         <xsl:call-template name="L1R3P5S184"/>
         <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L1R3', xdoxslt:get_variable($_XDOCTX, 'L1R3P5S184'))"/>
         <!--Render: -->
         <xsl:call-template name="L1R3P1S185"/>
         <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L1R3', xdoxslt:get_variable($_XDOCTX, 'L1R3P1S185'))"/>
         <!--Render: Bank to Bank
Information
Line 3-->
         <xsl:call-template name="L1R3P5S186"/>
         <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L1R3', xdoxslt:get_variable($_XDOCTX, 'L1R3P5S186'))"/>
         <!--Render: -->
         <xsl:call-template name="L1R3P1S187"/>
         <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L1R3', xdoxslt:get_variable($_XDOCTX, 'L1R3P1S187'))"/>
         <!--Render: Bank to Bank
Information
Line 4-->
         <xsl:call-template name="L1R3P5S188"/>
         <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L1R3', xdoxslt:get_variable($_XDOCTX, 'L1R3P5S188'))"/>
         <!--Render: -->
         <xsl:call-template name="L1R3P1S189"/>
         <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L1R3', xdoxslt:get_variable($_XDOCTX, 'L1R3P1S189'))"/>
         <!--Render: Bank to Bank
Information
Line 5-->
         <xsl:call-template name="L1R3P5S190"/>
         <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L1R3', xdoxslt:get_variable($_XDOCTX, 'L1R3P5S190'))"/>
         <!--Render: -->
         <xsl:call-template name="L1R3P1S191"/>
         <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L1R3', xdoxslt:get_variable($_XDOCTX, 'L1R3P1S191'))"/>
         <!--Render: Bank to Bank
Information
Line 6-->
         <xsl:call-template name="L1R3P5S192"/>
         <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L1R3', xdoxslt:get_variable($_XDOCTX, 'L1R3P5S192'))"/>
         <!--Render: -->
         <xsl:call-template name="L1R3P1S193"/>
         <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L1R3', xdoxslt:get_variable($_XDOCTX, 'L1R3P1S193'))"/>
         <!--Render: 1st Exchange
Contract
Number-->
         <xsl:call-template name="L1R3P5S194"/>
         <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L1R3', xdoxslt:get_variable($_XDOCTX, 'L1R3P5S194'))"/>
         <!--Render: -->
         <xsl:call-template name="L1R3P1S195"/>
         <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L1R3', xdoxslt:get_variable($_XDOCTX, 'L1R3P1S195'))"/>
         <!--Render: 1st Exchange
Contract
Amount-->
         <xsl:call-template name="L1R3P5S196"/>
         <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L1R3', xdoxslt:get_variable($_XDOCTX, 'L1R3P5S196'))"/>
         <!--Render: -->
         <xsl:call-template name="L1R3P1S197"/>
         <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L1R3', xdoxslt:get_variable($_XDOCTX, 'L1R3P1S197'))"/>
         <!--Render: 2nd Exchange
Contract
Number-->
         <xsl:call-template name="L1R3P5S198"/>
         <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L1R3', xdoxslt:get_variable($_XDOCTX, 'L1R3P5S198'))"/>
         <!--Render: -->
         <xsl:call-template name="L1R3P1S199"/>
         <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L1R3', xdoxslt:get_variable($_XDOCTX, 'L1R3P1S199'))"/>
         <!--Render: 2nd Exchange
Contract
Amount-->
         <xsl:call-template name="L1R3P5S200"/>
         <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L1R3', xdoxslt:get_variable($_XDOCTX, 'L1R3P5S200'))"/>
         <!--Render: -->
         <xsl:call-template name="L1R3P1S201"/>
         <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L1R3', xdoxslt:get_variable($_XDOCTX, 'L1R3P1S201'))"/>
         <!--Render: Regulatory
Reporting
Line 1-->
         <xsl:call-template name="L1R3P5S202"/>
         <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L1R3', xdoxslt:get_variable($_XDOCTX, 'L1R3P5S202'))"/>
         <!--Render: -->
         <xsl:call-template name="L1R3P1S203"/>
         <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L1R3', xdoxslt:get_variable($_XDOCTX, 'L1R3P1S203'))"/>
         <!--Render: Regulatory
Reporting
Line 2-->
         <xsl:call-template name="L1R3P5S204"/>
         <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L1R3', xdoxslt:get_variable($_XDOCTX, 'L1R3P5S204'))"/>
         <!--Render: -->
         <xsl:call-template name="L1R3P1S205"/>
         <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L1R3', xdoxslt:get_variable($_XDOCTX, 'L1R3P1S205'))"/>
         <!--Render: Regulatory
Reporting
Line 3-->
         <xsl:call-template name="L1R3P5S206"/>
         <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L1R3', xdoxslt:get_variable($_XDOCTX, 'L1R3P5S206'))"/>
         <!--Render: -->
         <xsl:call-template name="L1R3P1S207"/>
         <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L1R3', xdoxslt:get_variable($_XDOCTX, 'L1R3P1S207'))"/>
         <!--Render: Advise By-->
         <xsl:call-template name="L1R3P5S208"/>
         <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L1R3', xdoxslt:get_variable($_XDOCTX, 'L1R3P5S208'))"/>
         <!--Render: -->
         <xsl:call-template name="L1R3P1S209"/>
         <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L1R3', xdoxslt:get_variable($_XDOCTX, 'L1R3P1S209'))"/>
         <!--Render: Advise By
Number-->
         <xsl:call-template name="L1R3P5S210"/>
         <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L1R3', xdoxslt:get_variable($_XDOCTX, 'L1R3P5S210'))"/>
         <!--Render: -->
         <xsl:call-template name="L1R3P1S211"/>
         <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L1R3', xdoxslt:get_variable($_XDOCTX, 'L1R3P1S211'))"/>
         <!--Render: Intermediary
Bank Country-->
         <xsl:call-template name="L1R3P5S212"/>
         <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L1R3', xdoxslt:get_variable($_XDOCTX, 'L1R3P5S212'))"/>
         <xsl:value-of select="xdoxslt:get_variable($_XDOCTX, 'L1R3')"/>
         <!--Control: ===== END RECORD: Bank Details3 =====-->
         <!--Control: ===== Record Break =====-->
         <xsl:call-template name="_RECORDBREAK"/>
         <!--Control: Increase record counter: Bank Details3-->
         <xsl:value-of select="xdoxslt:next_sequence_number($_XDOCTX, 'Bank Details3_RC')"/>
      </xsl:for-each>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'MESSAGE1', xdoxslt:removeAll(string(xdoxslt:get_variable($_XDOCTX, 'MESSAGETEMPLATES')), string(xdoxslt:get_variable($_XDOCTX, 'MESSAGE'))))"/>
      <xsl:variable name="MESSAGELENGTH" select="string-length(xdoxslt:get_variable($_XDOCTX, 'MESSAGE1'))"/>
      <xsl:value-of select="xdoxslt:get_variable($_XDOCTX, 'MESSAGE')"/>
   </xsl:template>
   <xsl:template name="_RECORDCOUNTER">
      <!--Record Counter Init-->
      <!--Definition: Bank Details1_RC-->
      <xsl:call-template name="SEQ_START_Bank Details1_RC"/>
      <xsl:value-of select="xdoxslt:create_sequence_number($_XDOCTX, string('Bank Details1_RC'), number(1), number(999999), xdoxslt:get_variable($_XDOCTX, 'SEQ_START_Bank Details1_RC_V'), number(1))"/>
      <!--Definition: Bank Details2_RC-->
      <xsl:call-template name="SEQ_START_Bank Details2_RC"/>
      <xsl:value-of select="xdoxslt:create_sequence_number($_XDOCTX, string('Bank Details2_RC'), number(1), number(999999), xdoxslt:get_variable($_XDOCTX, 'SEQ_START_Bank Details2_RC_V'), number(1))"/>
      <!--Definition: Bank Details3_RC-->
      <xsl:call-template name="SEQ_START_Bank Details3_RC"/>
      <xsl:value-of select="xdoxslt:create_sequence_number($_XDOCTX, string('Bank Details3_RC'), number(1), number(999999), xdoxslt:get_variable($_XDOCTX, 'SEQ_START_Bank Details3_RC_V'), number(1))"/>
   </xsl:template>
   <xsl:template name="SEQ_START_Bank Details1_RC">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: 0-->
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'SEQ_START_Bank Details1_RC_V', 0)"/>
   </xsl:template>
   <xsl:template name="L1R1P3S0">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR(('IFH')),'NONE')-->
      <xsl:variable name="v1" select="string('IFH')"/>
      <xsl:variable name="v2" select="xdoxslt:convert_case(string($v1), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string($v2))>3">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v3', substring(string($v2), 1,3))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v3', $v2)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R1P3S0', xdoxslt:get_variable($_XDOCTX, '$v3'))"/>
   </xsl:template>
   <xsl:template name="L1R1P1S1">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR((',')),'NONE')-->
      <xsl:variable name="v4" select="string(',')"/>
      <xsl:variable name="v5" select="xdoxslt:convert_case(string($v4), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string($v5))>1">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v6', substring(string($v5), 1,1))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v6', $v5)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R1P1S1', xdoxslt:get_variable($_XDOCTX, '$v6'))"/>
   </xsl:template>
   <xsl:template name="L1R1P14S2">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR(('IFILE')),'NONE')-->
      <xsl:variable name="v7" select="string('IFILE')"/>
      <xsl:variable name="v8" select="xdoxslt:convert_case(string($v7), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string($v8))>14">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v9', substring(string($v8), 1,14))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v9', $v8)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R1P14S2', xdoxslt:get_variable($_XDOCTX, '$v9'))"/>
   </xsl:template>
   <xsl:template name="L1R1P1S3">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR((',')),'NONE')-->
      <xsl:variable name="v10" select="string(',')"/>
      <xsl:variable name="v11" select="xdoxslt:convert_case(string($v10), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string($v11))>1">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v12', substring(string($v11), 1,1))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v12', $v11)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R1P1S3', xdoxslt:get_variable($_XDOCTX, '$v12'))"/>
   </xsl:template>
   <xsl:template name="L1R1P9S4">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR(('CSV')),'NONE')-->
      <xsl:variable name="v13" select="string('CSV')"/>
      <xsl:variable name="v14" select="xdoxslt:convert_case(string($v13), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string($v14))>9">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v15', substring(string($v14), 1,9))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v15', $v14)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R1P9S4', xdoxslt:get_variable($_XDOCTX, '$v15'))"/>
   </xsl:template>
   <xsl:template name="L1R1P1S5">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR((',')),'NONE')-->
      <xsl:variable name="v16" select="string(',')"/>
      <xsl:variable name="v17" select="xdoxslt:convert_case(string($v16), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string($v17))>1">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v18', substring(string($v17), 1,1))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v18', $v17)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R1P1S5', xdoxslt:get_variable($_XDOCTX, '$v18'))"/>
   </xsl:template>
   <xsl:template name="L1R1P23S6">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR(('ABC71759001')),'NONE')-->
      <xsl:variable name="v19" select="string('ABC71759001')"/>
      <xsl:variable name="v20" select="xdoxslt:convert_case(string($v19), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string($v20))>23">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v21', substring(string($v20), 1,23))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v21', $v20)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R1P23S6', xdoxslt:get_variable($_XDOCTX, '$v21'))"/>
   </xsl:template>
   <xsl:template name="L1R1P1S7">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR((',')),'NONE')-->
      <xsl:variable name="v22" select="string(',')"/>
      <xsl:variable name="v23" select="xdoxslt:convert_case(string($v22), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string($v23))>1">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v24', substring(string($v23), 1,1))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v24', $v23)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R1P1S7', xdoxslt:get_variable($_XDOCTX, '$v24'))"/>
   </xsl:template>
   <xsl:template name="L1R1P30S8">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR(('AEHBMEGAE020228557')),'NONE')-->
      <xsl:variable name="v25" select="string('AEHBMEGAE020228557')"/>
      <xsl:variable name="v26" select="xdoxslt:convert_case(string($v25), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string($v26))>30">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v27', substring(string($v26), 1,30))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v27', $v26)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R1P30S8', xdoxslt:get_variable($_XDOCTX, '$v27'))"/>
   </xsl:template>
   <xsl:template name="L1R1P1S9">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR((',')),'NONE')-->
      <xsl:variable name="v28" select="string(',')"/>
      <xsl:variable name="v29" select="xdoxslt:convert_case(string($v28), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string($v29))>1">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v30', substring(string($v29), 1,1))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v30', $v29)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R1P1S9', xdoxslt:get_variable($_XDOCTX, '$v30'))"/>
   </xsl:template>
   <xsl:template name="L1R1P40S10">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR((CF_FILE_REF_1)),'NONE')-->
      <xsl:variable name="v31" select="string(xdoxslt:normalize_string($_XDOCTX, .//CF_FILE_REF_1))"/>
      <xsl:variable name="v32" select="xdoxslt:convert_case(string($v31), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string($v32))>40">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v33', substring(string($v32), 1,40))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v33', $v32)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R1P40S10', xdoxslt:get_variable($_XDOCTX, '$v33'))"/>
   </xsl:template>
   <xsl:template name="L1R1P1S11">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR((',')),'NONE')-->
      <xsl:variable name="v34" select="string(',')"/>
      <xsl:variable name="v35" select="xdoxslt:convert_case(string($v34), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string($v35))>1">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v36', substring(string($v35), 1,1))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v36', $v35)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R1P1S11', xdoxslt:get_variable($_XDOCTX, '$v36'))"/>
   </xsl:template>
   <xsl:template name="L1R1P14S12">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR((CF_CREATION_DATE)),'NONE')-->
      <xsl:variable name="v37" select="string(xdoxslt:normalize_string($_XDOCTX, .//CF_CREATION_DATE))"/>
      <xsl:variable name="v38" select="xdoxslt:convert_case(string($v37), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string($v38))>14">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v39', substring(string($v38), 1,14))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v39', $v38)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R1P14S12', xdoxslt:get_variable($_XDOCTX, '$v39'))"/>
   </xsl:template>
   <xsl:template name="L1R1P1S13">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR((',')),'NONE')-->
      <xsl:variable name="v40" select="string(',')"/>
      <xsl:variable name="v41" select="xdoxslt:convert_case(string($v40), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string($v41))>1">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v42', substring(string($v41), 1,1))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v42', $v41)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R1P1S13', xdoxslt:get_variable($_XDOCTX, '$v42'))"/>
   </xsl:template>
   <xsl:template name="L1R1P10S14">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR((CF_CREATION_TIME)),'NONE')-->
      <xsl:variable name="v43" select="string(xdoxslt:normalize_string($_XDOCTX, .//CF_CREATION_TIME))"/>
      <xsl:variable name="v44" select="xdoxslt:convert_case(string($v43), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string($v44))>10">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v45', substring(string($v44), 1,10))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v45', $v44)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R1P10S14', xdoxslt:get_variable($_XDOCTX, '$v45'))"/>
   </xsl:template>
   <xsl:template name="L1R1P1S15">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR((',')),'NONE')-->
      <xsl:variable name="v46" select="string(',')"/>
      <xsl:variable name="v47" select="xdoxslt:convert_case(string($v46), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string($v47))>1">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v48', substring(string($v47), 1,1))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v48', $v47)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R1P1S15', xdoxslt:get_variable($_XDOCTX, '$v48'))"/>
   </xsl:template>
   <xsl:template name="L1R1P15S16">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR(('P')),'NONE')-->
      <xsl:variable name="v49" select="string('P')"/>
      <xsl:variable name="v50" select="xdoxslt:convert_case(string($v49), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string($v50))>15">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v51', substring(string($v50), 1,15))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v51', $v50)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R1P15S16', xdoxslt:get_variable($_XDOCTX, '$v51'))"/>
   </xsl:template>
   <xsl:template name="L1R1P1S17">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR((',')),'NONE')-->
      <xsl:variable name="v52" select="string(',')"/>
      <xsl:variable name="v53" select="xdoxslt:convert_case(string($v52), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string($v53))>1">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v54', substring(string($v53), 1,1))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v54', $v53)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R1P1S17', xdoxslt:get_variable($_XDOCTX, '$v54'))"/>
   </xsl:template>
   <xsl:template name="L1R1P4S18">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR(('1.0')),'NONE')-->
      <xsl:variable name="v55" select="string('1.0')"/>
      <xsl:variable name="v56" select="xdoxslt:convert_case(string($v55), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string($v56))>4">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v57', substring(string($v56), 1,4))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v57', $v56)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R1P4S18', xdoxslt:get_variable($_XDOCTX, '$v57'))"/>
   </xsl:template>
   <xsl:template name="L1R1P1S19">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR((',')),'NONE')-->
      <xsl:variable name="v58" select="string(',')"/>
      <xsl:variable name="v59" select="xdoxslt:convert_case(string($v58), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string($v59))>1">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v60', substring(string($v59), 1,1))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v60', $v59)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R1P1S19', xdoxslt:get_variable($_XDOCTX, '$v60'))"/>
   </xsl:template>
   <xsl:template name="L1R1P4S20">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: TO_NUMBER((CF_COUNT))-->
      <xsl:variable name="v61" select="xdoxslt:to_number(xdoxslt:normalize_string($_XDOCTX, .//CF_COUNT))"/>
      <xsl:choose>
         <xsl:when test="string-length(string($v61))>4">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v62', substring(string($v61), 1,4))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v62', $v61)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R1P4S20', xdoxslt:get_variable($_XDOCTX, '$v62'))"/>
   </xsl:template>
   <xsl:template name="SEQ_START_Bank Details2_RC">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: 0-->
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'SEQ_START_Bank Details2_RC_V', 0)"/>
   </xsl:template>
   <xsl:template name="L1R2P6S21">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR(('BATHDR')),'NONE')-->
      <xsl:variable name="v63" select="string('BATHDR')"/>
      <xsl:variable name="v64" select="xdoxslt:convert_case(string($v63), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string($v64))>6">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v65', substring(string($v64), 1,6))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v65', $v64)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R2P6S21', xdoxslt:get_variable($_XDOCTX, '$v65'))"/>
   </xsl:template>
   <xsl:template name="L1R2P1S22">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR((',')),'NONE')-->
      <xsl:variable name="v66" select="string(',')"/>
      <xsl:variable name="v67" select="xdoxslt:convert_case(string($v66), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string($v67))>1">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v68', substring(string($v67), 1,1))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v68', $v67)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R2P1S22', xdoxslt:get_variable($_XDOCTX, '$v68'))"/>
   </xsl:template>
   <xsl:template name="L1R2P13S23">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR(('ACH-CR')),'NONE')-->
      <xsl:variable name="v69" select="string('ACH-CR')"/>
      <xsl:variable name="v70" select="xdoxslt:convert_case(string($v69), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string($v70))>13">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v71', substring(string($v70), 1,13))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v71', $v70)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R2P13S23', xdoxslt:get_variable($_XDOCTX, '$v71'))"/>
   </xsl:template>
   <xsl:template name="L1R2P1S24">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR((',')),'NONE')-->
      <xsl:variable name="v72" select="string(',')"/>
      <xsl:variable name="v73" select="xdoxslt:convert_case(string($v72), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string($v73))>1">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v74', substring(string($v73), 1,1))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v74', $v73)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R2P1S24', xdoxslt:get_variable($_XDOCTX, '$v74'))"/>
   </xsl:template>
   <xsl:template name="L1R2P9S25">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR((CS_COUNT)),'NONE')-->
      <xsl:variable name="v75" select="string(xdoxslt:normalize_string($_XDOCTX, .//CS_COUNT))"/>
      <xsl:variable name="v76" select="xdoxslt:convert_case(string($v75), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string($v76))>9">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v77', substring(string($v76), 1,9))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v77', $v76)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R2P9S25', xdoxslt:get_variable($_XDOCTX, '$v77'))"/>
   </xsl:template>
   <xsl:template name="L1R2P1S26">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR((',')),'NONE')-->
      <xsl:variable name="v78" select="string(',')"/>
      <xsl:variable name="v79" select="xdoxslt:convert_case(string($v78), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string($v79))>1">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v80', substring(string($v79), 1,1))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v80', $v79)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R2P1S26', xdoxslt:get_variable($_XDOCTX, '$v80'))"/>
   </xsl:template>
   <xsl:template name="L1R2P10S27">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR((NULL)),'NONE')-->
      <xsl:variable name="v81" select="string('')"/>
      <xsl:variable name="v82" select="string($v81)"/>
      <xsl:variable name="v83" select="xdoxslt:convert_case(string($v82), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string($v83))>10">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v84', substring(string($v83), 1,10))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v84', $v83)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R2P10S27', xdoxslt:get_variable($_XDOCTX, '$v84'))"/>
   </xsl:template>
   <xsl:template name="L1R2P1S28">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR((',')),'NONE')-->
      <xsl:variable name="v85" select="string(',')"/>
      <xsl:variable name="v86" select="xdoxslt:convert_case(string($v85), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string($v86))>1">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v87', substring(string($v86), 1,1))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v87', $v86)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R2P1S28', xdoxslt:get_variable($_XDOCTX, '$v87'))"/>
   </xsl:template>
   <xsl:template name="L1R2P15S29">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR((NULL)),'NONE')-->
      <xsl:variable name="v88" select="string('')"/>
      <xsl:variable name="v89" select="string($v88)"/>
      <xsl:variable name="v90" select="xdoxslt:convert_case(string($v89), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string($v90))>15">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v91', substring(string($v90), 1,15))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v91', $v90)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R2P15S29', xdoxslt:get_variable($_XDOCTX, '$v91'))"/>
   </xsl:template>
   <xsl:template name="L1R2P1S30">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR((',')),'NONE')-->
      <xsl:variable name="v92" select="string(',')"/>
      <xsl:variable name="v93" select="xdoxslt:convert_case(string($v92), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string($v93))>1">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v94', substring(string($v93), 1,1))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v94', $v93)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R2P1S30', xdoxslt:get_variable($_XDOCTX, '$v94'))"/>
   </xsl:template>
   <xsl:template name="L1R2P6S31">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR((NULL)),'NONE')-->
      <xsl:variable name="v95" select="string('')"/>
      <xsl:variable name="v96" select="string($v95)"/>
      <xsl:variable name="v97" select="xdoxslt:convert_case(string($v96), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string($v97))>6">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v98', substring(string($v97), 1,6))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v98', $v97)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R2P6S31', xdoxslt:get_variable($_XDOCTX, '$v98'))"/>
   </xsl:template>
   <xsl:template name="L1R2P1S32">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR((',')),'NONE')-->
      <xsl:variable name="v99" select="string(',')"/>
      <xsl:variable name="v100" select="xdoxslt:convert_case(string($v99), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string($v100))>1">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v101', substring(string($v100), 1,1))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v101', $v100)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R2P1S32', xdoxslt:get_variable($_XDOCTX, '$v101'))"/>
   </xsl:template>
   <xsl:template name="L1R2P10S33">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR((NULL)),'NONE')-->
      <xsl:variable name="v102" select="string('')"/>
      <xsl:variable name="v103" select="string($v102)"/>
      <xsl:variable name="v104" select="xdoxslt:convert_case(string($v103), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string($v104))>10">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v105', substring(string($v104), 1,10))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v105', $v104)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R2P10S33', xdoxslt:get_variable($_XDOCTX, '$v105'))"/>
   </xsl:template>
   <xsl:template name="L1R2P1S34">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR((',')),'NONE')-->
      <xsl:variable name="v106" select="string(',')"/>
      <xsl:variable name="v107" select="xdoxslt:convert_case(string($v106), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string($v107))>1">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v108', substring(string($v107), 1,1))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v108', $v107)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R2P1S34', xdoxslt:get_variable($_XDOCTX, '$v108'))"/>
   </xsl:template>
   <xsl:template name="L1R2P15S35">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR((NULL)),'NONE')-->
      <xsl:variable name="v109" select="string('')"/>
      <xsl:variable name="v110" select="string($v109)"/>
      <xsl:variable name="v111" select="xdoxslt:convert_case(string($v110), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string($v111))>15">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v112', substring(string($v111), 1,15))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v112', $v111)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R2P15S35', xdoxslt:get_variable($_XDOCTX, '$v112'))"/>
   </xsl:template>
   <xsl:template name="L1R2P1S36">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR((',')),'NONE')-->
      <xsl:variable name="v113" select="string(',')"/>
      <xsl:variable name="v114" select="xdoxslt:convert_case(string($v113), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string($v114))>1">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v115', substring(string($v114), 1,1))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v115', $v114)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R2P1S36', xdoxslt:get_variable($_XDOCTX, '$v115'))"/>
   </xsl:template>
   <xsl:template name="L1R2P3S37">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR((NULL)),'NONE')-->
      <xsl:variable name="v116" select="string('')"/>
      <xsl:variable name="v117" select="string($v116)"/>
      <xsl:variable name="v118" select="xdoxslt:convert_case(string($v117), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string($v118))>3">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v119', substring(string($v118), 1,3))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v119', $v118)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R2P3S37', xdoxslt:get_variable($_XDOCTX, '$v119'))"/>
   </xsl:template>
   <xsl:template name="L1R2P1S38">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR((',')),'NONE')-->
      <xsl:variable name="v120" select="string(',')"/>
      <xsl:variable name="v121" select="xdoxslt:convert_case(string($v120), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string($v121))>1">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v122', substring(string($v121), 1,1))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v122', $v121)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R2P1S38', xdoxslt:get_variable($_XDOCTX, '$v122'))"/>
   </xsl:template>
   <xsl:template name="L1R2P35S39">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR(('@1ST@')),'NONE')-->
      <xsl:variable name="v123" select="string('@1ST@')"/>
      <xsl:variable name="v124" select="xdoxslt:convert_case(string($v123), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string($v124))>35">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v125', substring(string($v124), 1,35))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v125', $v124)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R2P35S39', xdoxslt:get_variable($_XDOCTX, '$v125'))"/>
   </xsl:template>
   <xsl:template name="L1R2P1S40">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR((',')),'NONE')-->
      <xsl:variable name="v126" select="string(',')"/>
      <xsl:variable name="v127" select="xdoxslt:convert_case(string($v126), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string($v127))>1">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v128', substring(string($v127), 1,1))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v128', $v127)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R2P1S40', xdoxslt:get_variable($_XDOCTX, '$v128'))"/>
   </xsl:template>
   <xsl:template name="L1R2P8S41">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR((CF_VALUE_DATE)),'NONE')-->
      <xsl:variable name="v129" select="string(xdoxslt:normalize_string($_XDOCTX, .//CF_VALUE_DATE))"/>
      <xsl:variable name="v130" select="xdoxslt:convert_case(string($v129), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string($v130))>8">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v131', substring(string($v130), 1,8))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v131', $v130)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R2P8S41', xdoxslt:get_variable($_XDOCTX, '$v131'))"/>
   </xsl:template>
   <xsl:template name="L1R2P1S42">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR((',')),'NONE')-->
      <xsl:variable name="v132" select="string(',')"/>
      <xsl:variable name="v133" select="xdoxslt:convert_case(string($v132), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string($v133))>1">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v134', substring(string($v133), 1,1))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v134', $v133)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R2P1S42', xdoxslt:get_variable($_XDOCTX, '$v134'))"/>
   </xsl:template>
   <xsl:template name="L1R2P15S43">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR(('020228557002')),'NONE')-->
      <xsl:variable name="v135" select="string('020228557002')"/>
      <xsl:variable name="v136" select="xdoxslt:convert_case(string($v135), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string($v136))>15">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v137', substring(string($v136), 1,15))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v137', $v136)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R2P15S43', xdoxslt:get_variable($_XDOCTX, '$v137'))"/>
   </xsl:template>
   <xsl:template name="L1R2P1S44">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR((',')),'NONE')-->
      <xsl:variable name="v138" select="string(',')"/>
      <xsl:variable name="v139" select="xdoxslt:convert_case(string($v138), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string($v139))>1">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v140', substring(string($v139), 1,1))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v140', $v139)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R2P1S44', xdoxslt:get_variable($_XDOCTX, '$v140'))"/>
   </xsl:template>
   <xsl:template name="L1R2P3S45">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR(('AED')),'NONE')-->
      <xsl:variable name="v141" select="string('AED')"/>
      <xsl:variable name="v142" select="xdoxslt:convert_case(string($v141), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string($v142))>3">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v143', substring(string($v142), 1,3))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v143', $v142)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R2P3S45', xdoxslt:get_variable($_XDOCTX, '$v143'))"/>
   </xsl:template>
   <xsl:template name="L1R2P1S46">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR((',')),'NONE')-->
      <xsl:variable name="v144" select="string(',')"/>
      <xsl:variable name="v145" select="xdoxslt:convert_case(string($v144), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string($v145))>1">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v146', substring(string($v145), 1,1))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v146', $v145)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R2P1S46', xdoxslt:get_variable($_XDOCTX, '$v146'))"/>
   </xsl:template>
   <xsl:template name="L1R2P15S47">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR((CF_NETPAY)),'NONE')-->
      <xsl:variable name="v147" select="string(xdoxslt:normalize_string($_XDOCTX, .//CF_NETPAY))"/>
      <xsl:variable name="v148" select="xdoxslt:convert_case(string($v147), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string($v148))>15">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v149', substring(string($v148), 1,15))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v149', $v148)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R2P15S47', xdoxslt:get_variable($_XDOCTX, '$v149'))"/>
   </xsl:template>
   <xsl:template name="L1R2P1S48">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR((',')),'NONE')-->
      <xsl:variable name="v150" select="string(',')"/>
      <xsl:variable name="v151" select="xdoxslt:convert_case(string($v150), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string($v151))>1">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v152', substring(string($v151), 1,1))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v152', $v151)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R2P1S48', xdoxslt:get_variable($_XDOCTX, '$v152'))"/>
   </xsl:template>
   <xsl:template name="L1R2P5S49">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR((NULL)),'NONE')-->
      <xsl:variable name="v153" select="string('')"/>
      <xsl:variable name="v154" select="string($v153)"/>
      <xsl:variable name="v155" select="xdoxslt:convert_case(string($v154), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string($v155))>5">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v156', substring(string($v155), 1,5))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v156', $v155)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R2P5S49', xdoxslt:get_variable($_XDOCTX, '$v156'))"/>
   </xsl:template>
   <xsl:template name="L1R2P1S50">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR((',')),'NONE')-->
      <xsl:variable name="v157" select="string(',')"/>
      <xsl:variable name="v158" select="xdoxslt:convert_case(string($v157), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string($v158))>1">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v159', substring(string($v158), 1,1))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v159', $v158)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R2P1S50', xdoxslt:get_variable($_XDOCTX, '$v159'))"/>
   </xsl:template>
   <xsl:template name="L1R2P5S51">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR((NULL)),'NONE')-->
      <xsl:variable name="v160" select="string('')"/>
      <xsl:variable name="v161" select="string($v160)"/>
      <xsl:variable name="v162" select="xdoxslt:convert_case(string($v161), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string($v162))>5">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v163', substring(string($v162), 1,5))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v163', $v162)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R2P5S51', xdoxslt:get_variable($_XDOCTX, '$v163'))"/>
   </xsl:template>
   <xsl:template name="L1R2P1S52">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR((',')),'NONE')-->
      <xsl:variable name="v164" select="string(',')"/>
      <xsl:variable name="v165" select="xdoxslt:convert_case(string($v164), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string($v165))>1">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v166', substring(string($v165), 1,1))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v166', $v165)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R2P1S52', xdoxslt:get_variable($_XDOCTX, '$v166'))"/>
   </xsl:template>
   <xsl:template name="L1R2P2S53">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR(('AE')),'NONE')-->
      <xsl:variable name="v167" select="string('AE')"/>
      <xsl:variable name="v168" select="xdoxslt:convert_case(string($v167), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string($v168))>2">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v169', substring(string($v168), 1,2))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v169', $v168)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R2P2S53', xdoxslt:get_variable($_XDOCTX, '$v169'))"/>
   </xsl:template>
   <xsl:template name="L1R2P1S54">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR((',')),'NONE')-->
      <xsl:variable name="v170" select="string(',')"/>
      <xsl:variable name="v171" select="xdoxslt:convert_case(string($v170), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string($v171))>1">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v172', substring(string($v171), 1,1))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v172', $v171)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R2P1S54', xdoxslt:get_variable($_XDOCTX, '$v172'))"/>
   </xsl:template>
   <xsl:template name="L1R2P4S55">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR(('HBME')),'NONE')-->
      <xsl:variable name="v173" select="string('HBME')"/>
      <xsl:variable name="v174" select="xdoxslt:convert_case(string($v173), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string($v174))>4">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v175', substring(string($v174), 1,4))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v175', $v174)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R2P4S55', xdoxslt:get_variable($_XDOCTX, '$v175'))"/>
   </xsl:template>
   <xsl:template name="L1R2P1S56">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR((',')),'NONE')-->
      <xsl:variable name="v176" select="string(',')"/>
      <xsl:variable name="v177" select="xdoxslt:convert_case(string($v176), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string($v177))>1">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v178', substring(string($v177), 1,1))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v178', $v177)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R2P1S56', xdoxslt:get_variable($_XDOCTX, '$v178'))"/>
   </xsl:template>
   <xsl:template name="L1R2P3S57">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR(('AED')),'NONE')-->
      <xsl:variable name="v179" select="string('AED')"/>
      <xsl:variable name="v180" select="xdoxslt:convert_case(string($v179), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string($v180))>3">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v181', substring(string($v180), 1,3))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v181', $v180)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R2P3S57', xdoxslt:get_variable($_XDOCTX, '$v181'))"/>
   </xsl:template>
   <xsl:template name="L1R2P1S58">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR((',')),'NONE')-->
      <xsl:variable name="v182" select="string(',')"/>
      <xsl:variable name="v183" select="xdoxslt:convert_case(string($v182), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string($v183))>1">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v184', substring(string($v183), 1,1))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v184', $v183)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R2P1S58', xdoxslt:get_variable($_XDOCTX, '$v184'))"/>
   </xsl:template>
   <xsl:template name="L1R2P5S59">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR((NULL)),'NONE')-->
      <xsl:variable name="v185" select="string('')"/>
      <xsl:variable name="v186" select="string($v185)"/>
      <xsl:variable name="v187" select="xdoxslt:convert_case(string($v186), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string($v187))>5">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v188', substring(string($v187), 1,5))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v188', $v187)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R2P5S59', xdoxslt:get_variable($_XDOCTX, '$v188'))"/>
   </xsl:template>
   <xsl:template name="L1R2P1S60">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR((',')),'NONE')-->
      <xsl:variable name="v189" select="string(',')"/>
      <xsl:variable name="v190" select="xdoxslt:convert_case(string($v189), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string($v190))>1">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v191', substring(string($v190), 1,1))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v191', $v190)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R2P1S60', xdoxslt:get_variable($_XDOCTX, '$v191'))"/>
   </xsl:template>
   <xsl:template name="L1R2P40S61">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR(('SHUAA Capital psc')),'NONE')-->
      <xsl:variable name="v192" select="string('SHUAA Capital psc')"/>
      <xsl:variable name="v193" select="xdoxslt:convert_case(string($v192), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string($v193))>40">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v194', substring(string($v193), 1,40))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v194', $v193)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R2P40S61', xdoxslt:get_variable($_XDOCTX, '$v194'))"/>
   </xsl:template>
   <xsl:template name="L1R2P1S62">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR((',')),'NONE')-->
      <xsl:variable name="v195" select="string(',')"/>
      <xsl:variable name="v196" select="xdoxslt:convert_case(string($v195), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string($v196))>1">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v197', substring(string($v196), 1,1))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v197', $v196)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R2P1S62', xdoxslt:get_variable($_XDOCTX, '$v197'))"/>
   </xsl:template>
   <xsl:template name="L1R2P5S63">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR((NULL)),'NONE')-->
      <xsl:variable name="v198" select="string('')"/>
      <xsl:variable name="v199" select="string($v198)"/>
      <xsl:variable name="v200" select="xdoxslt:convert_case(string($v199), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string($v200))>5">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v201', substring(string($v200), 1,5))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v201', $v200)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R2P5S63', xdoxslt:get_variable($_XDOCTX, '$v201'))"/>
   </xsl:template>
   <xsl:template name="L1R2P1S64">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR((',')),'NONE')-->
      <xsl:variable name="v202" select="string(',')"/>
      <xsl:variable name="v203" select="xdoxslt:convert_case(string($v202), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string($v203))>1">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v204', substring(string($v203), 1,1))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v204', $v203)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R2P1S64', xdoxslt:get_variable($_XDOCTX, '$v204'))"/>
   </xsl:template>
   <xsl:template name="L1R2P5S65">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR((NULL)),'NONE')-->
      <xsl:variable name="v205" select="string('')"/>
      <xsl:variable name="v206" select="string($v205)"/>
      <xsl:variable name="v207" select="xdoxslt:convert_case(string($v206), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string($v207))>5">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v208', substring(string($v207), 1,5))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v208', $v207)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R2P5S65', xdoxslt:get_variable($_XDOCTX, '$v208'))"/>
   </xsl:template>
   <xsl:template name="L1R2P1S66">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR((',')),'NONE')-->
      <xsl:variable name="v209" select="string(',')"/>
      <xsl:variable name="v210" select="xdoxslt:convert_case(string($v209), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string($v210))>1">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v211', substring(string($v210), 1,1))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v211', $v210)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R2P1S66', xdoxslt:get_variable($_XDOCTX, '$v211'))"/>
   </xsl:template>
   <xsl:template name="L1R2P5S67">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR((NULL)),'NONE')-->
      <xsl:variable name="v212" select="string('')"/>
      <xsl:variable name="v213" select="string($v212)"/>
      <xsl:variable name="v214" select="xdoxslt:convert_case(string($v213), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string($v214))>5">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v215', substring(string($v214), 1,5))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v215', $v214)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R2P5S67', xdoxslt:get_variable($_XDOCTX, '$v215'))"/>
   </xsl:template>
   <xsl:template name="L1R2P1S68">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR((',')),'NONE')-->
      <xsl:variable name="v216" select="string(',')"/>
      <xsl:variable name="v217" select="xdoxslt:convert_case(string($v216), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string($v217))>1">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v218', substring(string($v217), 1,1))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v218', $v217)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R2P1S68', xdoxslt:get_variable($_XDOCTX, '$v218'))"/>
   </xsl:template>
   <xsl:template name="L1R2P5S69">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR((NULL)),'NONE')-->
      <xsl:variable name="v219" select="string('')"/>
      <xsl:variable name="v220" select="string($v219)"/>
      <xsl:variable name="v221" select="xdoxslt:convert_case(string($v220), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string($v221))>5">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v222', substring(string($v221), 1,5))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v222', $v221)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R2P5S69', xdoxslt:get_variable($_XDOCTX, '$v222'))"/>
   </xsl:template>
   <xsl:template name="L1R2P1S70">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR((',')),'NONE')-->
      <xsl:variable name="v223" select="string(',')"/>
      <xsl:variable name="v224" select="xdoxslt:convert_case(string($v223), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string($v224))>1">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v225', substring(string($v224), 1,1))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v225', $v224)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R2P1S70', xdoxslt:get_variable($_XDOCTX, '$v225'))"/>
   </xsl:template>
   <xsl:template name="L1R2P3S71">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR(('S01')),'NONE')-->
      <xsl:variable name="v226" select="string('S01')"/>
      <xsl:variable name="v227" select="xdoxslt:convert_case(string($v226), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string($v227))>3">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v228', substring(string($v227), 1,3))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v228', $v227)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R2P3S71', xdoxslt:get_variable($_XDOCTX, '$v228'))"/>
   </xsl:template>
   <xsl:template name="L1R2P1S72">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR((',')),'NONE')-->
      <xsl:variable name="v229" select="string(',')"/>
      <xsl:variable name="v230" select="xdoxslt:convert_case(string($v229), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string($v230))>1">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v231', substring(string($v230), 1,1))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v231', $v230)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R2P1S72', xdoxslt:get_variable($_XDOCTX, '$v231'))"/>
   </xsl:template>
   <xsl:template name="L1R2P20S73">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR((CF_REF_LINE_1)),'NONE')-->
      <xsl:variable name="v232" select="string(xdoxslt:normalize_string($_XDOCTX, .//CF_REF_LINE_1))"/>
      <xsl:variable name="v233" select="xdoxslt:convert_case(string($v232), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string($v233))>20">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v234', substring(string($v233), 1,20))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v234', $v233)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R2P20S73', xdoxslt:get_variable($_XDOCTX, '$v234'))"/>
   </xsl:template>
   <xsl:template name="SEQ_START_Bank Details3_RC">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: 0-->
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'SEQ_START_Bank Details3_RC_V', 0)"/>
   </xsl:template>
   <xsl:template name="L1R3P6S74">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR(('SECPTY')),'NONE')-->
      <xsl:variable name="v235" select="string('SECPTY')"/>
      <xsl:variable name="v236" select="xdoxslt:convert_case(string($v235), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string($v236))>6">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v237', substring(string($v236), 1,6))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v237', $v236)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R3P6S74', xdoxslt:get_variable($_XDOCTX, '$v237'))"/>
   </xsl:template>
   <xsl:template name="L1R3P1S75">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR((',')),'NONE')-->
      <xsl:variable name="v238" select="string(',')"/>
      <xsl:variable name="v239" select="xdoxslt:convert_case(string($v238), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string($v239))>1">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v240', substring(string($v239), 1,1))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v240', $v239)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R3P1S75', xdoxslt:get_variable($_XDOCTX, '$v240'))"/>
   </xsl:template>
   <xsl:template name="L1R3P23S76">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR((SECOND_PARTY_ACCOUNT_NUMBER)),'NONE')-->
      <xsl:variable name="v241" select="string(xdoxslt:normalize_string($_XDOCTX, .//SECOND_PARTY_ACCOUNT_NUMBER))"/>
      <xsl:variable name="v242" select="xdoxslt:convert_case(string($v241), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string($v242))>23">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v243', substring(string($v242), 1,23))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v243', $v242)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R3P23S76', xdoxslt:get_variable($_XDOCTX, '$v243'))"/>
   </xsl:template>
   <xsl:template name="L1R3P1S77">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR((',')),'NONE')-->
      <xsl:variable name="v244" select="string(',')"/>
      <xsl:variable name="v245" select="xdoxslt:convert_case(string($v244), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string($v245))>1">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v246', substring(string($v245), 1,1))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v246', $v245)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R3P1S77', xdoxslt:get_variable($_XDOCTX, '$v246'))"/>
   </xsl:template>
   <xsl:template name="L1R3P20S78">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR((SECOND_PARTY_NAME)),'NONE')-->
      <xsl:variable name="v247" select="string(xdoxslt:normalize_string($_XDOCTX, .//SECOND_PARTY_NAME))"/>
      <xsl:variable name="v248" select="xdoxslt:convert_case(string($v247), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string($v248))>20">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v249', substring(string($v248), 1,20))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v249', $v248)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R3P20S78', xdoxslt:get_variable($_XDOCTX, '$v249'))"/>
   </xsl:template>
   <xsl:template name="L1R3P1S79">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR((',')),'NONE')-->
      <xsl:variable name="v250" select="string(',')"/>
      <xsl:variable name="v251" select="xdoxslt:convert_case(string($v250), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string($v251))>1">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v252', substring(string($v251), 1,1))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v252', $v251)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R3P1S79', xdoxslt:get_variable($_XDOCTX, '$v252'))"/>
   </xsl:template>
   <xsl:template name="L1R3P8S80">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR((SECOND_PARTY_NUMBER)),'NONE')-->
      <xsl:variable name="v253" select="string(xdoxslt:normalize_string($_XDOCTX, .//SECOND_PARTY_NUMBER))"/>
      <xsl:variable name="v254" select="xdoxslt:convert_case(string($v253), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string($v254))>8">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v255', substring(string($v254), 1,8))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v255', $v254)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R3P8S80', xdoxslt:get_variable($_XDOCTX, '$v255'))"/>
   </xsl:template>
   <xsl:template name="L1R3P1S81">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR((',')),'NONE')-->
      <xsl:variable name="v256" select="string(',')"/>
      <xsl:variable name="v257" select="xdoxslt:convert_case(string($v256), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string($v257))>1">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v258', substring(string($v257), 1,1))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v258', $v257)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R3P1S81', xdoxslt:get_variable($_XDOCTX, '$v258'))"/>
   </xsl:template>
   <xsl:template name="L1R3P15S82">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR((BENEFICIARY_BANK_ID)),'NONE')-->
      <xsl:variable name="v259" select="string(xdoxslt:normalize_string($_XDOCTX, .//BENEFICIARY_BANK_ID))"/>
      <xsl:variable name="v260" select="xdoxslt:convert_case(string($v259), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string($v260))>15">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v261', substring(string($v260), 1,15))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v261', $v260)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R3P15S82', xdoxslt:get_variable($_XDOCTX, '$v261'))"/>
   </xsl:template>
   <xsl:template name="L1R3P1S83">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR((',')),'NONE')-->
      <xsl:variable name="v262" select="string(',')"/>
      <xsl:variable name="v263" select="xdoxslt:convert_case(string($v262), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string($v263))>1">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v264', substring(string($v263), 1,1))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v264', $v263)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R3P1S83', xdoxslt:get_variable($_XDOCTX, '$v264'))"/>
   </xsl:template>
   <xsl:template name="L1R3P5S84">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR((NULL)),'NONE')-->
      <xsl:variable name="v265" select="string('')"/>
      <xsl:variable name="v266" select="string($v265)"/>
      <xsl:variable name="v267" select="xdoxslt:convert_case(string($v266), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string($v267))>5">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v268', substring(string($v267), 1,5))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v268', $v267)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R3P5S84', xdoxslt:get_variable($_XDOCTX, '$v268'))"/>
   </xsl:template>
   <xsl:template name="L1R3P1S85">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR((',')),'NONE')-->
      <xsl:variable name="v269" select="string(',')"/>
      <xsl:variable name="v270" select="xdoxslt:convert_case(string($v269), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string($v270))>1">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v271', substring(string($v270), 1,1))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v271', $v270)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R3P1S85', xdoxslt:get_variable($_XDOCTX, '$v271'))"/>
   </xsl:template>
   <xsl:template name="L1R3P5S86">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR((NULL)),'NONE')-->
      <xsl:variable name="v272" select="string('')"/>
      <xsl:variable name="v273" select="string($v272)"/>
      <xsl:variable name="v274" select="xdoxslt:convert_case(string($v273), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string($v274))>5">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v275', substring(string($v274), 1,5))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v275', $v274)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R3P5S86', xdoxslt:get_variable($_XDOCTX, '$v275'))"/>
   </xsl:template>
   <xsl:template name="L1R3P1S87">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR((',')),'NONE')-->
      <xsl:variable name="v276" select="string(',')"/>
      <xsl:variable name="v277" select="xdoxslt:convert_case(string($v276), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string($v277))>1">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v278', substring(string($v277), 1,1))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v278', $v277)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R3P1S87', xdoxslt:get_variable($_XDOCTX, '$v278'))"/>
   </xsl:template>
   <xsl:template name="L1R3P15S88">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR((CF_NET_PAY)),'NONE')-->
      <xsl:variable name="v279" select="string(xdoxslt:normalize_string($_XDOCTX, .//CF_NET_PAY))"/>
      <xsl:variable name="v280" select="xdoxslt:convert_case(string($v279), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string($v280))>15">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v281', substring(string($v280), 1,15))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v281', $v280)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R3P15S88', xdoxslt:get_variable($_XDOCTX, '$v281'))"/>
   </xsl:template>
   <xsl:template name="L1R3P1S89">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR((',')),'NONE')-->
      <xsl:variable name="v282" select="string(',')"/>
      <xsl:variable name="v283" select="xdoxslt:convert_case(string($v282), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string($v283))>1">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v284', substring(string($v283), 1,1))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v284', $v283)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R3P1S89', xdoxslt:get_variable($_XDOCTX, '$v284'))"/>
   </xsl:template>
   <xsl:template name="L1R3P5S90">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR((NULL)),'NONE')-->
      <xsl:variable name="v285" select="string('')"/>
      <xsl:variable name="v286" select="string($v285)"/>
      <xsl:variable name="v287" select="xdoxslt:convert_case(string($v286), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string($v287))>5">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v288', substring(string($v287), 1,5))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v288', $v287)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R3P5S90', xdoxslt:get_variable($_XDOCTX, '$v288'))"/>
   </xsl:template>
   <xsl:template name="L1R3P1S91">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR((',')),'NONE')-->
      <xsl:variable name="v289" select="string(',')"/>
      <xsl:variable name="v290" select="xdoxslt:convert_case(string($v289), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string($v290))>1">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v291', substring(string($v290), 1,1))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v291', $v290)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R3P1S91', xdoxslt:get_variable($_XDOCTX, '$v291'))"/>
   </xsl:template>
   <xsl:template name="L1R3P20S92">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR((SECOND_PARTY_REFERENCE)),'NONE')-->
      <xsl:variable name="v292" select="string(xdoxslt:normalize_string($_XDOCTX, .//SECOND_PARTY_REFERENCE))"/>
      <xsl:variable name="v293" select="xdoxslt:convert_case(string($v292), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string($v293))>20">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v294', substring(string($v293), 1,20))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v294', $v293)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R3P20S92', xdoxslt:get_variable($_XDOCTX, '$v294'))"/>
   </xsl:template>
   <xsl:template name="L1R3P1S93">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR((',')),'NONE')-->
      <xsl:variable name="v295" select="string(',')"/>
      <xsl:variable name="v296" select="xdoxslt:convert_case(string($v295), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string($v296))>1">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v297', substring(string($v296), 1,1))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v297', $v296)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R3P1S93', xdoxslt:get_variable($_XDOCTX, '$v297'))"/>
   </xsl:template>
   <xsl:template name="L1R3P5S94">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR((NULL)),'NONE')-->
      <xsl:variable name="v298" select="string('')"/>
      <xsl:variable name="v299" select="string($v298)"/>
      <xsl:variable name="v300" select="xdoxslt:convert_case(string($v299), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string($v300))>5">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v301', substring(string($v300), 1,5))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v301', $v300)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R3P5S94', xdoxslt:get_variable($_XDOCTX, '$v301'))"/>
   </xsl:template>
   <xsl:template name="L1R3P1S95">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR((',')),'NONE')-->
      <xsl:variable name="v302" select="string(',')"/>
      <xsl:variable name="v303" select="xdoxslt:convert_case(string($v302), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string($v303))>1">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v304', substring(string($v303), 1,1))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v304', $v303)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R3P1S95', xdoxslt:get_variable($_XDOCTX, '$v304'))"/>
   </xsl:template>
   <xsl:template name="L1R3P5S96">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR((NULL)),'NONE')-->
      <xsl:variable name="v305" select="string('')"/>
      <xsl:variable name="v306" select="string($v305)"/>
      <xsl:variable name="v307" select="xdoxslt:convert_case(string($v306), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string($v307))>5">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v308', substring(string($v307), 1,5))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v308', $v307)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R3P5S96', xdoxslt:get_variable($_XDOCTX, '$v308'))"/>
   </xsl:template>
   <xsl:template name="L1R3P1S97">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR((',')),'NONE')-->
      <xsl:variable name="v309" select="string(',')"/>
      <xsl:variable name="v310" select="xdoxslt:convert_case(string($v309), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string($v310))>1">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v311', substring(string($v310), 1,1))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v311', $v310)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R3P1S97', xdoxslt:get_variable($_XDOCTX, '$v311'))"/>
   </xsl:template>
   <xsl:template name="L1R3P5S98">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR((NULL)),'NONE')-->
      <xsl:variable name="v312" select="string('')"/>
      <xsl:variable name="v313" select="string($v312)"/>
      <xsl:variable name="v314" select="xdoxslt:convert_case(string($v313), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string($v314))>5">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v315', substring(string($v314), 1,5))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v315', $v314)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R3P5S98', xdoxslt:get_variable($_XDOCTX, '$v315'))"/>
   </xsl:template>
   <xsl:template name="L1R3P1S99">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR((',')),'NONE')-->
      <xsl:variable name="v316" select="string(',')"/>
      <xsl:variable name="v317" select="xdoxslt:convert_case(string($v316), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string($v317))>1">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v318', substring(string($v317), 1,1))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v318', $v317)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R3P1S99', xdoxslt:get_variable($_XDOCTX, '$v318'))"/>
   </xsl:template>
   <xsl:template name="L1R3P5S100">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR((NULL)),'NONE')-->
      <xsl:variable name="v319" select="string('')"/>
      <xsl:variable name="v320" select="string($v319)"/>
      <xsl:variable name="v321" select="xdoxslt:convert_case(string($v320), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string($v321))>5">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v322', substring(string($v321), 1,5))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v322', $v321)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R3P5S100', xdoxslt:get_variable($_XDOCTX, '$v322'))"/>
   </xsl:template>
   <xsl:template name="L1R3P1S101">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR((',')),'NONE')-->
      <xsl:variable name="v323" select="string(',')"/>
      <xsl:variable name="v324" select="xdoxslt:convert_case(string($v323), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string($v324))>1">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v325', substring(string($v324), 1,1))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v325', $v324)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R3P1S101', xdoxslt:get_variable($_XDOCTX, '$v325'))"/>
   </xsl:template>
   <xsl:template name="L1R3P1S102">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR(('N')),'NONE')-->
      <xsl:variable name="v326" select="string('N')"/>
      <xsl:variable name="v327" select="xdoxslt:convert_case(string($v326), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string($v327))>1">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v328', substring(string($v327), 1,1))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v328', $v327)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R3P1S102', xdoxslt:get_variable($_XDOCTX, '$v328'))"/>
   </xsl:template>
   <xsl:template name="L1R3P1S103">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR((',')),'NONE')-->
      <xsl:variable name="v329" select="string(',')"/>
      <xsl:variable name="v330" select="xdoxslt:convert_case(string($v329), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string($v330))>1">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v331', substring(string($v330), 1,1))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v331', $v330)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R3P1S103', xdoxslt:get_variable($_XDOCTX, '$v331'))"/>
   </xsl:template>
   <xsl:template name="L1R3P1S104">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR(('N')),'NONE')-->
      <xsl:variable name="v332" select="string('N')"/>
      <xsl:variable name="v333" select="xdoxslt:convert_case(string($v332), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string($v333))>1">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v334', substring(string($v333), 1,1))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v334', $v333)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R3P1S104', xdoxslt:get_variable($_XDOCTX, '$v334'))"/>
   </xsl:template>
   <xsl:template name="L1R3P1S105">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR((',')),'NONE')-->
      <xsl:variable name="v335" select="string(',')"/>
      <xsl:variable name="v336" select="xdoxslt:convert_case(string($v335), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string($v336))>1">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v337', substring(string($v336), 1,1))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v337', $v336)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R3P1S105', xdoxslt:get_variable($_XDOCTX, '$v337'))"/>
   </xsl:template>
   <xsl:template name="L1R3P5S106">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR((NULL)),'NONE')-->
      <xsl:variable name="v338" select="string('')"/>
      <xsl:variable name="v339" select="string($v338)"/>
      <xsl:variable name="v340" select="xdoxslt:convert_case(string($v339), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string($v340))>5">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v341', substring(string($v340), 1,5))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v341', $v340)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R3P5S106', xdoxslt:get_variable($_XDOCTX, '$v341'))"/>
   </xsl:template>
   <xsl:template name="L1R3P1S107">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR((',')),'NONE')-->
      <xsl:variable name="v342" select="string(',')"/>
      <xsl:variable name="v343" select="xdoxslt:convert_case(string($v342), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string($v343))>1">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v344', substring(string($v343), 1,1))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v344', $v343)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R3P1S107', xdoxslt:get_variable($_XDOCTX, '$v344'))"/>
   </xsl:template>
   <xsl:template name="L1R3P5S108">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR((NULL)),'NONE')-->
      <xsl:variable name="v345" select="string('')"/>
      <xsl:variable name="v346" select="string($v345)"/>
      <xsl:variable name="v347" select="xdoxslt:convert_case(string($v346), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string($v347))>5">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v348', substring(string($v347), 1,5))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v348', $v347)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R3P5S108', xdoxslt:get_variable($_XDOCTX, '$v348'))"/>
   </xsl:template>
   <xsl:template name="L1R3P1S109">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR((',')),'NONE')-->
      <xsl:variable name="v349" select="string(',')"/>
      <xsl:variable name="v350" select="xdoxslt:convert_case(string($v349), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string($v350))>1">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v351', substring(string($v350), 1,1))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v351', $v350)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R3P1S109', xdoxslt:get_variable($_XDOCTX, '$v351'))"/>
   </xsl:template>
   <xsl:template name="L1R3P5S110">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR((NULL)),'NONE')-->
      <xsl:variable name="v352" select="string('')"/>
      <xsl:variable name="v353" select="string($v352)"/>
      <xsl:variable name="v354" select="xdoxslt:convert_case(string($v353), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string($v354))>5">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v355', substring(string($v354), 1,5))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v355', $v354)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R3P5S110', xdoxslt:get_variable($_XDOCTX, '$v355'))"/>
   </xsl:template>
   <xsl:template name="L1R3P1S111">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR((',')),'NONE')-->
      <xsl:variable name="v356" select="string(',')"/>
      <xsl:variable name="v357" select="xdoxslt:convert_case(string($v356), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string($v357))>1">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v358', substring(string($v357), 1,1))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v358', $v357)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R3P1S111', xdoxslt:get_variable($_XDOCTX, '$v358'))"/>
   </xsl:template>
   <xsl:template name="L1R3P5S112">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR((NULL)),'NONE')-->
      <xsl:variable name="v359" select="string('')"/>
      <xsl:variable name="v360" select="string($v359)"/>
      <xsl:variable name="v361" select="xdoxslt:convert_case(string($v360), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string($v361))>5">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v362', substring(string($v361), 1,5))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v362', $v361)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R3P5S112', xdoxslt:get_variable($_XDOCTX, '$v362'))"/>
   </xsl:template>
   <xsl:template name="L1R3P1S113">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR((',')),'NONE')-->
      <xsl:variable name="v363" select="string(',')"/>
      <xsl:variable name="v364" select="xdoxslt:convert_case(string($v363), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string($v364))>1">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v365', substring(string($v364), 1,1))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v365', $v364)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R3P1S113', xdoxslt:get_variable($_XDOCTX, '$v365'))"/>
   </xsl:template>
   <xsl:template name="L1R3P5S114">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR((NULL)),'NONE')-->
      <xsl:variable name="v366" select="string('')"/>
      <xsl:variable name="v367" select="string($v366)"/>
      <xsl:variable name="v368" select="xdoxslt:convert_case(string($v367), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string($v368))>5">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v369', substring(string($v368), 1,5))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v369', $v368)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R3P5S114', xdoxslt:get_variable($_XDOCTX, '$v369'))"/>
   </xsl:template>
   <xsl:template name="L1R3P1S115">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR((',')),'NONE')-->
      <xsl:variable name="v370" select="string(',')"/>
      <xsl:variable name="v371" select="xdoxslt:convert_case(string($v370), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string($v371))>1">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v372', substring(string($v371), 1,1))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v372', $v371)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R3P1S115', xdoxslt:get_variable($_XDOCTX, '$v372'))"/>
   </xsl:template>
   <xsl:template name="L1R3P5S116">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR(('@LVP@')),'NONE')-->
      <xsl:variable name="v373" select="string('@LVP@')"/>
      <xsl:variable name="v374" select="xdoxslt:convert_case(string($v373), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string($v374))>5">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v375', substring(string($v374), 1,5))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v375', $v374)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R3P5S116', xdoxslt:get_variable($_XDOCTX, '$v375'))"/>
   </xsl:template>
   <xsl:template name="L1R3P1S117">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR((',')),'NONE')-->
      <xsl:variable name="v376" select="string(',')"/>
      <xsl:variable name="v377" select="xdoxslt:convert_case(string($v376), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string($v377))>1">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v378', substring(string($v377), 1,1))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v378', $v377)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R3P1S117', xdoxslt:get_variable($_XDOCTX, '$v378'))"/>
   </xsl:template>
   <xsl:template name="L1R3P5S118">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR((NULL)),'NONE')-->
      <xsl:variable name="v379" select="string('')"/>
      <xsl:variable name="v380" select="string($v379)"/>
      <xsl:variable name="v381" select="xdoxslt:convert_case(string($v380), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string($v381))>5">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v382', substring(string($v381), 1,5))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v382', $v381)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R3P5S118', xdoxslt:get_variable($_XDOCTX, '$v382'))"/>
   </xsl:template>
   <xsl:template name="L1R3P1S119">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR((',')),'NONE')-->
      <xsl:variable name="v383" select="string(',')"/>
      <xsl:variable name="v384" select="xdoxslt:convert_case(string($v383), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string($v384))>1">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v385', substring(string($v384), 1,1))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v385', $v384)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R3P1S119', xdoxslt:get_variable($_XDOCTX, '$v385'))"/>
   </xsl:template>
   <xsl:template name="L1R3P5S120">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR((NULL)),'NONE')-->
      <xsl:variable name="v386" select="string('')"/>
      <xsl:variable name="v387" select="string($v386)"/>
      <xsl:variable name="v388" select="xdoxslt:convert_case(string($v387), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string($v388))>5">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v389', substring(string($v388), 1,5))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v389', $v388)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R3P5S120', xdoxslt:get_variable($_XDOCTX, '$v389'))"/>
   </xsl:template>
   <xsl:template name="L1R3P1S121">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR((',')),'NONE')-->
      <xsl:variable name="v390" select="string(',')"/>
      <xsl:variable name="v391" select="xdoxslt:convert_case(string($v390), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string($v391))>1">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v392', substring(string($v391), 1,1))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v392', $v391)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R3P1S121', xdoxslt:get_variable($_XDOCTX, '$v392'))"/>
   </xsl:template>
   <xsl:template name="L1R3P5S122">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR((NULL)),'NONE')-->
      <xsl:variable name="v393" select="string('')"/>
      <xsl:variable name="v394" select="string($v393)"/>
      <xsl:variable name="v395" select="xdoxslt:convert_case(string($v394), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string($v395))>5">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v396', substring(string($v395), 1,5))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v396', $v395)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R3P5S122', xdoxslt:get_variable($_XDOCTX, '$v396'))"/>
   </xsl:template>
   <xsl:template name="L1R3P1S123">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR((',')),'NONE')-->
      <xsl:variable name="v397" select="string(',')"/>
      <xsl:variable name="v398" select="xdoxslt:convert_case(string($v397), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string($v398))>1">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v399', substring(string($v398), 1,1))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v399', $v398)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R3P1S123', xdoxslt:get_variable($_XDOCTX, '$v399'))"/>
   </xsl:template>
   <xsl:template name="L1R3P5S124">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR((NULL)),'NONE')-->
      <xsl:variable name="v400" select="string('')"/>
      <xsl:variable name="v401" select="string($v400)"/>
      <xsl:variable name="v402" select="xdoxslt:convert_case(string($v401), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string($v402))>5">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v403', substring(string($v402), 1,5))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v403', $v402)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R3P5S124', xdoxslt:get_variable($_XDOCTX, '$v403'))"/>
   </xsl:template>
   <xsl:template name="L1R3P1S125">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR((',')),'NONE')-->
      <xsl:variable name="v404" select="string(',')"/>
      <xsl:variable name="v405" select="xdoxslt:convert_case(string($v404), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string($v405))>1">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v406', substring(string($v405), 1,1))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v406', $v405)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R3P1S125', xdoxslt:get_variable($_XDOCTX, '$v406'))"/>
   </xsl:template>
   <xsl:template name="L1R3P5S126">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR((NULL)),'NONE')-->
      <xsl:variable name="v407" select="string('')"/>
      <xsl:variable name="v408" select="string($v407)"/>
      <xsl:variable name="v409" select="xdoxslt:convert_case(string($v408), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string($v409))>5">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v410', substring(string($v409), 1,5))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v410', $v409)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R3P5S126', xdoxslt:get_variable($_XDOCTX, '$v410'))"/>
   </xsl:template>
   <xsl:template name="L1R3P1S127">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR((',')),'NONE')-->
      <xsl:variable name="v411" select="string(',')"/>
      <xsl:variable name="v412" select="xdoxslt:convert_case(string($v411), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string($v412))>1">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v413', substring(string($v412), 1,1))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v413', $v412)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R3P1S127', xdoxslt:get_variable($_XDOCTX, '$v413'))"/>
   </xsl:template>
   <xsl:template name="L1R3P5S128">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR((NULL)),'NONE')-->
      <xsl:variable name="v414" select="string('')"/>
      <xsl:variable name="v415" select="string($v414)"/>
      <xsl:variable name="v416" select="xdoxslt:convert_case(string($v415), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string($v416))>5">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v417', substring(string($v416), 1,5))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v417', $v416)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R3P5S128', xdoxslt:get_variable($_XDOCTX, '$v417'))"/>
   </xsl:template>
   <xsl:template name="L1R3P1S129">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR((',')),'NONE')-->
      <xsl:variable name="v418" select="string(',')"/>
      <xsl:variable name="v419" select="xdoxslt:convert_case(string($v418), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string($v419))>1">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v420', substring(string($v419), 1,1))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v420', $v419)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R3P1S129', xdoxslt:get_variable($_XDOCTX, '$v420'))"/>
   </xsl:template>
   <xsl:template name="L1R3P5S130">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR((NULL)),'NONE')-->
      <xsl:variable name="v421" select="string('')"/>
      <xsl:variable name="v422" select="string($v421)"/>
      <xsl:variable name="v423" select="xdoxslt:convert_case(string($v422), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string($v423))>5">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v424', substring(string($v423), 1,5))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v424', $v423)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R3P5S130', xdoxslt:get_variable($_XDOCTX, '$v424'))"/>
   </xsl:template>
   <xsl:template name="L1R3P1S131">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR((',')),'NONE')-->
      <xsl:variable name="v425" select="string(',')"/>
      <xsl:variable name="v426" select="xdoxslt:convert_case(string($v425), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string($v426))>1">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v427', substring(string($v426), 1,1))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v427', $v426)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R3P1S131', xdoxslt:get_variable($_XDOCTX, '$v427'))"/>
   </xsl:template>
   <xsl:template name="L1R3P5S132">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR((NULL)),'NONE')-->
      <xsl:variable name="v428" select="string('')"/>
      <xsl:variable name="v429" select="string($v428)"/>
      <xsl:variable name="v430" select="xdoxslt:convert_case(string($v429), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string($v430))>5">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v431', substring(string($v430), 1,5))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v431', $v430)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R3P5S132', xdoxslt:get_variable($_XDOCTX, '$v431'))"/>
   </xsl:template>
   <xsl:template name="L1R3P1S133">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR((',')),'NONE')-->
      <xsl:variable name="v432" select="string(',')"/>
      <xsl:variable name="v433" select="xdoxslt:convert_case(string($v432), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string($v433))>1">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v434', substring(string($v433), 1,1))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v434', $v433)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R3P1S133', xdoxslt:get_variable($_XDOCTX, '$v434'))"/>
   </xsl:template>
   <xsl:template name="L1R3P5S134">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR((NULL)),'NONE')-->
      <xsl:variable name="v435" select="string('')"/>
      <xsl:variable name="v436" select="string($v435)"/>
      <xsl:variable name="v437" select="xdoxslt:convert_case(string($v436), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string($v437))>5">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v438', substring(string($v437), 1,5))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v438', $v437)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R3P5S134', xdoxslt:get_variable($_XDOCTX, '$v438'))"/>
   </xsl:template>
   <xsl:template name="L1R3P1S135">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR((',')),'NONE')-->
      <xsl:variable name="v439" select="string(',')"/>
      <xsl:variable name="v440" select="xdoxslt:convert_case(string($v439), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string($v440))>1">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v441', substring(string($v440), 1,1))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v441', $v440)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R3P1S135', xdoxslt:get_variable($_XDOCTX, '$v441'))"/>
   </xsl:template>
   <xsl:template name="L1R3P5S136">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR((NULL)),'NONE')-->
      <xsl:variable name="v442" select="string('')"/>
      <xsl:variable name="v443" select="string($v442)"/>
      <xsl:variable name="v444" select="xdoxslt:convert_case(string($v443), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string($v444))>5">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v445', substring(string($v444), 1,5))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v445', $v444)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R3P5S136', xdoxslt:get_variable($_XDOCTX, '$v445'))"/>
   </xsl:template>
   <xsl:template name="L1R3P1S137">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR((',')),'NONE')-->
      <xsl:variable name="v446" select="string(',')"/>
      <xsl:variable name="v447" select="xdoxslt:convert_case(string($v446), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string($v447))>1">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v448', substring(string($v447), 1,1))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v448', $v447)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R3P1S137', xdoxslt:get_variable($_XDOCTX, '$v448'))"/>
   </xsl:template>
   <xsl:template name="L1R3P5S138">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR((NULL)),'NONE')-->
      <xsl:variable name="v449" select="string('')"/>
      <xsl:variable name="v450" select="string($v449)"/>
      <xsl:variable name="v451" select="xdoxslt:convert_case(string($v450), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string($v451))>5">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v452', substring(string($v451), 1,5))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v452', $v451)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R3P5S138', xdoxslt:get_variable($_XDOCTX, '$v452'))"/>
   </xsl:template>
   <xsl:template name="L1R3P1S139">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR((',')),'NONE')-->
      <xsl:variable name="v453" select="string(',')"/>
      <xsl:variable name="v454" select="xdoxslt:convert_case(string($v453), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string($v454))>1">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v455', substring(string($v454), 1,1))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v455', $v454)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R3P1S139', xdoxslt:get_variable($_XDOCTX, '$v455'))"/>
   </xsl:template>
   <xsl:template name="L1R3P5S140">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR((NULL)),'NONE')-->
      <xsl:variable name="v456" select="string('')"/>
      <xsl:variable name="v457" select="string($v456)"/>
      <xsl:variable name="v458" select="xdoxslt:convert_case(string($v457), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string($v458))>5">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v459', substring(string($v458), 1,5))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v459', $v458)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R3P5S140', xdoxslt:get_variable($_XDOCTX, '$v459'))"/>
   </xsl:template>
   <xsl:template name="L1R3P1S141">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR((',')),'NONE')-->
      <xsl:variable name="v460" select="string(',')"/>
      <xsl:variable name="v461" select="xdoxslt:convert_case(string($v460), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string($v461))>1">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v462', substring(string($v461), 1,1))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v462', $v461)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R3P1S141', xdoxslt:get_variable($_XDOCTX, '$v462'))"/>
   </xsl:template>
   <xsl:template name="L1R3P5S142">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR((NULL)),'NONE')-->
      <xsl:variable name="v463" select="string('')"/>
      <xsl:variable name="v464" select="string($v463)"/>
      <xsl:variable name="v465" select="xdoxslt:convert_case(string($v464), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string($v465))>5">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v466', substring(string($v465), 1,5))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v466', $v465)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R3P5S142', xdoxslt:get_variable($_XDOCTX, '$v466'))"/>
   </xsl:template>
   <xsl:template name="L1R3P1S143">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR((',')),'NONE')-->
      <xsl:variable name="v467" select="string(',')"/>
      <xsl:variable name="v468" select="xdoxslt:convert_case(string($v467), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string($v468))>1">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v469', substring(string($v468), 1,1))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v469', $v468)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R3P1S143', xdoxslt:get_variable($_XDOCTX, '$v469'))"/>
   </xsl:template>
   <xsl:template name="L1R3P5S144">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR((NULL)),'NONE')-->
      <xsl:variable name="v470" select="string('')"/>
      <xsl:variable name="v471" select="string($v470)"/>
      <xsl:variable name="v472" select="xdoxslt:convert_case(string($v471), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string($v472))>5">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v473', substring(string($v472), 1,5))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v473', $v472)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R3P5S144', xdoxslt:get_variable($_XDOCTX, '$v473'))"/>
   </xsl:template>
   <xsl:template name="L1R3P1S145">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR((',')),'NONE')-->
      <xsl:variable name="v474" select="string(',')"/>
      <xsl:variable name="v475" select="xdoxslt:convert_case(string($v474), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string($v475))>1">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v476', substring(string($v475), 1,1))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v476', $v475)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R3P1S145', xdoxslt:get_variable($_XDOCTX, '$v476'))"/>
   </xsl:template>
   <xsl:template name="L1R3P5S146">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR((NULL)),'NONE')-->
      <xsl:variable name="v477" select="string('')"/>
      <xsl:variable name="v478" select="string($v477)"/>
      <xsl:variable name="v479" select="xdoxslt:convert_case(string($v478), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string($v479))>5">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v480', substring(string($v479), 1,5))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v480', $v479)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R3P5S146', xdoxslt:get_variable($_XDOCTX, '$v480'))"/>
   </xsl:template>
   <xsl:template name="L1R3P1S147">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR((',')),'NONE')-->
      <xsl:variable name="v481" select="string(',')"/>
      <xsl:variable name="v482" select="xdoxslt:convert_case(string($v481), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string($v482))>1">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v483', substring(string($v482), 1,1))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v483', $v482)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R3P1S147', xdoxslt:get_variable($_XDOCTX, '$v483'))"/>
   </xsl:template>
   <xsl:template name="L1R3P5S148">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR((NULL)),'NONE')-->
      <xsl:variable name="v484" select="string('')"/>
      <xsl:variable name="v485" select="string($v484)"/>
      <xsl:variable name="v486" select="xdoxslt:convert_case(string($v485), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string($v486))>5">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v487', substring(string($v486), 1,5))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v487', $v486)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R3P5S148', xdoxslt:get_variable($_XDOCTX, '$v487'))"/>
   </xsl:template>
   <xsl:template name="L1R3P1S149">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR((',')),'NONE')-->
      <xsl:variable name="v488" select="string(',')"/>
      <xsl:variable name="v489" select="xdoxslt:convert_case(string($v488), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string($v489))>1">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v490', substring(string($v489), 1,1))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v490', $v489)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R3P1S149', xdoxslt:get_variable($_XDOCTX, '$v490'))"/>
   </xsl:template>
   <xsl:template name="L1R3P5S150">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR((NULL)),'NONE')-->
      <xsl:variable name="v491" select="string('')"/>
      <xsl:variable name="v492" select="string($v491)"/>
      <xsl:variable name="v493" select="xdoxslt:convert_case(string($v492), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string($v493))>5">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v494', substring(string($v493), 1,5))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v494', $v493)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R3P5S150', xdoxslt:get_variable($_XDOCTX, '$v494'))"/>
   </xsl:template>
   <xsl:template name="L1R3P1S151">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR((',')),'NONE')-->
      <xsl:variable name="v495" select="string(',')"/>
      <xsl:variable name="v496" select="xdoxslt:convert_case(string($v495), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string($v496))>1">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v497', substring(string($v496), 1,1))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v497', $v496)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R3P1S151', xdoxslt:get_variable($_XDOCTX, '$v497'))"/>
   </xsl:template>
   <xsl:template name="L1R3P5S152">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR((NULL)),'NONE')-->
      <xsl:variable name="v498" select="string('')"/>
      <xsl:variable name="v499" select="string($v498)"/>
      <xsl:variable name="v500" select="xdoxslt:convert_case(string($v499), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string($v500))>5">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v501', substring(string($v500), 1,5))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v501', $v500)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R3P5S152', xdoxslt:get_variable($_XDOCTX, '$v501'))"/>
   </xsl:template>
   <xsl:template name="L1R3P1S153">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR((',')),'NONE')-->
      <xsl:variable name="v502" select="string(',')"/>
      <xsl:variable name="v503" select="xdoxslt:convert_case(string($v502), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string($v503))>1">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v504', substring(string($v503), 1,1))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v504', $v503)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R3P1S153', xdoxslt:get_variable($_XDOCTX, '$v504'))"/>
   </xsl:template>
   <xsl:template name="L1R3P5S154">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR((NULL)),'NONE')-->
      <xsl:variable name="v505" select="string('')"/>
      <xsl:variable name="v506" select="string($v505)"/>
      <xsl:variable name="v507" select="xdoxslt:convert_case(string($v506), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string($v507))>5">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v508', substring(string($v507), 1,5))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v508', $v507)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R3P5S154', xdoxslt:get_variable($_XDOCTX, '$v508'))"/>
   </xsl:template>
   <xsl:template name="L1R3P1S155">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR((',')),'NONE')-->
      <xsl:variable name="v509" select="string(',')"/>
      <xsl:variable name="v510" select="xdoxslt:convert_case(string($v509), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string($v510))>1">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v511', substring(string($v510), 1,1))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v511', $v510)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R3P1S155', xdoxslt:get_variable($_XDOCTX, '$v511'))"/>
   </xsl:template>
   <xsl:template name="L1R3P5S156">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR((NULL)),'NONE')-->
      <xsl:variable name="v512" select="string('')"/>
      <xsl:variable name="v513" select="string($v512)"/>
      <xsl:variable name="v514" select="xdoxslt:convert_case(string($v513), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string($v514))>5">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v515', substring(string($v514), 1,5))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v515', $v514)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R3P5S156', xdoxslt:get_variable($_XDOCTX, '$v515'))"/>
   </xsl:template>
   <xsl:template name="L1R3P1S157">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR((',')),'NONE')-->
      <xsl:variable name="v516" select="string(',')"/>
      <xsl:variable name="v517" select="xdoxslt:convert_case(string($v516), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string($v517))>1">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v518', substring(string($v517), 1,1))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v518', $v517)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R3P1S157', xdoxslt:get_variable($_XDOCTX, '$v518'))"/>
   </xsl:template>
   <xsl:template name="L1R3P5S158">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR((NULL)),'NONE')-->
      <xsl:variable name="v519" select="string('')"/>
      <xsl:variable name="v520" select="string($v519)"/>
      <xsl:variable name="v521" select="xdoxslt:convert_case(string($v520), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string($v521))>5">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v522', substring(string($v521), 1,5))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v522', $v521)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R3P5S158', xdoxslt:get_variable($_XDOCTX, '$v522'))"/>
   </xsl:template>
   <xsl:template name="L1R3P1S159">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR((',')),'NONE')-->
      <xsl:variable name="v523" select="string(',')"/>
      <xsl:variable name="v524" select="xdoxslt:convert_case(string($v523), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string($v524))>1">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v525', substring(string($v524), 1,1))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v525', $v524)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R3P1S159', xdoxslt:get_variable($_XDOCTX, '$v525'))"/>
   </xsl:template>
   <xsl:template name="L1R3P5S160">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR((NULL)),'NONE')-->
      <xsl:variable name="v526" select="string('')"/>
      <xsl:variable name="v527" select="string($v526)"/>
      <xsl:variable name="v528" select="xdoxslt:convert_case(string($v527), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string($v528))>5">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v529', substring(string($v528), 1,5))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v529', $v528)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R3P5S160', xdoxslt:get_variable($_XDOCTX, '$v529'))"/>
   </xsl:template>
   <xsl:template name="L1R3P1S161">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR((',')),'NONE')-->
      <xsl:variable name="v530" select="string(',')"/>
      <xsl:variable name="v531" select="xdoxslt:convert_case(string($v530), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string($v531))>1">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v532', substring(string($v531), 1,1))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v532', $v531)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R3P1S161', xdoxslt:get_variable($_XDOCTX, '$v532'))"/>
   </xsl:template>
   <xsl:template name="L1R3P5S162">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR((NULL)),'NONE')-->
      <xsl:variable name="v533" select="string('')"/>
      <xsl:variable name="v534" select="string($v533)"/>
      <xsl:variable name="v535" select="xdoxslt:convert_case(string($v534), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string($v535))>5">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v536', substring(string($v535), 1,5))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v536', $v535)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R3P5S162', xdoxslt:get_variable($_XDOCTX, '$v536'))"/>
   </xsl:template>
   <xsl:template name="L1R3P1S163">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR((',')),'NONE')-->
      <xsl:variable name="v537" select="string(',')"/>
      <xsl:variable name="v538" select="xdoxslt:convert_case(string($v537), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string($v538))>1">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v539', substring(string($v538), 1,1))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v539', $v538)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R3P1S163', xdoxslt:get_variable($_XDOCTX, '$v539'))"/>
   </xsl:template>
   <xsl:template name="L1R3P5S164">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR((NULL)),'NONE')-->
      <xsl:variable name="v540" select="string('')"/>
      <xsl:variable name="v541" select="string($v540)"/>
      <xsl:variable name="v542" select="xdoxslt:convert_case(string($v541), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string($v542))>5">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v543', substring(string($v542), 1,5))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v543', $v542)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R3P5S164', xdoxslt:get_variable($_XDOCTX, '$v543'))"/>
   </xsl:template>
   <xsl:template name="L1R3P1S165">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR((',')),'NONE')-->
      <xsl:variable name="v544" select="string(',')"/>
      <xsl:variable name="v545" select="xdoxslt:convert_case(string($v544), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string($v545))>1">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v546', substring(string($v545), 1,1))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v546', $v545)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R3P1S165', xdoxslt:get_variable($_XDOCTX, '$v546'))"/>
   </xsl:template>
   <xsl:template name="L1R3P5S166">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR((NULL)),'NONE')-->
      <xsl:variable name="v547" select="string('')"/>
      <xsl:variable name="v548" select="string($v547)"/>
      <xsl:variable name="v549" select="xdoxslt:convert_case(string($v548), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string($v549))>5">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v550', substring(string($v549), 1,5))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v550', $v549)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R3P5S166', xdoxslt:get_variable($_XDOCTX, '$v550'))"/>
   </xsl:template>
   <xsl:template name="L1R3P1S167">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR((',')),'NONE')-->
      <xsl:variable name="v551" select="string(',')"/>
      <xsl:variable name="v552" select="xdoxslt:convert_case(string($v551), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string($v552))>1">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v553', substring(string($v552), 1,1))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v553', $v552)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R3P1S167', xdoxslt:get_variable($_XDOCTX, '$v553'))"/>
   </xsl:template>
   <xsl:template name="L1R3P5S168">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR((NULL)),'NONE')-->
      <xsl:variable name="v554" select="string('')"/>
      <xsl:variable name="v555" select="string($v554)"/>
      <xsl:variable name="v556" select="xdoxslt:convert_case(string($v555), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string($v556))>5">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v557', substring(string($v556), 1,5))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v557', $v556)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R3P5S168', xdoxslt:get_variable($_XDOCTX, '$v557'))"/>
   </xsl:template>
   <xsl:template name="L1R3P1S169">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR((',')),'NONE')-->
      <xsl:variable name="v558" select="string(',')"/>
      <xsl:variable name="v559" select="xdoxslt:convert_case(string($v558), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string($v559))>1">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v560', substring(string($v559), 1,1))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v560', $v559)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R3P1S169', xdoxslt:get_variable($_XDOCTX, '$v560'))"/>
   </xsl:template>
   <xsl:template name="L1R3P5S170">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR((NULL)),'NONE')-->
      <xsl:variable name="v561" select="string('')"/>
      <xsl:variable name="v562" select="string($v561)"/>
      <xsl:variable name="v563" select="xdoxslt:convert_case(string($v562), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string($v563))>5">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v564', substring(string($v563), 1,5))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v564', $v563)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R3P5S170', xdoxslt:get_variable($_XDOCTX, '$v564'))"/>
   </xsl:template>
   <xsl:template name="L1R3P1S171">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR((',')),'NONE')-->
      <xsl:variable name="v565" select="string(',')"/>
      <xsl:variable name="v566" select="xdoxslt:convert_case(string($v565), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string($v566))>1">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v567', substring(string($v566), 1,1))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v567', $v566)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R3P1S171', xdoxslt:get_variable($_XDOCTX, '$v567'))"/>
   </xsl:template>
   <xsl:template name="L1R3P5S172">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR((NULL)),'NONE')-->
      <xsl:variable name="v568" select="string('')"/>
      <xsl:variable name="v569" select="string($v568)"/>
      <xsl:variable name="v570" select="xdoxslt:convert_case(string($v569), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string($v570))>5">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v571', substring(string($v570), 1,5))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v571', $v570)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R3P5S172', xdoxslt:get_variable($_XDOCTX, '$v571'))"/>
   </xsl:template>
   <xsl:template name="L1R3P1S173">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR((',')),'NONE')-->
      <xsl:variable name="v572" select="string(',')"/>
      <xsl:variable name="v573" select="xdoxslt:convert_case(string($v572), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string($v573))>1">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v574', substring(string($v573), 1,1))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v574', $v573)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R3P1S173', xdoxslt:get_variable($_XDOCTX, '$v574'))"/>
   </xsl:template>
   <xsl:template name="L1R3P5S174">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR((NULL)),'NONE')-->
      <xsl:variable name="v575" select="string('')"/>
      <xsl:variable name="v576" select="string($v575)"/>
      <xsl:variable name="v577" select="xdoxslt:convert_case(string($v576), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string($v577))>5">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v578', substring(string($v577), 1,5))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v578', $v577)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R3P5S174', xdoxslt:get_variable($_XDOCTX, '$v578'))"/>
   </xsl:template>
   <xsl:template name="L1R3P1S175">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR((',')),'NONE')-->
      <xsl:variable name="v579" select="string(',')"/>
      <xsl:variable name="v580" select="xdoxslt:convert_case(string($v579), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string($v580))>1">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v581', substring(string($v580), 1,1))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v581', $v580)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R3P1S175', xdoxslt:get_variable($_XDOCTX, '$v581'))"/>
   </xsl:template>
   <xsl:template name="L1R3P5S176">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR((NULL)),'NONE')-->
      <xsl:variable name="v582" select="string('')"/>
      <xsl:variable name="v583" select="string($v582)"/>
      <xsl:variable name="v584" select="xdoxslt:convert_case(string($v583), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string($v584))>5">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v585', substring(string($v584), 1,5))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v585', $v584)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R3P5S176', xdoxslt:get_variable($_XDOCTX, '$v585'))"/>
   </xsl:template>
   <xsl:template name="L1R3P1S177">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR((',')),'NONE')-->
      <xsl:variable name="v586" select="string(',')"/>
      <xsl:variable name="v587" select="xdoxslt:convert_case(string($v586), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string($v587))>1">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v588', substring(string($v587), 1,1))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v588', $v587)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R3P1S177', xdoxslt:get_variable($_XDOCTX, '$v588'))"/>
   </xsl:template>
   <xsl:template name="L1R3P5S178">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR((NULL)),'NONE')-->
      <xsl:variable name="v589" select="string('')"/>
      <xsl:variable name="v590" select="string($v589)"/>
      <xsl:variable name="v591" select="xdoxslt:convert_case(string($v590), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string($v591))>5">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v592', substring(string($v591), 1,5))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v592', $v591)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R3P5S178', xdoxslt:get_variable($_XDOCTX, '$v592'))"/>
   </xsl:template>
   <xsl:template name="L1R3P1S179">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR((',')),'NONE')-->
      <xsl:variable name="v593" select="string(',')"/>
      <xsl:variable name="v594" select="xdoxslt:convert_case(string($v593), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string($v594))>1">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v595', substring(string($v594), 1,1))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v595', $v594)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R3P1S179', xdoxslt:get_variable($_XDOCTX, '$v595'))"/>
   </xsl:template>
   <xsl:template name="L1R3P5S180">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR((NULL)),'NONE')-->
      <xsl:variable name="v596" select="string('')"/>
      <xsl:variable name="v597" select="string($v596)"/>
      <xsl:variable name="v598" select="xdoxslt:convert_case(string($v597), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string($v598))>5">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v599', substring(string($v598), 1,5))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v599', $v598)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R3P5S180', xdoxslt:get_variable($_XDOCTX, '$v599'))"/>
   </xsl:template>
   <xsl:template name="L1R3P1S181">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR((',')),'NONE')-->
      <xsl:variable name="v600" select="string(',')"/>
      <xsl:variable name="v601" select="xdoxslt:convert_case(string($v600), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string($v601))>1">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v602', substring(string($v601), 1,1))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v602', $v601)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R3P1S181', xdoxslt:get_variable($_XDOCTX, '$v602'))"/>
   </xsl:template>
   <xsl:template name="L1R3P5S182">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR((NULL)),'NONE')-->
      <xsl:variable name="v603" select="string('')"/>
      <xsl:variable name="v604" select="string($v603)"/>
      <xsl:variable name="v605" select="xdoxslt:convert_case(string($v604), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string($v605))>5">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v606', substring(string($v605), 1,5))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v606', $v605)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R3P5S182', xdoxslt:get_variable($_XDOCTX, '$v606'))"/>
   </xsl:template>
   <xsl:template name="L1R3P1S183">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR((',')),'NONE')-->
      <xsl:variable name="v607" select="string(',')"/>
      <xsl:variable name="v608" select="xdoxslt:convert_case(string($v607), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string($v608))>1">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v609', substring(string($v608), 1,1))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v609', $v608)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R3P1S183', xdoxslt:get_variable($_XDOCTX, '$v609'))"/>
   </xsl:template>
   <xsl:template name="L1R3P5S184">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR((NULL)),'NONE')-->
      <xsl:variable name="v610" select="string('')"/>
      <xsl:variable name="v611" select="string($v610)"/>
      <xsl:variable name="v612" select="xdoxslt:convert_case(string($v611), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string($v612))>5">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v613', substring(string($v612), 1,5))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v613', $v612)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R3P5S184', xdoxslt:get_variable($_XDOCTX, '$v613'))"/>
   </xsl:template>
   <xsl:template name="L1R3P1S185">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR((',')),'NONE')-->
      <xsl:variable name="v614" select="string(',')"/>
      <xsl:variable name="v615" select="xdoxslt:convert_case(string($v614), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string($v615))>1">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v616', substring(string($v615), 1,1))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v616', $v615)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R3P1S185', xdoxslt:get_variable($_XDOCTX, '$v616'))"/>
   </xsl:template>
   <xsl:template name="L1R3P5S186">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR((NULL)),'NONE')-->
      <xsl:variable name="v617" select="string('')"/>
      <xsl:variable name="v618" select="string($v617)"/>
      <xsl:variable name="v619" select="xdoxslt:convert_case(string($v618), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string($v619))>5">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v620', substring(string($v619), 1,5))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v620', $v619)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R3P5S186', xdoxslt:get_variable($_XDOCTX, '$v620'))"/>
   </xsl:template>
   <xsl:template name="L1R3P1S187">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR((',')),'NONE')-->
      <xsl:variable name="v621" select="string(',')"/>
      <xsl:variable name="v622" select="xdoxslt:convert_case(string($v621), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string($v622))>1">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v623', substring(string($v622), 1,1))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v623', $v622)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R3P1S187', xdoxslt:get_variable($_XDOCTX, '$v623'))"/>
   </xsl:template>
   <xsl:template name="L1R3P5S188">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR((NULL)),'NONE')-->
      <xsl:variable name="v624" select="string('')"/>
      <xsl:variable name="v625" select="string($v624)"/>
      <xsl:variable name="v626" select="xdoxslt:convert_case(string($v625), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string($v626))>5">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v627', substring(string($v626), 1,5))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v627', $v626)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R3P5S188', xdoxslt:get_variable($_XDOCTX, '$v627'))"/>
   </xsl:template>
   <xsl:template name="L1R3P1S189">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR((',')),'NONE')-->
      <xsl:variable name="v628" select="string(',')"/>
      <xsl:variable name="v629" select="xdoxslt:convert_case(string($v628), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string($v629))>1">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v630', substring(string($v629), 1,1))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v630', $v629)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R3P1S189', xdoxslt:get_variable($_XDOCTX, '$v630'))"/>
   </xsl:template>
   <xsl:template name="L1R3P5S190">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR((NULL)),'NONE')-->
      <xsl:variable name="v631" select="string('')"/>
      <xsl:variable name="v632" select="string($v631)"/>
      <xsl:variable name="v633" select="xdoxslt:convert_case(string($v632), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string($v633))>5">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v634', substring(string($v633), 1,5))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v634', $v633)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R3P5S190', xdoxslt:get_variable($_XDOCTX, '$v634'))"/>
   </xsl:template>
   <xsl:template name="L1R3P1S191">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR((',')),'NONE')-->
      <xsl:variable name="v635" select="string(',')"/>
      <xsl:variable name="v636" select="xdoxslt:convert_case(string($v635), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string($v636))>1">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v637', substring(string($v636), 1,1))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v637', $v636)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R3P1S191', xdoxslt:get_variable($_XDOCTX, '$v637'))"/>
   </xsl:template>
   <xsl:template name="L1R3P5S192">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR((NULL)),'NONE')-->
      <xsl:variable name="v638" select="string('')"/>
      <xsl:variable name="v639" select="string($v638)"/>
      <xsl:variable name="v640" select="xdoxslt:convert_case(string($v639), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string($v640))>5">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v641', substring(string($v640), 1,5))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v641', $v640)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R3P5S192', xdoxslt:get_variable($_XDOCTX, '$v641'))"/>
   </xsl:template>
   <xsl:template name="L1R3P1S193">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR((',')),'NONE')-->
      <xsl:variable name="v642" select="string(',')"/>
      <xsl:variable name="v643" select="xdoxslt:convert_case(string($v642), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string($v643))>1">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v644', substring(string($v643), 1,1))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v644', $v643)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R3P1S193', xdoxslt:get_variable($_XDOCTX, '$v644'))"/>
   </xsl:template>
   <xsl:template name="L1R3P5S194">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR((NULL)),'NONE')-->
      <xsl:variable name="v645" select="string('')"/>
      <xsl:variable name="v646" select="string($v645)"/>
      <xsl:variable name="v647" select="xdoxslt:convert_case(string($v646), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string($v647))>5">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v648', substring(string($v647), 1,5))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v648', $v647)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R3P5S194', xdoxslt:get_variable($_XDOCTX, '$v648'))"/>
   </xsl:template>
   <xsl:template name="L1R3P1S195">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR((',')),'NONE')-->
      <xsl:variable name="v649" select="string(',')"/>
      <xsl:variable name="v650" select="xdoxslt:convert_case(string($v649), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string($v650))>1">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v651', substring(string($v650), 1,1))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v651', $v650)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R3P1S195', xdoxslt:get_variable($_XDOCTX, '$v651'))"/>
   </xsl:template>
   <xsl:template name="L1R3P5S196">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR((NULL)),'NONE')-->
      <xsl:variable name="v652" select="string('')"/>
      <xsl:variable name="v653" select="string($v652)"/>
      <xsl:variable name="v654" select="xdoxslt:convert_case(string($v653), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string($v654))>5">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v655', substring(string($v654), 1,5))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v655', $v654)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R3P5S196', xdoxslt:get_variable($_XDOCTX, '$v655'))"/>
   </xsl:template>
   <xsl:template name="L1R3P1S197">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR((',')),'NONE')-->
      <xsl:variable name="v656" select="string(',')"/>
      <xsl:variable name="v657" select="xdoxslt:convert_case(string($v656), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string($v657))>1">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v658', substring(string($v657), 1,1))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v658', $v657)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R3P1S197', xdoxslt:get_variable($_XDOCTX, '$v658'))"/>
   </xsl:template>
   <xsl:template name="L1R3P5S198">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR((NULL)),'NONE')-->
      <xsl:variable name="v659" select="string('')"/>
      <xsl:variable name="v660" select="string($v659)"/>
      <xsl:variable name="v661" select="xdoxslt:convert_case(string($v660), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string($v661))>5">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v662', substring(string($v661), 1,5))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v662', $v661)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R3P5S198', xdoxslt:get_variable($_XDOCTX, '$v662'))"/>
   </xsl:template>
   <xsl:template name="L1R3P1S199">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR((',')),'NONE')-->
      <xsl:variable name="v663" select="string(',')"/>
      <xsl:variable name="v664" select="xdoxslt:convert_case(string($v663), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string($v664))>1">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v665', substring(string($v664), 1,1))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v665', $v664)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R3P1S199', xdoxslt:get_variable($_XDOCTX, '$v665'))"/>
   </xsl:template>
   <xsl:template name="L1R3P5S200">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR((NULL)),'NONE')-->
      <xsl:variable name="v666" select="string('')"/>
      <xsl:variable name="v667" select="string($v666)"/>
      <xsl:variable name="v668" select="xdoxslt:convert_case(string($v667), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string($v668))>5">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v669', substring(string($v668), 1,5))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v669', $v668)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R3P5S200', xdoxslt:get_variable($_XDOCTX, '$v669'))"/>
   </xsl:template>
   <xsl:template name="L1R3P1S201">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR((',')),'NONE')-->
      <xsl:variable name="v670" select="string(',')"/>
      <xsl:variable name="v671" select="xdoxslt:convert_case(string($v670), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string($v671))>1">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v672', substring(string($v671), 1,1))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v672', $v671)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R3P1S201', xdoxslt:get_variable($_XDOCTX, '$v672'))"/>
   </xsl:template>
   <xsl:template name="L1R3P5S202">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR(('SAL')),'NONE')-->
      <xsl:variable name="v673" select="string('SAL')"/>
      <xsl:variable name="v674" select="xdoxslt:convert_case(string($v673), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string($v674))>5">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v675', substring(string($v674), 1,5))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v675', $v674)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R3P5S202', xdoxslt:get_variable($_XDOCTX, '$v675'))"/>
   </xsl:template>
   <xsl:template name="L1R3P1S203">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR((',')),'NONE')-->
      <xsl:variable name="v676" select="string(',')"/>
      <xsl:variable name="v677" select="xdoxslt:convert_case(string($v676), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string($v677))>1">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v678', substring(string($v677), 1,1))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v678', $v677)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R3P1S203', xdoxslt:get_variable($_XDOCTX, '$v678'))"/>
   </xsl:template>
   <xsl:template name="L1R3P5S204">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR((NULL)),'NONE')-->
      <xsl:variable name="v679" select="string('')"/>
      <xsl:variable name="v680" select="string($v679)"/>
      <xsl:variable name="v681" select="xdoxslt:convert_case(string($v680), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string($v681))>5">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v682', substring(string($v681), 1,5))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v682', $v681)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R3P5S204', xdoxslt:get_variable($_XDOCTX, '$v682'))"/>
   </xsl:template>
   <xsl:template name="L1R3P1S205">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR((',')),'NONE')-->
      <xsl:variable name="v683" select="string(',')"/>
      <xsl:variable name="v684" select="xdoxslt:convert_case(string($v683), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string($v684))>1">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v685', substring(string($v684), 1,1))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v685', $v684)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R3P1S205', xdoxslt:get_variable($_XDOCTX, '$v685'))"/>
   </xsl:template>
   <xsl:template name="L1R3P5S206">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR((NULL)),'NONE')-->
      <xsl:variable name="v686" select="string('')"/>
      <xsl:variable name="v687" select="string($v686)"/>
      <xsl:variable name="v688" select="xdoxslt:convert_case(string($v687), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string($v688))>5">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v689', substring(string($v688), 1,5))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v689', $v688)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R3P5S206', xdoxslt:get_variable($_XDOCTX, '$v689'))"/>
   </xsl:template>
   <xsl:template name="L1R3P1S207">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR((',')),'NONE')-->
      <xsl:variable name="v690" select="string(',')"/>
      <xsl:variable name="v691" select="xdoxslt:convert_case(string($v690), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string($v691))>1">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v692', substring(string($v691), 1,1))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v692', $v691)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R3P1S207', xdoxslt:get_variable($_XDOCTX, '$v692'))"/>
   </xsl:template>
   <xsl:template name="L1R3P5S208">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR((NULL)),'NONE')-->
      <xsl:variable name="v693" select="string('')"/>
      <xsl:variable name="v694" select="string($v693)"/>
      <xsl:variable name="v695" select="xdoxslt:convert_case(string($v694), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string($v695))>5">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v696', substring(string($v695), 1,5))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v696', $v695)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R3P5S208', xdoxslt:get_variable($_XDOCTX, '$v696'))"/>
   </xsl:template>
   <xsl:template name="L1R3P1S209">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR((',')),'NONE')-->
      <xsl:variable name="v697" select="string(',')"/>
      <xsl:variable name="v698" select="xdoxslt:convert_case(string($v697), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string($v698))>1">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v699', substring(string($v698), 1,1))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v699', $v698)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R3P1S209', xdoxslt:get_variable($_XDOCTX, '$v699'))"/>
   </xsl:template>
   <xsl:template name="L1R3P5S210">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR((NULL)),'NONE')-->
      <xsl:variable name="v700" select="string('')"/>
      <xsl:variable name="v701" select="string($v700)"/>
      <xsl:variable name="v702" select="xdoxslt:convert_case(string($v701), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string($v702))>5">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v703', substring(string($v702), 1,5))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v703', $v702)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R3P5S210', xdoxslt:get_variable($_XDOCTX, '$v703'))"/>
   </xsl:template>
   <xsl:template name="L1R3P1S211">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR((',')),'NONE')-->
      <xsl:variable name="v704" select="string(',')"/>
      <xsl:variable name="v705" select="xdoxslt:convert_case(string($v704), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string($v705))>1">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v706', substring(string($v705), 1,1))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v706', $v705)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R3P1S211', xdoxslt:get_variable($_XDOCTX, '$v706'))"/>
   </xsl:template>
   <xsl:template name="L1R3P5S212">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR((NULL)),'NONE')-->
      <xsl:variable name="v707" select="string('')"/>
      <xsl:variable name="v708" select="string($v707)"/>
      <xsl:variable name="v709" select="xdoxslt:convert_case(string($v708), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string($v709))>5">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v710', substring(string($v709), 1,5))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v710', $v709)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R3P5S212', xdoxslt:get_variable($_XDOCTX, '$v710'))"/>
   </xsl:template>
   <xsl:template name="_RECORDBREAK">
      <!--Record Break-->
      <xsl:variable name="RECORDBREAK" select="concat(xdoxslt:chr(13), xdoxslt:chr(10))"/>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'RECORD_BREAK_LENGTH',string-length($RECORDBREAK))"/>
      <xsl:value-of select="string($RECORDBREAK)"/>
   </xsl:template>
   <xsl:template name="_BLOCK_FILLER">
      <!--Block Filler-->
      <xsl:param name="BLOCK_BEGIN"/>
      <xsl:param name="BLOCK_END"/>
      <xsl:param name="BLOCK_SPAN"/>
      <xsl:param name="BLOCK_FILL_CHAR"/>
      <xsl:param name="BLOCK_RECORD_LENGTH"/>
      <xsl:param name="RECORD_BREAK_LENGTH"/>
      <xsl:param name="BLOCK_RECORD_COUNTER"/>
      <xsl:if test="number(string-length($BLOCK_END) - string-length($BLOCK_BEGIN) - number($BLOCK_RECORD_COUNTER) * number($RECORD_BREAK_LENGTH)) mod (number($BLOCK_SPAN) * number($BLOCK_RECORD_LENGTH)) > 0">
         <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'MESSAGE', xdoxslt:fill_block($BLOCK_END, $BLOCK_FILL_CHAR, $BLOCK_RECORD_LENGTH))"/>
         <xsl:call-template name="_RECORDBREAK"/>
         <xsl:call-template name="_BLOCK_FILLER">
            <xsl:with-param name="BLOCK_BEGIN" select="string($BLOCK_BEGIN)"/>
            <xsl:with-param name="BLOCK_END" select="string(xdoxslt:get_variable($_XDOCTX, 'MESSAGE'))"/>
            <xsl:with-param name="BLOCK_SPAN" select="$BLOCK_SPAN"/>
            <xsl:with-param name="BLOCK_FILL_CHAR" select="$BLOCK_FILL_CHAR"/>
            <xsl:with-param name="BLOCK_RECORD_LENGTH" select="$BLOCK_RECORD_LENGTH"/>
            <xsl:with-param name="RECORD_BREAK_LENGTH" select="$RECORD_BREAK_LENGTH"/>
            <xsl:with-param name="BLOCK_RECORD_COUNTER" select="number($BLOCK_RECORD_COUNTER) + number(1)"/>
         </xsl:call-template>
      </xsl:if>
   </xsl:template>
</xsl:stylesheet>
