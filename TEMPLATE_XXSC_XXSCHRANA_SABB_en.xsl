<?xml version = '1.0' encoding = 'utf-8'?>
<!-- $Header: TEMPLATE_XXSC_XXSCHRANA_SABB_en.xsl 115.0 2016/05/23 09:25:39 xdouser noship $ -->
<!-- dbdrv: none -->

<!--Generated by Oracle BI Publisher 10.1.3.4.2-->
<xsl:stylesheet version="2.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" xmlns:fo="http://www.w3.org/1999/XSL/Format" xmlns:ora="http://www.oracle.com/XSL/Transform/java/" xmlns:xdofo="http://xmlns.oracle.com/oxp/fo/extensions" xmlns:xdoxslt="http://www.oracle.com/XSL/Transform/java/oracle.apps.xdo.template.rtf.XSLTFunctions" xmlns:xdoxliff="urn:oasis:names:tc:xliff:document:1.1" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:OutBoundPayments="http://xmlns.oracle.com/iby/EFTTemplateSample" xmlns:General="http://xmlns.oracle.com/iby" xmlns:Address="http://xmlns.oracle.com/iby/address" xmlns:PaymentsCommon="http://xmlns.oracle.com/iby/PaymentsCommon" xmlns:xdoeft="http://xmlns.oracle.com/iby/xdoeft">
   <xsl:output method="text" encoding="iso-8859-1"/>
   <xsl:param name="_XDOCTX">#</xsl:param>
   <xsl:decimal-format name="_DECIMALFORMAT" grouping-separator="," decimal-separator="."/>
   <xsl:template match="/">
      <!--Startup: Init Record Counters-->
      <xsl:call-template name="_RECORDCOUNTER"/>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'MESSAGE', string(''))"/>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'MESSAGETEMPLATES', string(''))"/>
      <!--Control: ================ Start new level: XXSCHRANA_SABB=================-->
      <xsl:for-each select=".//XXSCHRANA_SABB" xdoeft:type="LEVEL" xdoeft:level-name="XXSCHRANA_SABB">
         <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R1',  string(''))"/>
         <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R1L',  number(0))"/>
         <!--Control: ===== START RECORD: Bank Details1 =====-->
         <!--Render: CONSTANT1-->
         <xsl:call-template name="L1R1P3S0"/>
         <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L1R1', xdoxslt:get_variable($_XDOCTX, 'L1R1P3S0'))"/>
         <!--Render: -->
         <xsl:call-template name="L1R1P1S1"/>
         <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L1R1', xdoxslt:get_variable($_XDOCTX, 'L1R1P1S1'))"/>
         <!--Render: CONSTANT2-->
         <xsl:call-template name="L1R1P14S2"/>
         <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L1R1', xdoxslt:get_variable($_XDOCTX, 'L1R1P14S2'))"/>
         <!--Render: -->
         <xsl:call-template name="L1R1P1S3"/>
         <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L1R1', xdoxslt:get_variable($_XDOCTX, 'L1R1P1S3'))"/>
         <!--Render: CONSTANT3-->
         <xsl:call-template name="L1R1P9S4"/>
         <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L1R1', xdoxslt:get_variable($_XDOCTX, 'L1R1P9S4'))"/>
         <!--Render: -->
         <xsl:call-template name="L1R1P1S5"/>
         <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L1R1', xdoxslt:get_variable($_XDOCTX, 'L1R1P1S5'))"/>
         <!--Render: HSBC CONNECT CUSTOMER ID-->
         <xsl:call-template name="L1R1P23S6"/>
         <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L1R1', xdoxslt:get_variable($_XDOCTX, 'L1R1P23S6'))"/>
         <!--Render: -->
         <xsl:call-template name="L1R1P1S7"/>
         <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L1R1', xdoxslt:get_variable($_XDOCTX, 'L1R1P1S7'))"/>
         <!--Render: HSBC NET CUSTOMER ID-->
         <xsl:call-template name="L1R1P33S8"/>
         <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L1R1', xdoxslt:get_variable($_XDOCTX, 'L1R1P33S8'))"/>
         <!--Render: -->
         <xsl:call-template name="L1R1P1S9"/>
         <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L1R1', xdoxslt:get_variable($_XDOCTX, 'L1R1P1S9'))"/>
         <!--Render: FILE REFERENCE-->
         <xsl:call-template name="L1R1P40S10"/>
         <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L1R1', xdoxslt:get_variable($_XDOCTX, 'L1R1P40S10'))"/>
         <!--Render: -->
         <xsl:call-template name="L1R1P1S11"/>
         <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L1R1', xdoxslt:get_variable($_XDOCTX, 'L1R1P1S11'))"/>
         <!--Render: FILE CREATION DATE-->
         <xsl:call-template name="L1R1P10S12"/>
         <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L1R1', xdoxslt:get_variable($_XDOCTX, 'L1R1P10S12'))"/>
         <!--Render: -->
         <xsl:call-template name="L1R1P1S13"/>
         <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L1R1', xdoxslt:get_variable($_XDOCTX, 'L1R1P1S13'))"/>
         <!--Render: FILE CREATION TIME-->
         <xsl:call-template name="L1R1P10S14"/>
         <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L1R1', xdoxslt:get_variable($_XDOCTX, 'L1R1P10S14'))"/>
         <!--Render: -->
         <xsl:call-template name="L1R1P1S15"/>
         <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L1R1', xdoxslt:get_variable($_XDOCTX, 'L1R1P1S15'))"/>
         <!--Render: AUTHORIZATION TYPE-->
         <xsl:call-template name="L1R1P15S16"/>
         <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L1R1', xdoxslt:get_variable($_XDOCTX, 'L1R1P15S16'))"/>
         <!--Render: -->
         <xsl:call-template name="L1R1P1S17"/>
         <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L1R1', xdoxslt:get_variable($_XDOCTX, 'L1R1P1S17'))"/>
         <!--Render: FILE VERSION-->
         <xsl:call-template name="L1R1P4S18"/>
         <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L1R1', xdoxslt:get_variable($_XDOCTX, 'L1R1P4S18'))"/>
         <!--Render: -->
         <xsl:call-template name="L1R1P1S19"/>
         <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L1R1', xdoxslt:get_variable($_XDOCTX, 'L1R1P1S19'))"/>
         <!--Render: RECORD COUNT-->
         <xsl:call-template name="L1R1P4S20"/>
         <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L1R1', xdoxslt:get_variable($_XDOCTX, 'L1R1P4S20'))"/>
         <xsl:value-of select="xdoxslt:get_variable($_XDOCTX, 'L1R1')"/>
         <!--Control: ===== END RECORD: Bank Details1 =====-->
         <!--Control: ===== Record Break =====-->
         <xsl:call-template name="_RECORDBREAK"/>
         <!--Control: Increase record counter: Bank Details1-->
         <xsl:value-of select="xdoxslt:next_sequence_number($_XDOCTX, 'Bank Details1_RC')"/>
         <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R2',  string(''))"/>
         <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R2L',  number(0))"/>
         <!--Control: ===== START RECORD: Bank Details2 =====-->
         <!--Render: -->
         <xsl:call-template name="L1R2P7S21"/>
         <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L1R2', xdoxslt:get_variable($_XDOCTX, 'L1R2P7S21'))"/>
         <!--Render: -->
         <xsl:call-template name="L1R2P1S22"/>
         <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L1R2', xdoxslt:get_variable($_XDOCTX, 'L1R2P1S22'))"/>
         <!--Render: INSTRUCTION TYPE-->
         <xsl:call-template name="L1R2P13S23"/>
         <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L1R2', xdoxslt:get_variable($_XDOCTX, 'L1R2P13S23'))"/>
         <!--Render: -->
         <xsl:call-template name="L1R2P1S24"/>
         <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L1R2', xdoxslt:get_variable($_XDOCTX, 'L1R2P1S24'))"/>
         <!--Render: Total Payments-->
         <xsl:call-template name="L1R2P9S25"/>
         <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L1R2', xdoxslt:get_variable($_XDOCTX, 'L1R2P9S25'))"/>
         <!--Render: -->
         <xsl:call-template name="L1R2P1S26"/>
         <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L1R2', xdoxslt:get_variable($_XDOCTX, 'L1R2P1S26'))"/>
         <!--Render: BATCH REFERENCE-->
         <xsl:call-template name="L1R2P10S27"/>
         <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L1R2', xdoxslt:get_variable($_XDOCTX, 'L1R2P10S27'))"/>
         <!--Render: -->
         <xsl:call-template name="L1R2P1S28"/>
         <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L1R2', xdoxslt:get_variable($_XDOCTX, 'L1R2P1S28'))"/>
         <!--Render: FILTER-->
         <xsl:call-template name="L1R2P15S29"/>
         <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L1R2', xdoxslt:get_variable($_XDOCTX, 'L1R2P15S29'))"/>
         <!--Render: -->
         <xsl:call-template name="L1R2P1S30"/>
         <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L1R2', xdoxslt:get_variable($_XDOCTX, 'L1R2P1S30'))"/>
         <!--Render: FILTER-->
         <xsl:call-template name="L1R2P6S31"/>
         <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L1R2', xdoxslt:get_variable($_XDOCTX, 'L1R2P6S31'))"/>
         <!--Render: -->
         <xsl:call-template name="L1R2P1S32"/>
         <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L1R2', xdoxslt:get_variable($_XDOCTX, 'L1R2P1S32'))"/>
         <!--Render: PAYMENT PURPOSE CODE-->
         <xsl:call-template name="L1R2P10S33"/>
         <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L1R2', xdoxslt:get_variable($_XDOCTX, 'L1R2P10S33'))"/>
         <!--Render: -->
         <xsl:call-template name="L1R2P1S34"/>
         <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L1R2', xdoxslt:get_variable($_XDOCTX, 'L1R2P1S34'))"/>
         <!--Render: Payment Narration-->
         <xsl:call-template name="L1R2P40S35"/>
         <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L1R2', xdoxslt:get_variable($_XDOCTX, 'L1R2P40S35'))"/>
         <!--Render: -->
         <xsl:call-template name="L1R2P1S36"/>
         <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L1R2', xdoxslt:get_variable($_XDOCTX, 'L1R2P1S36'))"/>
         <!--Render: FILTER-->
         <xsl:call-template name="L1R2P3S37"/>
         <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L1R2', xdoxslt:get_variable($_XDOCTX, 'L1R2P3S37'))"/>
         <!--Render: -->
         <xsl:call-template name="L1R2P1S38"/>
         <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L1R2', xdoxslt:get_variable($_XDOCTX, 'L1R2P1S38'))"/>
         <!--Render: CONSTANT EYE CATCHER-->
         <xsl:call-template name="L1R2P10S39"/>
         <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L1R2', xdoxslt:get_variable($_XDOCTX, 'L1R2P10S39'))"/>
         <!--Render: -->
         <xsl:call-template name="L1R2P1S40"/>
         <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L1R2', xdoxslt:get_variable($_XDOCTX, 'L1R2P1S40'))"/>
         <!--Render: VALUE DATE-->
         <xsl:call-template name="L1R2P10S41"/>
         <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L1R2', xdoxslt:get_variable($_XDOCTX, 'L1R2P10S41'))"/>
         <!--Render: -->
         <xsl:call-template name="L1R2P1S42"/>
         <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L1R2', xdoxslt:get_variable($_XDOCTX, 'L1R2P1S42'))"/>
         <!--Render: FIRST PARTY ACCOUNT-->
         <xsl:call-template name="L1R2P30S43"/>
         <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L1R2', xdoxslt:get_variable($_XDOCTX, 'L1R2P30S43'))"/>
         <!--Render: -->
         <xsl:call-template name="L1R2P1S44"/>
         <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L1R2', xdoxslt:get_variable($_XDOCTX, 'L1R2P1S44'))"/>
         <!--Render: TRANSACTION CURRENCY-->
         <xsl:call-template name="L1R2P3S45"/>
         <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L1R2', xdoxslt:get_variable($_XDOCTX, 'L1R2P3S45'))"/>
         <!--Render: -->
         <xsl:call-template name="L1R2P1S46"/>
         <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L1R2', xdoxslt:get_variable($_XDOCTX, 'L1R2P1S46'))"/>
         <!--Render: TRANSACTION AMOUNT-->
         <xsl:call-template name="L1R2P15S47"/>
         <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L1R2', xdoxslt:get_variable($_XDOCTX, 'L1R2P15S47'))"/>
         <!--Render: -->
         <xsl:call-template name="L1R2P1S48"/>
         <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L1R2', xdoxslt:get_variable($_XDOCTX, 'L1R2P1S48'))"/>
         <!--Render: -->
         <xsl:call-template name="L1R2P5S49"/>
         <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L1R2', xdoxslt:get_variable($_XDOCTX, 'L1R2P5S49'))"/>
         <!--Render: -->
         <xsl:call-template name="L1R2P1S50"/>
         <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L1R2', xdoxslt:get_variable($_XDOCTX, 'L1R2P1S50'))"/>
         <!--Render: -->
         <xsl:call-template name="L1R2P5S51"/>
         <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L1R2', xdoxslt:get_variable($_XDOCTX, 'L1R2P5S51'))"/>
         <!--Render: -->
         <xsl:call-template name="L1R2P1S52"/>
         <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L1R2', xdoxslt:get_variable($_XDOCTX, 'L1R2P1S52'))"/>
         <!--Render: -->
         <xsl:call-template name="L1R2P2S53"/>
         <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L1R2', xdoxslt:get_variable($_XDOCTX, 'L1R2P2S53'))"/>
         <!--Render: -->
         <xsl:call-template name="L1R2P1S54"/>
         <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L1R2', xdoxslt:get_variable($_XDOCTX, 'L1R2P1S54'))"/>
         <!--Render: -->
         <xsl:call-template name="L1R2P4S55"/>
         <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L1R2', xdoxslt:get_variable($_XDOCTX, 'L1R2P4S55'))"/>
         <!--Render: -->
         <xsl:call-template name="L1R2P1S56"/>
         <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L1R2', xdoxslt:get_variable($_XDOCTX, 'L1R2P1S56'))"/>
         <!--Render: -->
         <xsl:call-template name="L1R2P5S57"/>
         <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L1R2', xdoxslt:get_variable($_XDOCTX, 'L1R2P5S57'))"/>
         <!--Render: -->
         <xsl:call-template name="L1R2P1S58"/>
         <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L1R2', xdoxslt:get_variable($_XDOCTX, 'L1R2P1S58'))"/>
         <!--Render: -->
         <xsl:call-template name="L1R2P5S59"/>
         <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L1R2', xdoxslt:get_variable($_XDOCTX, 'L1R2P5S59'))"/>
         <!--Render: -->
         <xsl:call-template name="L1R2P1S60"/>
         <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L1R2', xdoxslt:get_variable($_XDOCTX, 'L1R2P1S60'))"/>
         <!--Render: Company name-->
         <xsl:call-template name="L1R2P40S61"/>
         <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L1R2', xdoxslt:get_variable($_XDOCTX, 'L1R2P40S61'))"/>
         <!--Render: -->
         <xsl:call-template name="L1R2P1S62"/>
         <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L1R2', xdoxslt:get_variable($_XDOCTX, 'L1R2P1S62'))"/>
         <!--Render: MOL Establishment ID-->
         <xsl:call-template name="L1R2P20S63"/>
         <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L1R2', xdoxslt:get_variable($_XDOCTX, 'L1R2P20S63'))"/>
         <!--Render: -->
         <xsl:call-template name="L1R2P1S64"/>
         <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L1R2', xdoxslt:get_variable($_XDOCTX, 'L1R2P1S64'))"/>
         <!--Render: Employer ID-->
         <xsl:call-template name="L1R2P20S65"/>
         <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L1R2', xdoxslt:get_variable($_XDOCTX, 'L1R2P20S65'))"/>
         <!--Render: -->
         <xsl:call-template name="L1R2P1S66"/>
         <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L1R2', xdoxslt:get_variable($_XDOCTX, 'L1R2P1S66'))"/>
         <!--Render: -->
         <xsl:call-template name="L1R2P5S67"/>
         <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L1R2', xdoxslt:get_variable($_XDOCTX, 'L1R2P5S67'))"/>
         <!--Render: -->
         <xsl:call-template name="L1R2P1S68"/>
         <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L1R2', xdoxslt:get_variable($_XDOCTX, 'L1R2P1S68'))"/>
         <!--Render: -->
         <xsl:call-template name="L1R2P5S69"/>
         <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L1R2', xdoxslt:get_variable($_XDOCTX, 'L1R2P5S69'))"/>
         <!--Render: -->
         <xsl:call-template name="L1R2P1S70"/>
         <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L1R2', xdoxslt:get_variable($_XDOCTX, 'L1R2P1S70'))"/>
         <!--Render: -->
         <xsl:call-template name="L1R2P3S71"/>
         <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L1R2', xdoxslt:get_variable($_XDOCTX, 'L1R2P3S71'))"/>
         <!--Render: -->
         <xsl:call-template name="L1R2P1S72"/>
         <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L1R2', xdoxslt:get_variable($_XDOCTX, 'L1R2P1S72'))"/>
         <!--Render: Batch Reference-->
         <xsl:call-template name="L1R2P15S73"/>
         <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L1R2', xdoxslt:get_variable($_XDOCTX, 'L1R2P15S73'))"/>
         <xsl:value-of select="xdoxslt:get_variable($_XDOCTX, 'L1R2')"/>
         <!--Control: ===== END RECORD: Bank Details2 =====-->
         <!--Control: ===== Record Break =====-->
         <xsl:call-template name="_RECORDBREAK"/>
         <!--Control: Increase record counter: Bank Details2-->
         <xsl:value-of select="xdoxslt:next_sequence_number($_XDOCTX, 'Bank Details2_RC')"/>
      </xsl:for-each>
      <!--Control: ================ Start new level: G_EMPLOYEE_NUMBER=================-->
      <xsl:for-each select=".//G_EMPLOYEE_NUMBER" xdoeft:type="LEVEL" xdoeft:level-name="G_EMPLOYEE_NUMBER">
         <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R3',  string(''))"/>
         <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R3L',  number(0))"/>
         <!--Control: ===== START RECORD: Bank Details3 =====-->
         <!--Render: RECORD TYPE-->
         <xsl:call-template name="L1R3P6S74"/>
         <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L1R3', xdoxslt:get_variable($_XDOCTX, 'L1R3P6S74'))"/>
         <!--Render: -->
         <xsl:call-template name="L1R3P1S75"/>
         <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L1R3', xdoxslt:get_variable($_XDOCTX, 'L1R3P1S75'))"/>
         <!--Render: Account Number-->
         <xsl:call-template name="L1R3P30S76"/>
         <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L1R3', xdoxslt:get_variable($_XDOCTX, 'L1R3P30S76'))"/>
         <!--Render: -->
         <xsl:call-template name="L1R3P1S77"/>
         <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L1R3', xdoxslt:get_variable($_XDOCTX, 'L1R3P1S77'))"/>
         <!--Render: Beneficiary Name-->
         <xsl:call-template name="L1R3P60S78"/>
         <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L1R3', xdoxslt:get_variable($_XDOCTX, 'L1R3P60S78'))"/>
         <!--Render: -->
         <xsl:call-template name="L1R3P1S79"/>
         <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L1R3', xdoxslt:get_variable($_XDOCTX, 'L1R3P1S79'))"/>
         <!--Render: Employee ID-->
         <xsl:call-template name="L1R3P8S80"/>
         <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L1R3', xdoxslt:get_variable($_XDOCTX, 'L1R3P8S80'))"/>
         <!--Render: -->
         <xsl:call-template name="L1R3P1S81"/>
         <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L1R3', xdoxslt:get_variable($_XDOCTX, 'L1R3P1S81'))"/>
         <!--Render: Bank ID-->
         <xsl:call-template name="L1R3P20S82"/>
         <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L1R3', xdoxslt:get_variable($_XDOCTX, 'L1R3P20S82'))"/>
         <!--Render: -->
         <xsl:call-template name="L1R3P1S83"/>
         <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L1R3', xdoxslt:get_variable($_XDOCTX, 'L1R3P1S83'))"/>
         <!--Render: -->
         <xsl:call-template name="L1R3P5S84"/>
         <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L1R3', xdoxslt:get_variable($_XDOCTX, 'L1R3P5S84'))"/>
         <!--Render: -->
         <xsl:call-template name="L1R3P1S85"/>
         <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L1R3', xdoxslt:get_variable($_XDOCTX, 'L1R3P1S85'))"/>
         <!--Render: -->
         <xsl:call-template name="L1R3P5S86"/>
         <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L1R3', xdoxslt:get_variable($_XDOCTX, 'L1R3P5S86'))"/>
         <!--Render: -->
         <xsl:call-template name="L1R3P1S87"/>
         <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L1R3', xdoxslt:get_variable($_XDOCTX, 'L1R3P1S87'))"/>
         <!--Render: Payment Amount-->
         <xsl:call-template name="L1R3P15S88"/>
         <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L1R3', xdoxslt:get_variable($_XDOCTX, 'L1R3P15S88'))"/>
         <!--Render: -->
         <xsl:call-template name="L1R3P1S89"/>
         <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L1R3', xdoxslt:get_variable($_XDOCTX, 'L1R3P1S89'))"/>
         <!--Render: -->
         <xsl:call-template name="L1R3P5S90"/>
         <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L1R3', xdoxslt:get_variable($_XDOCTX, 'L1R3P5S90'))"/>
         <!--Render: -->
         <xsl:call-template name="L1R3P1S91"/>
         <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L1R3', xdoxslt:get_variable($_XDOCTX, 'L1R3P1S91'))"/>
         <!--Render: -->
         <xsl:call-template name="L1R3P20S92"/>
         <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L1R3', xdoxslt:get_variable($_XDOCTX, 'L1R3P20S92'))"/>
         <!--Render: -->
         <xsl:call-template name="L1R3P1S93"/>
         <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L1R3', xdoxslt:get_variable($_XDOCTX, 'L1R3P1S93'))"/>
         <!--Render: -->
         <xsl:call-template name="L1R3P5S94"/>
         <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L1R3', xdoxslt:get_variable($_XDOCTX, 'L1R3P5S94'))"/>
         <!--Render: -->
         <xsl:call-template name="L1R3P1S95"/>
         <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L1R3', xdoxslt:get_variable($_XDOCTX, 'L1R3P1S95'))"/>
         <!--Render: -->
         <xsl:call-template name="L1R3P5S96"/>
         <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L1R3', xdoxslt:get_variable($_XDOCTX, 'L1R3P5S96'))"/>
         <!--Render: -->
         <xsl:call-template name="L1R3P1S97"/>
         <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L1R3', xdoxslt:get_variable($_XDOCTX, 'L1R3P1S97'))"/>
         <!--Render: -->
         <xsl:call-template name="L1R3P5S98"/>
         <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L1R3', xdoxslt:get_variable($_XDOCTX, 'L1R3P5S98'))"/>
         <!--Render: -->
         <xsl:call-template name="L1R3P1S99"/>
         <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L1R3', xdoxslt:get_variable($_XDOCTX, 'L1R3P1S99'))"/>
         <!--Render: -->
         <xsl:call-template name="L1R3P5S100"/>
         <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L1R3', xdoxslt:get_variable($_XDOCTX, 'L1R3P5S100'))"/>
         <!--Render: -->
         <xsl:call-template name="L1R3P1S101"/>
         <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L1R3', xdoxslt:get_variable($_XDOCTX, 'L1R3P1S101'))"/>
         <!--Render: ADVICE INDICATOR-->
         <xsl:call-template name="L1R3P1S102"/>
         <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L1R3', xdoxslt:get_variable($_XDOCTX, 'L1R3P1S102'))"/>
         <!--Render: -->
         <xsl:call-template name="L1R3P1S103"/>
         <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L1R3', xdoxslt:get_variable($_XDOCTX, 'L1R3P1S103'))"/>
         <!--Render: WHT INDICATOR-->
         <xsl:call-template name="L1R3P1S104"/>
         <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L1R3', xdoxslt:get_variable($_XDOCTX, 'L1R3P1S104'))"/>
         <!--Render: -->
         <xsl:call-template name="L1R3P1S105"/>
         <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L1R3', xdoxslt:get_variable($_XDOCTX, 'L1R3P1S105'))"/>
         <!--Render: Filler-->
         <xsl:call-template name="L1R3P5S106"/>
         <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L1R3', xdoxslt:get_variable($_XDOCTX, 'L1R3P5S106'))"/>
         <!--Render: -->
         <xsl:call-template name="L1R3P1S107"/>
         <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L1R3', xdoxslt:get_variable($_XDOCTX, 'L1R3P1S107'))"/>
         <!--Render: Filler-->
         <xsl:call-template name="L1R3P5S108"/>
         <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L1R3', xdoxslt:get_variable($_XDOCTX, 'L1R3P5S108'))"/>
         <!--Render: -->
         <xsl:call-template name="L1R3P1S109"/>
         <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L1R3', xdoxslt:get_variable($_XDOCTX, 'L1R3P1S109'))"/>
         <!--Render: Filler-->
         <xsl:call-template name="L1R3P5S110"/>
         <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L1R3', xdoxslt:get_variable($_XDOCTX, 'L1R3P5S110'))"/>
         <!--Render: -->
         <xsl:call-template name="L1R3P1S111"/>
         <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L1R3', xdoxslt:get_variable($_XDOCTX, 'L1R3P1S111'))"/>
         <!--Render: Filler-->
         <xsl:call-template name="L1R3P5S112"/>
         <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L1R3', xdoxslt:get_variable($_XDOCTX, 'L1R3P5S112'))"/>
         <!--Render: -->
         <xsl:call-template name="L1R3P1S113"/>
         <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L1R3', xdoxslt:get_variable($_XDOCTX, 'L1R3P1S113'))"/>
         <!--Render: Filler-->
         <xsl:call-template name="L1R3P5S114"/>
         <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L1R3', xdoxslt:get_variable($_XDOCTX, 'L1R3P5S114'))"/>
         <!--Render: -->
         <xsl:call-template name="L1R3P1S115"/>
         <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L1R3', xdoxslt:get_variable($_XDOCTX, 'L1R3P1S115'))"/>
         <!--Render: Constant Eye
Catcher-->
         <xsl:call-template name="L1R3P10S116"/>
         <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L1R3', xdoxslt:get_variable($_XDOCTX, 'L1R3P10S116'))"/>
         <!--Render: -->
         <xsl:call-template name="L1R3P1S117"/>
         <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L1R3', xdoxslt:get_variable($_XDOCTX, 'L1R3P1S117'))"/>
         <!--Render: Beneficiary ID-->
         <xsl:call-template name="L1R3P20S118"/>
         <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L1R3', xdoxslt:get_variable($_XDOCTX, 'L1R3P20S118'))"/>
         <!--Render: -->
         <xsl:call-template name="L1R3P1S119"/>
         <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L1R3', xdoxslt:get_variable($_XDOCTX, 'L1R3P1S119'))"/>
         <!--Render: Beneficiary Basic Salary-->
         <xsl:call-template name="L1R3P10S120"/>
         <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L1R3', xdoxslt:get_variable($_XDOCTX, 'L1R3P10S120'))"/>
         <!--Render: -->
         <xsl:call-template name="L1R3P1S121"/>
         <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L1R3', xdoxslt:get_variable($_XDOCTX, 'L1R3P1S121'))"/>
         <!--Render: Housing allowance-->
         <xsl:call-template name="L1R3P10S122"/>
         <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L1R3', xdoxslt:get_variable($_XDOCTX, 'L1R3P10S122'))"/>
         <!--Render: -->
         <xsl:call-template name="L1R3P1S123"/>
         <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L1R3', xdoxslt:get_variable($_XDOCTX, 'L1R3P1S123'))"/>
         <!--Render: Other Earnings-->
         <xsl:call-template name="L1R3P10S124"/>
         <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L1R3', xdoxslt:get_variable($_XDOCTX, 'L1R3P10S124'))"/>
         <!--Render: -->
         <xsl:call-template name="L1R3P1S125"/>
         <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L1R3', xdoxslt:get_variable($_XDOCTX, 'L1R3P1S125'))"/>
         <!--Render: Deductions-->
         <xsl:call-template name="L1R3P10S126"/>
         <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L1R3', xdoxslt:get_variable($_XDOCTX, 'L1R3P10S126'))"/>
         <!--Render: -->
         <xsl:call-template name="L1R3P1S127"/>
         <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L1R3', xdoxslt:get_variable($_XDOCTX, 'L1R3P1S127'))"/>
         <!--Render: Payment Narration-->
         <xsl:call-template name="L1R3P40S128"/>
         <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L1R3', xdoxslt:get_variable($_XDOCTX, 'L1R3P40S128'))"/>
         <xsl:value-of select="xdoxslt:get_variable($_XDOCTX, 'L1R3')"/>
         <!--Control: ===== END RECORD: Bank Details3 =====-->
         <!--Control: ===== Record Break =====-->
         <xsl:call-template name="_RECORDBREAK"/>
         <!--Control: Increase record counter: Bank Details3-->
         <xsl:value-of select="xdoxslt:next_sequence_number($_XDOCTX, 'Bank Details3_RC')"/>
      </xsl:for-each>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'MESSAGE1', xdoxslt:removeAll(string(xdoxslt:get_variable($_XDOCTX, 'MESSAGETEMPLATES')), string(xdoxslt:get_variable($_XDOCTX, 'MESSAGE'))))"/>
      <xsl:variable name="MESSAGELENGTH" select="string-length(xdoxslt:get_variable($_XDOCTX, 'MESSAGE1'))"/>
      <xsl:value-of select="xdoxslt:get_variable($_XDOCTX, 'MESSAGE')"/>
   </xsl:template>
   <xsl:template name="_RECORDCOUNTER">
      <!--Record Counter Init-->
      <!--Definition: Bank Details1_RC-->
      <xsl:call-template name="SEQ_START_Bank Details1_RC"/>
      <xsl:value-of select="xdoxslt:create_sequence_number($_XDOCTX, string('Bank Details1_RC'), number(1), number(999999), xdoxslt:get_variable($_XDOCTX, 'SEQ_START_Bank Details1_RC_V'), number(1))"/>
      <!--Definition: Bank Details2_RC-->
      <xsl:call-template name="SEQ_START_Bank Details2_RC"/>
      <xsl:value-of select="xdoxslt:create_sequence_number($_XDOCTX, string('Bank Details2_RC'), number(1), number(999999), xdoxslt:get_variable($_XDOCTX, 'SEQ_START_Bank Details2_RC_V'), number(1))"/>
      <!--Definition: Bank Details3_RC-->
      <xsl:call-template name="SEQ_START_Bank Details3_RC"/>
      <xsl:value-of select="xdoxslt:create_sequence_number($_XDOCTX, string('Bank Details3_RC'), number(1), number(999999), xdoxslt:get_variable($_XDOCTX, 'SEQ_START_Bank Details3_RC_V'), number(1))"/>
   </xsl:template>
   <xsl:template name="SEQ_START_Bank Details1_RC">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: 0-->
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'SEQ_START_Bank Details1_RC_V', 0)"/>
   </xsl:template>
   <xsl:template name="L1R1P3S0">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR(('IFH')),'NONE')-->
      <xsl:variable name="v1" select="string('IFH')"/>
      <xsl:variable name="v2" select="xdoxslt:convert_case(string($v1), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string($v2))>3">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v3', substring(string($v2), 1,3))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v3', $v2)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R1P3S0', xdoxslt:get_variable($_XDOCTX, '$v3'))"/>
   </xsl:template>
   <xsl:template name="L1R1P1S1">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR((',')),'NONE')-->
      <xsl:variable name="v4" select="string(',')"/>
      <xsl:variable name="v5" select="xdoxslt:convert_case(string($v4), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string($v5))>1">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v6', substring(string($v5), 1,1))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v6', $v5)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R1P1S1', xdoxslt:get_variable($_XDOCTX, '$v6'))"/>
   </xsl:template>
   <xsl:template name="L1R1P14S2">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR(('IFILE')),'NONE')-->
      <xsl:variable name="v7" select="string('IFILE')"/>
      <xsl:variable name="v8" select="xdoxslt:convert_case(string($v7), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string($v8))>14">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v9', substring(string($v8), 1,14))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v9', $v8)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R1P14S2', xdoxslt:get_variable($_XDOCTX, '$v9'))"/>
   </xsl:template>
   <xsl:template name="L1R1P1S3">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR((',')),'NONE')-->
      <xsl:variable name="v10" select="string(',')"/>
      <xsl:variable name="v11" select="xdoxslt:convert_case(string($v10), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string($v11))>1">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v12', substring(string($v11), 1,1))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v12', $v11)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R1P1S3', xdoxslt:get_variable($_XDOCTX, '$v12'))"/>
   </xsl:template>
   <xsl:template name="L1R1P9S4">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR(('CSV')),'NONE')-->
      <xsl:variable name="v13" select="string('CSV')"/>
      <xsl:variable name="v14" select="xdoxslt:convert_case(string($v13), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string($v14))>9">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v15', substring(string($v14), 1,9))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v15', $v14)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R1P9S4', xdoxslt:get_variable($_XDOCTX, '$v15'))"/>
   </xsl:template>
   <xsl:template name="L1R1P1S5">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR((',')),'NONE')-->
      <xsl:variable name="v16" select="string(',')"/>
      <xsl:variable name="v17" select="xdoxslt:convert_case(string($v16), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string($v17))>1">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v18', substring(string($v17), 1,1))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v18', $v17)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R1P1S5', xdoxslt:get_variable($_XDOCTX, '$v18'))"/>
   </xsl:template>
   <xsl:template name="L1R1P23S6">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR(('ABC97151001')),'NONE')-->
      <xsl:variable name="v19" select="string('ABC97151001')"/>
      <xsl:variable name="v20" select="xdoxslt:convert_case(string($v19), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string($v20))>23">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v21', substring(string($v20), 1,23))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v21', $v20)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R1P23S6', xdoxslt:get_variable($_XDOCTX, '$v21'))"/>
   </xsl:template>
   <xsl:template name="L1R1P1S7">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR((',')),'NONE')-->
      <xsl:variable name="v22" select="string(',')"/>
      <xsl:variable name="v23" select="xdoxslt:convert_case(string($v22), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string($v23))>1">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v24', substring(string($v23), 1,1))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v24', $v23)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R1P1S7', xdoxslt:get_variable($_XDOCTX, '$v24'))"/>
   </xsl:template>
   <xsl:template name="L1R1P33S8">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR(('SASABBGSA010111185')),'NONE')-->
      <xsl:variable name="v25" select="string('SASABBGSA010111185')"/>
      <xsl:variable name="v26" select="xdoxslt:convert_case(string($v25), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string($v26))>33">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v27', substring(string($v26), 1,33))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v27', $v26)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R1P33S8', xdoxslt:get_variable($_XDOCTX, '$v27'))"/>
   </xsl:template>
   <xsl:template name="L1R1P1S9">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR((',')),'NONE')-->
      <xsl:variable name="v28" select="string(',')"/>
      <xsl:variable name="v29" select="xdoxslt:convert_case(string($v28), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string($v29))>1">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v30', substring(string($v29), 1,1))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v30', $v29)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R1P1S9', xdoxslt:get_variable($_XDOCTX, '$v30'))"/>
   </xsl:template>
   <xsl:template name="L1R1P40S10">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR((CF_FILE_REF)),'NONE')-->
      <xsl:variable name="v31" select="string(xdoxslt:normalize_string($_XDOCTX, .//CF_FILE_REF))"/>
      <xsl:variable name="v32" select="xdoxslt:convert_case(string($v31), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string($v32))>40">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v33', substring(string($v32), 1,40))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v33', $v32)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R1P40S10', xdoxslt:get_variable($_XDOCTX, '$v33'))"/>
   </xsl:template>
   <xsl:template name="L1R1P1S11">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR((',')),'NONE')-->
      <xsl:variable name="v34" select="string(',')"/>
      <xsl:variable name="v35" select="xdoxslt:convert_case(string($v34), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string($v35))>1">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v36', substring(string($v35), 1,1))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v36', $v35)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R1P1S11', xdoxslt:get_variable($_XDOCTX, '$v36'))"/>
   </xsl:template>
   <xsl:template name="L1R1P10S12">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR((CF_CREATION_DATE)),'NONE')-->
      <xsl:variable name="v37" select="string(xdoxslt:normalize_string($_XDOCTX, .//CF_CREATION_DATE))"/>
      <xsl:variable name="v38" select="xdoxslt:convert_case(string($v37), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string($v38))>10">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v39', substring(string($v38), 1,10))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v39', $v38)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R1P10S12', xdoxslt:get_variable($_XDOCTX, '$v39'))"/>
   </xsl:template>
   <xsl:template name="L1R1P1S13">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR((',')),'NONE')-->
      <xsl:variable name="v40" select="string(',')"/>
      <xsl:variable name="v41" select="xdoxslt:convert_case(string($v40), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string($v41))>1">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v42', substring(string($v41), 1,1))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v42', $v41)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R1P1S13', xdoxslt:get_variable($_XDOCTX, '$v42'))"/>
   </xsl:template>
   <xsl:template name="L1R1P10S14">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR((CF_CREATION_TIME)),'NONE')-->
      <xsl:variable name="v43" select="string(xdoxslt:normalize_string($_XDOCTX, .//CF_CREATION_TIME))"/>
      <xsl:variable name="v44" select="xdoxslt:convert_case(string($v43), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string($v44))>10">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v45', substring(string($v44), 1,10))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v45', $v44)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R1P10S14', xdoxslt:get_variable($_XDOCTX, '$v45'))"/>
   </xsl:template>
   <xsl:template name="L1R1P1S15">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR((',')),'NONE')-->
      <xsl:variable name="v46" select="string(',')"/>
      <xsl:variable name="v47" select="xdoxslt:convert_case(string($v46), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string($v47))>1">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v48', substring(string($v47), 1,1))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v48', $v47)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R1P1S15', xdoxslt:get_variable($_XDOCTX, '$v48'))"/>
   </xsl:template>
   <xsl:template name="L1R1P15S16">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR(('P')),'NONE')-->
      <xsl:variable name="v49" select="string('P')"/>
      <xsl:variable name="v50" select="xdoxslt:convert_case(string($v49), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string($v50))>15">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v51', substring(string($v50), 1,15))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v51', $v50)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R1P15S16', xdoxslt:get_variable($_XDOCTX, '$v51'))"/>
   </xsl:template>
   <xsl:template name="L1R1P1S17">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR((',')),'NONE')-->
      <xsl:variable name="v52" select="string(',')"/>
      <xsl:variable name="v53" select="xdoxslt:convert_case(string($v52), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string($v53))>1">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v54', substring(string($v53), 1,1))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v54', $v53)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R1P1S17', xdoxslt:get_variable($_XDOCTX, '$v54'))"/>
   </xsl:template>
   <xsl:template name="L1R1P4S18">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR(('1.0')),'NONE')-->
      <xsl:variable name="v55" select="string('1.0')"/>
      <xsl:variable name="v56" select="xdoxslt:convert_case(string($v55), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string($v56))>4">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v57', substring(string($v56), 1,4))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v57', $v56)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R1P4S18', xdoxslt:get_variable($_XDOCTX, '$v57'))"/>
   </xsl:template>
   <xsl:template name="L1R1P1S19">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR((',')),'NONE')-->
      <xsl:variable name="v58" select="string(',')"/>
      <xsl:variable name="v59" select="xdoxslt:convert_case(string($v58), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string($v59))>1">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v60', substring(string($v59), 1,1))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v60', $v59)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R1P1S19', xdoxslt:get_variable($_XDOCTX, '$v60'))"/>
   </xsl:template>
   <xsl:template name="L1R1P4S20">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: TO_NUMBER((CF_LINE_COUNT))-->
      <xsl:variable name="v61" select="xdoxslt:to_number(xdoxslt:normalize_string($_XDOCTX, .//CF_LINE_COUNT))"/>
      <xsl:choose>
         <xsl:when test="string-length(string($v61))>4">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v62', substring(string($v61), 1,4))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v62', $v61)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R1P4S20', xdoxslt:get_variable($_XDOCTX, '$v62'))"/>
   </xsl:template>
   <xsl:template name="SEQ_START_Bank Details2_RC">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: 0-->
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'SEQ_START_Bank Details2_RC_V', 0)"/>
   </xsl:template>
   <xsl:template name="L1R2P7S21">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR(('BATHDR')),'NONE')-->
      <xsl:variable name="v63" select="string('BATHDR')"/>
      <xsl:variable name="v64" select="xdoxslt:convert_case(string($v63), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string($v64))>7">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v65', substring(string($v64), 1,7))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v65', $v64)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R2P7S21', xdoxslt:get_variable($_XDOCTX, '$v65'))"/>
   </xsl:template>
   <xsl:template name="L1R2P1S22">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR((',')),'NONE')-->
      <xsl:variable name="v66" select="string(',')"/>
      <xsl:variable name="v67" select="xdoxslt:convert_case(string($v66), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string($v67))>1">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v68', substring(string($v67), 1,1))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v68', $v67)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R2P1S22', xdoxslt:get_variable($_XDOCTX, '$v68'))"/>
   </xsl:template>
   <xsl:template name="L1R2P13S23">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR(('ACH-CR')),'NONE')-->
      <xsl:variable name="v69" select="string('ACH-CR')"/>
      <xsl:variable name="v70" select="xdoxslt:convert_case(string($v69), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string($v70))>13">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v71', substring(string($v70), 1,13))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v71', $v70)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R2P13S23', xdoxslt:get_variable($_XDOCTX, '$v71'))"/>
   </xsl:template>
   <xsl:template name="L1R2P1S24">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR((',')),'NONE')-->
      <xsl:variable name="v72" select="string(',')"/>
      <xsl:variable name="v73" select="xdoxslt:convert_case(string($v72), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string($v73))>1">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v74', substring(string($v73), 1,1))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v74', $v73)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R2P1S24', xdoxslt:get_variable($_XDOCTX, '$v74'))"/>
   </xsl:template>
   <xsl:template name="L1R2P9S25">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: TO_NUMBER((CS_COUNT))-->
      <xsl:variable name="v75" select="xdoxslt:to_number(xdoxslt:normalize_string($_XDOCTX, .//CS_COUNT))"/>
      <xsl:choose>
         <xsl:when test="string-length(string($v75))>9">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v76', substring(string($v75), 1,9))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v76', $v75)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R2P9S25', xdoxslt:get_variable($_XDOCTX, '$v76'))"/>
   </xsl:template>
   <xsl:template name="L1R2P1S26">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR((',')),'NONE')-->
      <xsl:variable name="v77" select="string(',')"/>
      <xsl:variable name="v78" select="xdoxslt:convert_case(string($v77), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string($v78))>1">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v79', substring(string($v78), 1,1))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v79', $v78)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R2P1S26', xdoxslt:get_variable($_XDOCTX, '$v79'))"/>
   </xsl:template>
   <xsl:template name="L1R2P10S27">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR((NULL)),'NONE')-->
      <xsl:variable name="v80" select="string('')"/>
      <xsl:variable name="v81" select="string($v80)"/>
      <xsl:variable name="v82" select="xdoxslt:convert_case(string($v81), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string($v82))>10">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v83', substring(string($v82), 1,10))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v83', $v82)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R2P10S27', xdoxslt:get_variable($_XDOCTX, '$v83'))"/>
   </xsl:template>
   <xsl:template name="L1R2P1S28">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR((',')),'NONE')-->
      <xsl:variable name="v84" select="string(',')"/>
      <xsl:variable name="v85" select="xdoxslt:convert_case(string($v84), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string($v85))>1">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v86', substring(string($v85), 1,1))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v86', $v85)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R2P1S28', xdoxslt:get_variable($_XDOCTX, '$v86'))"/>
   </xsl:template>
   <xsl:template name="L1R2P15S29">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR((NULL)),'NONE')-->
      <xsl:variable name="v87" select="string('')"/>
      <xsl:variable name="v88" select="string($v87)"/>
      <xsl:variable name="v89" select="xdoxslt:convert_case(string($v88), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string($v89))>15">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v90', substring(string($v89), 1,15))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v90', $v89)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R2P15S29', xdoxslt:get_variable($_XDOCTX, '$v90'))"/>
   </xsl:template>
   <xsl:template name="L1R2P1S30">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR((',')),'NONE')-->
      <xsl:variable name="v91" select="string(',')"/>
      <xsl:variable name="v92" select="xdoxslt:convert_case(string($v91), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string($v92))>1">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v93', substring(string($v92), 1,1))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v93', $v92)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R2P1S30', xdoxslt:get_variable($_XDOCTX, '$v93'))"/>
   </xsl:template>
   <xsl:template name="L1R2P6S31">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR((NULL)),'NONE')-->
      <xsl:variable name="v94" select="string('')"/>
      <xsl:variable name="v95" select="string($v94)"/>
      <xsl:variable name="v96" select="xdoxslt:convert_case(string($v95), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string($v96))>6">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v97', substring(string($v96), 1,6))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v97', $v96)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R2P6S31', xdoxslt:get_variable($_XDOCTX, '$v97'))"/>
   </xsl:template>
   <xsl:template name="L1R2P1S32">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR((',')),'NONE')-->
      <xsl:variable name="v98" select="string(',')"/>
      <xsl:variable name="v99" select="xdoxslt:convert_case(string($v98), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string($v99))>1">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v100', substring(string($v99), 1,1))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v100', $v99)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R2P1S32', xdoxslt:get_variable($_XDOCTX, '$v100'))"/>
   </xsl:template>
   <xsl:template name="L1R2P10S33">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR(('S')),'NONE')-->
      <xsl:variable name="v101" select="string('S')"/>
      <xsl:variable name="v102" select="xdoxslt:convert_case(string($v101), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string($v102))>10">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v103', substring(string($v102), 1,10))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v103', $v102)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R2P10S33', xdoxslt:get_variable($_XDOCTX, '$v103'))"/>
   </xsl:template>
   <xsl:template name="L1R2P1S34">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR((',')),'NONE')-->
      <xsl:variable name="v104" select="string(',')"/>
      <xsl:variable name="v105" select="xdoxslt:convert_case(string($v104), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string($v105))>1">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v106', substring(string($v105), 1,1))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v106', $v105)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R2P1S34', xdoxslt:get_variable($_XDOCTX, '$v106'))"/>
   </xsl:template>
   <xsl:template name="L1R2P40S35">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR((PAYMENT_NARRATION)),'NONE')-->
      <xsl:variable name="v107" select="string(xdoxslt:normalize_string($_XDOCTX, .//PAYMENT_NARRATION))"/>
      <xsl:variable name="v108" select="xdoxslt:convert_case(string($v107), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string($v108))>40">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v109', substring(string($v108), 1,40))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v109', $v108)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R2P40S35', xdoxslt:get_variable($_XDOCTX, '$v109'))"/>
   </xsl:template>
   <xsl:template name="L1R2P1S36">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR((',')),'NONE')-->
      <xsl:variable name="v110" select="string(',')"/>
      <xsl:variable name="v111" select="xdoxslt:convert_case(string($v110), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string($v111))>1">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v112', substring(string($v111), 1,1))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v112', $v111)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R2P1S36', xdoxslt:get_variable($_XDOCTX, '$v112'))"/>
   </xsl:template>
   <xsl:template name="L1R2P3S37">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR((NULL)),'NONE')-->
      <xsl:variable name="v113" select="string('')"/>
      <xsl:variable name="v114" select="string($v113)"/>
      <xsl:variable name="v115" select="xdoxslt:convert_case(string($v114), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string($v115))>3">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v116', substring(string($v115), 1,3))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v116', $v115)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R2P3S37', xdoxslt:get_variable($_XDOCTX, '$v116'))"/>
   </xsl:template>
   <xsl:template name="L1R2P1S38">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR((',')),'NONE')-->
      <xsl:variable name="v117" select="string(',')"/>
      <xsl:variable name="v118" select="xdoxslt:convert_case(string($v117), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string($v118))>1">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v119', substring(string($v118), 1,1))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v119', $v118)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R2P1S38', xdoxslt:get_variable($_XDOCTX, '$v119'))"/>
   </xsl:template>
   <xsl:template name="L1R2P10S39">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR(('@1ST@')),'NONE')-->
      <xsl:variable name="v120" select="string('@1ST@')"/>
      <xsl:variable name="v121" select="xdoxslt:convert_case(string($v120), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string($v121))>10">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v122', substring(string($v121), 1,10))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v122', $v121)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R2P10S39', xdoxslt:get_variable($_XDOCTX, '$v122'))"/>
   </xsl:template>
   <xsl:template name="L1R2P1S40">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR((',')),'NONE')-->
      <xsl:variable name="v123" select="string(',')"/>
      <xsl:variable name="v124" select="xdoxslt:convert_case(string($v123), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string($v124))>1">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v125', substring(string($v124), 1,1))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v125', $v124)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R2P1S40', xdoxslt:get_variable($_XDOCTX, '$v125'))"/>
   </xsl:template>
   <xsl:template name="L1R2P10S41">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR((CF_VALUE_DATE)),'NONE')-->
      <xsl:variable name="v126" select="string(xdoxslt:normalize_string($_XDOCTX, .//CF_VALUE_DATE))"/>
      <xsl:variable name="v127" select="xdoxslt:convert_case(string($v126), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string($v127))>10">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v128', substring(string($v127), 1,10))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v128', $v127)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R2P10S41', xdoxslt:get_variable($_XDOCTX, '$v128'))"/>
   </xsl:template>
   <xsl:template name="L1R2P1S42">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR((',')),'NONE')-->
      <xsl:variable name="v129" select="string(',')"/>
      <xsl:variable name="v130" select="xdoxslt:convert_case(string($v129), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string($v130))>1">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v131', substring(string($v130), 1,1))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v131', $v130)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R2P1S42', xdoxslt:get_variable($_XDOCTX, '$v131'))"/>
   </xsl:template>
   <xsl:template name="L1R2P30S43">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR((CF_DEBIT_ACNT_NUM)),'NONE')-->
      <xsl:variable name="v132" select="string(xdoxslt:normalize_string($_XDOCTX, .//CF_DEBIT_ACNT_NUM))"/>
      <xsl:variable name="v133" select="xdoxslt:convert_case(string($v132), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string($v133))>30">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v134', substring(string($v133), 1,30))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v134', $v133)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R2P30S43', xdoxslt:get_variable($_XDOCTX, '$v134'))"/>
   </xsl:template>
   <xsl:template name="L1R2P1S44">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR((',')),'NONE')-->
      <xsl:variable name="v135" select="string(',')"/>
      <xsl:variable name="v136" select="xdoxslt:convert_case(string($v135), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string($v136))>1">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v137', substring(string($v136), 1,1))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v137', $v136)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R2P1S44', xdoxslt:get_variable($_XDOCTX, '$v137'))"/>
   </xsl:template>
   <xsl:template name="L1R2P3S45">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR(('SAR')),'NONE')-->
      <xsl:variable name="v138" select="string('SAR')"/>
      <xsl:variable name="v139" select="xdoxslt:convert_case(string($v138), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string($v139))>3">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v140', substring(string($v139), 1,3))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v140', $v139)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R2P3S45', xdoxslt:get_variable($_XDOCTX, '$v140'))"/>
   </xsl:template>
   <xsl:template name="L1R2P1S46">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR((',')),'NONE')-->
      <xsl:variable name="v141" select="string(',')"/>
      <xsl:variable name="v142" select="xdoxslt:convert_case(string($v141), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string($v142))>1">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v143', substring(string($v142), 1,1))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v143', $v142)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R2P1S46', xdoxslt:get_variable($_XDOCTX, '$v143'))"/>
   </xsl:template>
   <xsl:template name="L1R2P15S47">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR((CF_NET_PAY)),'NONE')-->
      <xsl:variable name="v144" select="string(xdoxslt:normalize_string($_XDOCTX, .//CF_NET_PAY))"/>
      <xsl:variable name="v145" select="xdoxslt:convert_case(string($v144), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string($v145))>15">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v146', substring(string($v145), 1,15))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v146', $v145)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R2P15S47', xdoxslt:get_variable($_XDOCTX, '$v146'))"/>
   </xsl:template>
   <xsl:template name="L1R2P1S48">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR((',')),'NONE')-->
      <xsl:variable name="v147" select="string(',')"/>
      <xsl:variable name="v148" select="xdoxslt:convert_case(string($v147), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string($v148))>1">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v149', substring(string($v148), 1,1))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v149', $v148)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R2P1S48', xdoxslt:get_variable($_XDOCTX, '$v149'))"/>
   </xsl:template>
   <xsl:template name="L1R2P5S49">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR((NULL)),'NONE')-->
      <xsl:variable name="v150" select="string('')"/>
      <xsl:variable name="v151" select="string($v150)"/>
      <xsl:variable name="v152" select="xdoxslt:convert_case(string($v151), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string($v152))>5">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v153', substring(string($v152), 1,5))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v153', $v152)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R2P5S49', xdoxslt:get_variable($_XDOCTX, '$v153'))"/>
   </xsl:template>
   <xsl:template name="L1R2P1S50">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR((',')),'NONE')-->
      <xsl:variable name="v154" select="string(',')"/>
      <xsl:variable name="v155" select="xdoxslt:convert_case(string($v154), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string($v155))>1">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v156', substring(string($v155), 1,1))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v156', $v155)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R2P1S50', xdoxslt:get_variable($_XDOCTX, '$v156'))"/>
   </xsl:template>
   <xsl:template name="L1R2P5S51">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR((NULL)),'NONE')-->
      <xsl:variable name="v157" select="string('')"/>
      <xsl:variable name="v158" select="string($v157)"/>
      <xsl:variable name="v159" select="xdoxslt:convert_case(string($v158), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string($v159))>5">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v160', substring(string($v159), 1,5))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v160', $v159)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R2P5S51', xdoxslt:get_variable($_XDOCTX, '$v160'))"/>
   </xsl:template>
   <xsl:template name="L1R2P1S52">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR((',')),'NONE')-->
      <xsl:variable name="v161" select="string(',')"/>
      <xsl:variable name="v162" select="xdoxslt:convert_case(string($v161), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string($v162))>1">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v163', substring(string($v162), 1,1))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v163', $v162)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R2P1S52', xdoxslt:get_variable($_XDOCTX, '$v163'))"/>
   </xsl:template>
   <xsl:template name="L1R2P2S53">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR((NULL)),'NONE')-->
      <xsl:variable name="v164" select="string('')"/>
      <xsl:variable name="v165" select="string($v164)"/>
      <xsl:variable name="v166" select="xdoxslt:convert_case(string($v165), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string($v166))>2">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v167', substring(string($v166), 1,2))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v167', $v166)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R2P2S53', xdoxslt:get_variable($_XDOCTX, '$v167'))"/>
   </xsl:template>
   <xsl:template name="L1R2P1S54">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR((',')),'NONE')-->
      <xsl:variable name="v168" select="string(',')"/>
      <xsl:variable name="v169" select="xdoxslt:convert_case(string($v168), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string($v169))>1">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v170', substring(string($v169), 1,1))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v170', $v169)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R2P1S54', xdoxslt:get_variable($_XDOCTX, '$v170'))"/>
   </xsl:template>
   <xsl:template name="L1R2P4S55">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR((NULL)),'NONE')-->
      <xsl:variable name="v171" select="string('')"/>
      <xsl:variable name="v172" select="string($v171)"/>
      <xsl:variable name="v173" select="xdoxslt:convert_case(string($v172), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string($v173))>4">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v174', substring(string($v173), 1,4))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v174', $v173)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R2P4S55', xdoxslt:get_variable($_XDOCTX, '$v174'))"/>
   </xsl:template>
   <xsl:template name="L1R2P1S56">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR((',')),'NONE')-->
      <xsl:variable name="v175" select="string(',')"/>
      <xsl:variable name="v176" select="xdoxslt:convert_case(string($v175), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string($v176))>1">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v177', substring(string($v176), 1,1))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v177', $v176)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R2P1S56', xdoxslt:get_variable($_XDOCTX, '$v177'))"/>
   </xsl:template>
   <xsl:template name="L1R2P5S57">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR((NULL)),'NONE')-->
      <xsl:variable name="v178" select="string('')"/>
      <xsl:variable name="v179" select="string($v178)"/>
      <xsl:variable name="v180" select="xdoxslt:convert_case(string($v179), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string($v180))>5">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v181', substring(string($v180), 1,5))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v181', $v180)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R2P5S57', xdoxslt:get_variable($_XDOCTX, '$v181'))"/>
   </xsl:template>
   <xsl:template name="L1R2P1S58">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR((',')),'NONE')-->
      <xsl:variable name="v182" select="string(',')"/>
      <xsl:variable name="v183" select="xdoxslt:convert_case(string($v182), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string($v183))>1">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v184', substring(string($v183), 1,1))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v184', $v183)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R2P1S58', xdoxslt:get_variable($_XDOCTX, '$v184'))"/>
   </xsl:template>
   <xsl:template name="L1R2P5S59">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR((NULL)),'NONE')-->
      <xsl:variable name="v185" select="string('')"/>
      <xsl:variable name="v186" select="string($v185)"/>
      <xsl:variable name="v187" select="xdoxslt:convert_case(string($v186), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string($v187))>5">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v188', substring(string($v187), 1,5))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v188', $v187)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R2P5S59', xdoxslt:get_variable($_XDOCTX, '$v188'))"/>
   </xsl:template>
   <xsl:template name="L1R2P1S60">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR((',')),'NONE')-->
      <xsl:variable name="v189" select="string(',')"/>
      <xsl:variable name="v190" select="xdoxslt:convert_case(string($v189), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string($v190))>1">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v191', substring(string($v190), 1,1))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v191', $v190)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R2P1S60', xdoxslt:get_variable($_XDOCTX, '$v191'))"/>
   </xsl:template>
   <xsl:template name="L1R2P40S61">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR((COMPANY)),'NONE')-->
      <xsl:variable name="v192" select="string(xdoxslt:normalize_string($_XDOCTX, .//COMPANY))"/>
      <xsl:variable name="v193" select="xdoxslt:convert_case(string($v192), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string($v193))>40">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v194', substring(string($v193), 1,40))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v194', $v193)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R2P40S61', xdoxslt:get_variable($_XDOCTX, '$v194'))"/>
   </xsl:template>
   <xsl:template name="L1R2P1S62">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR((',')),'NONE')-->
      <xsl:variable name="v195" select="string(',')"/>
      <xsl:variable name="v196" select="xdoxslt:convert_case(string($v195), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string($v196))>1">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v197', substring(string($v196), 1,1))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v197', $v196)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R2P1S62', xdoxslt:get_variable($_XDOCTX, '$v197'))"/>
   </xsl:template>
   <xsl:template name="L1R2P20S63">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR((CF_MOL_ID)),'NONE')-->
      <xsl:variable name="v198" select="string(xdoxslt:normalize_string($_XDOCTX, .//CF_MOL_ID))"/>
      <xsl:variable name="v199" select="xdoxslt:convert_case(string($v198), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string($v199))>20">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v200', substring(string($v199), 1,20))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v200', $v199)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R2P20S63', xdoxslt:get_variable($_XDOCTX, '$v200'))"/>
   </xsl:template>
   <xsl:template name="L1R2P1S64">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR((',')),'NONE')-->
      <xsl:variable name="v201" select="string(',')"/>
      <xsl:variable name="v202" select="xdoxslt:convert_case(string($v201), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string($v202))>1">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v203', substring(string($v202), 1,1))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v203', $v202)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R2P1S64', xdoxslt:get_variable($_XDOCTX, '$v203'))"/>
   </xsl:template>
   <xsl:template name="L1R2P20S65">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR((EMPLOYER_ID)),'NONE')-->
      <xsl:variable name="v204" select="string(xdoxslt:normalize_string($_XDOCTX, .//EMPLOYER_ID))"/>
      <xsl:variable name="v205" select="xdoxslt:convert_case(string($v204), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string($v205))>20">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v206', substring(string($v205), 1,20))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v206', $v205)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R2P20S65', xdoxslt:get_variable($_XDOCTX, '$v206'))"/>
   </xsl:template>
   <xsl:template name="L1R2P1S66">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR((',')),'NONE')-->
      <xsl:variable name="v207" select="string(',')"/>
      <xsl:variable name="v208" select="xdoxslt:convert_case(string($v207), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string($v208))>1">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v209', substring(string($v208), 1,1))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v209', $v208)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R2P1S66', xdoxslt:get_variable($_XDOCTX, '$v209'))"/>
   </xsl:template>
   <xsl:template name="L1R2P5S67">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR((NULL)),'NONE')-->
      <xsl:variable name="v210" select="string('')"/>
      <xsl:variable name="v211" select="string($v210)"/>
      <xsl:variable name="v212" select="xdoxslt:convert_case(string($v211), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string($v212))>5">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v213', substring(string($v212), 1,5))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v213', $v212)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R2P5S67', xdoxslt:get_variable($_XDOCTX, '$v213'))"/>
   </xsl:template>
   <xsl:template name="L1R2P1S68">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR((',')),'NONE')-->
      <xsl:variable name="v214" select="string(',')"/>
      <xsl:variable name="v215" select="xdoxslt:convert_case(string($v214), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string($v215))>1">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v216', substring(string($v215), 1,1))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v216', $v215)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R2P1S68', xdoxslt:get_variable($_XDOCTX, '$v216'))"/>
   </xsl:template>
   <xsl:template name="L1R2P5S69">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR((NULL)),'NONE')-->
      <xsl:variable name="v217" select="string('')"/>
      <xsl:variable name="v218" select="string($v217)"/>
      <xsl:variable name="v219" select="xdoxslt:convert_case(string($v218), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string($v219))>5">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v220', substring(string($v219), 1,5))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v220', $v219)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R2P5S69', xdoxslt:get_variable($_XDOCTX, '$v220'))"/>
   </xsl:template>
   <xsl:template name="L1R2P1S70">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR((',')),'NONE')-->
      <xsl:variable name="v221" select="string(',')"/>
      <xsl:variable name="v222" select="xdoxslt:convert_case(string($v221), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string($v222))>1">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v223', substring(string($v222), 1,1))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v223', $v222)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R2P1S70', xdoxslt:get_variable($_XDOCTX, '$v223'))"/>
   </xsl:template>
   <xsl:template name="L1R2P3S71">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR((NULL)),'NONE')-->
      <xsl:variable name="v224" select="string('')"/>
      <xsl:variable name="v225" select="string($v224)"/>
      <xsl:variable name="v226" select="xdoxslt:convert_case(string($v225), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string($v226))>3">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v227', substring(string($v226), 1,3))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v227', $v226)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R2P3S71', xdoxslt:get_variable($_XDOCTX, '$v227'))"/>
   </xsl:template>
   <xsl:template name="L1R2P1S72">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR((',')),'NONE')-->
      <xsl:variable name="v228" select="string(',')"/>
      <xsl:variable name="v229" select="xdoxslt:convert_case(string($v228), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string($v229))>1">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v230', substring(string($v229), 1,1))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v230', $v229)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R2P1S72', xdoxslt:get_variable($_XDOCTX, '$v230'))"/>
   </xsl:template>
   <xsl:template name="L1R2P15S73">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR(('F0000000200664')),'NONE')-->
      <xsl:variable name="v231" select="string('F0000000200664')"/>
      <xsl:variable name="v232" select="xdoxslt:convert_case(string($v231), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string($v232))>15">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v233', substring(string($v232), 1,15))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v233', $v232)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R2P15S73', xdoxslt:get_variable($_XDOCTX, '$v233'))"/>
   </xsl:template>
   <xsl:template name="SEQ_START_Bank Details3_RC">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: 0-->
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'SEQ_START_Bank Details3_RC_V', 0)"/>
   </xsl:template>
   <xsl:template name="L1R3P6S74">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR(('SECPTY')),'NONE')-->
      <xsl:variable name="v234" select="string('SECPTY')"/>
      <xsl:variable name="v235" select="xdoxslt:convert_case(string($v234), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string($v235))>6">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v236', substring(string($v235), 1,6))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v236', $v235)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R3P6S74', xdoxslt:get_variable($_XDOCTX, '$v236'))"/>
   </xsl:template>
   <xsl:template name="L1R3P1S75">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR((',')),'NONE')-->
      <xsl:variable name="v237" select="string(',')"/>
      <xsl:variable name="v238" select="xdoxslt:convert_case(string($v237), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string($v238))>1">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v239', substring(string($v238), 1,1))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v239', $v238)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R3P1S75', xdoxslt:get_variable($_XDOCTX, '$v239'))"/>
   </xsl:template>
   <xsl:template name="L1R3P30S76">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR((ACCOUNT_NUMBER)),'NONE')-->
      <xsl:variable name="v240" select="string(xdoxslt:normalize_string($_XDOCTX, .//ACCOUNT_NUMBER))"/>
      <xsl:variable name="v241" select="xdoxslt:convert_case(string($v240), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string($v241))>30">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v242', substring(string($v241), 1,30))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v242', $v241)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R3P30S76', xdoxslt:get_variable($_XDOCTX, '$v242'))"/>
   </xsl:template>
   <xsl:template name="L1R3P1S77">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR((',')),'NONE')-->
      <xsl:variable name="v243" select="string(',')"/>
      <xsl:variable name="v244" select="xdoxslt:convert_case(string($v243), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string($v244))>1">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v245', substring(string($v244), 1,1))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v245', $v244)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R3P1S77', xdoxslt:get_variable($_XDOCTX, '$v245'))"/>
   </xsl:template>
   <xsl:template name="L1R3P60S78">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR((ACCOUNT_NAME)),'NONE')-->
      <xsl:variable name="v246" select="string(xdoxslt:normalize_string($_XDOCTX, .//ACCOUNT_NAME))"/>
      <xsl:variable name="v247" select="xdoxslt:convert_case(string($v246), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string($v247))>60">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v248', substring(string($v247), 1,60))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v248', $v247)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R3P60S78', xdoxslt:get_variable($_XDOCTX, '$v248'))"/>
   </xsl:template>
   <xsl:template name="L1R3P1S79">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR((',')),'NONE')-->
      <xsl:variable name="v249" select="string(',')"/>
      <xsl:variable name="v250" select="xdoxslt:convert_case(string($v249), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string($v250))>1">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v251', substring(string($v250), 1,1))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v251', $v250)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R3P1S79', xdoxslt:get_variable($_XDOCTX, '$v251'))"/>
   </xsl:template>
   <xsl:template name="L1R3P8S80">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR((EMPLOYEE_NUMBER)),'NONE')-->
      <xsl:variable name="v252" select="string(xdoxslt:normalize_string($_XDOCTX, .//EMPLOYEE_NUMBER))"/>
      <xsl:variable name="v253" select="xdoxslt:convert_case(string($v252), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string($v253))>8">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v254', substring(string($v253), 1,8))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v254', $v253)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R3P8S80', xdoxslt:get_variable($_XDOCTX, '$v254'))"/>
   </xsl:template>
   <xsl:template name="L1R3P1S81">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR((',')),'NONE')-->
      <xsl:variable name="v255" select="string(',')"/>
      <xsl:variable name="v256" select="xdoxslt:convert_case(string($v255), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string($v256))>1">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v257', substring(string($v256), 1,1))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v257', $v256)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R3P1S81', xdoxslt:get_variable($_XDOCTX, '$v257'))"/>
   </xsl:template>
   <xsl:template name="L1R3P20S82">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR((SWIFT_CODE)),'NONE')-->
      <xsl:variable name="v258" select="string(xdoxslt:normalize_string($_XDOCTX, .//SWIFT_CODE))"/>
      <xsl:variable name="v259" select="xdoxslt:convert_case(string($v258), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string($v259))>20">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v260', substring(string($v259), 1,20))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v260', $v259)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R3P20S82', xdoxslt:get_variable($_XDOCTX, '$v260'))"/>
   </xsl:template>
   <xsl:template name="L1R3P1S83">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR((',')),'NONE')-->
      <xsl:variable name="v261" select="string(',')"/>
      <xsl:variable name="v262" select="xdoxslt:convert_case(string($v261), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string($v262))>1">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v263', substring(string($v262), 1,1))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v263', $v262)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R3P1S83', xdoxslt:get_variable($_XDOCTX, '$v263'))"/>
   </xsl:template>
   <xsl:template name="L1R3P5S84">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR((NULL)),'NONE')-->
      <xsl:variable name="v264" select="string('')"/>
      <xsl:variable name="v265" select="string($v264)"/>
      <xsl:variable name="v266" select="xdoxslt:convert_case(string($v265), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string($v266))>5">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v267', substring(string($v266), 1,5))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v267', $v266)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R3P5S84', xdoxslt:get_variable($_XDOCTX, '$v267'))"/>
   </xsl:template>
   <xsl:template name="L1R3P1S85">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR((',')),'NONE')-->
      <xsl:variable name="v268" select="string(',')"/>
      <xsl:variable name="v269" select="xdoxslt:convert_case(string($v268), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string($v269))>1">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v270', substring(string($v269), 1,1))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v270', $v269)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R3P1S85', xdoxslt:get_variable($_XDOCTX, '$v270'))"/>
   </xsl:template>
   <xsl:template name="L1R3P5S86">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR((NULL)),'NONE')-->
      <xsl:variable name="v271" select="string('')"/>
      <xsl:variable name="v272" select="string($v271)"/>
      <xsl:variable name="v273" select="xdoxslt:convert_case(string($v272), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string($v273))>5">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v274', substring(string($v273), 1,5))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v274', $v273)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R3P5S86', xdoxslt:get_variable($_XDOCTX, '$v274'))"/>
   </xsl:template>
   <xsl:template name="L1R3P1S87">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR((',')),'NONE')-->
      <xsl:variable name="v275" select="string(',')"/>
      <xsl:variable name="v276" select="xdoxslt:convert_case(string($v275), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string($v276))>1">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v277', substring(string($v276), 1,1))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v277', $v276)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R3P1S87', xdoxslt:get_variable($_XDOCTX, '$v277'))"/>
   </xsl:template>
   <xsl:template name="L1R3P15S88">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR((AMT_CHAR)),'NONE')-->
      <xsl:variable name="v278" select="string(xdoxslt:normalize_string($_XDOCTX, .//AMT_CHAR))"/>
      <xsl:variable name="v279" select="xdoxslt:convert_case(string($v278), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string($v279))>15">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v280', substring(string($v279), 1,15))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v280', $v279)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R3P15S88', xdoxslt:get_variable($_XDOCTX, '$v280'))"/>
   </xsl:template>
   <xsl:template name="L1R3P1S89">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR((',')),'NONE')-->
      <xsl:variable name="v281" select="string(',')"/>
      <xsl:variable name="v282" select="xdoxslt:convert_case(string($v281), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string($v282))>1">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v283', substring(string($v282), 1,1))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v283', $v282)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R3P1S89', xdoxslt:get_variable($_XDOCTX, '$v283'))"/>
   </xsl:template>
   <xsl:template name="L1R3P5S90">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR((NULL)),'NONE')-->
      <xsl:variable name="v284" select="string('')"/>
      <xsl:variable name="v285" select="string($v284)"/>
      <xsl:variable name="v286" select="xdoxslt:convert_case(string($v285), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string($v286))>5">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v287', substring(string($v286), 1,5))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v287', $v286)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R3P5S90', xdoxslt:get_variable($_XDOCTX, '$v287'))"/>
   </xsl:template>
   <xsl:template name="L1R3P1S91">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR((',')),'NONE')-->
      <xsl:variable name="v288" select="string(',')"/>
      <xsl:variable name="v289" select="xdoxslt:convert_case(string($v288), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string($v289))>1">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v290', substring(string($v289), 1,1))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v290', $v289)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R3P1S91', xdoxslt:get_variable($_XDOCTX, '$v290'))"/>
   </xsl:template>
   <xsl:template name="L1R3P20S92">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR((NULL)),'NONE')-->
      <xsl:variable name="v291" select="string('')"/>
      <xsl:variable name="v292" select="string($v291)"/>
      <xsl:variable name="v293" select="xdoxslt:convert_case(string($v292), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string($v293))>20">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v294', substring(string($v293), 1,20))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v294', $v293)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R3P20S92', xdoxslt:get_variable($_XDOCTX, '$v294'))"/>
   </xsl:template>
   <xsl:template name="L1R3P1S93">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR((',')),'NONE')-->
      <xsl:variable name="v295" select="string(',')"/>
      <xsl:variable name="v296" select="xdoxslt:convert_case(string($v295), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string($v296))>1">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v297', substring(string($v296), 1,1))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v297', $v296)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R3P1S93', xdoxslt:get_variable($_XDOCTX, '$v297'))"/>
   </xsl:template>
   <xsl:template name="L1R3P5S94">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR((NULL)),'NONE')-->
      <xsl:variable name="v298" select="string('')"/>
      <xsl:variable name="v299" select="string($v298)"/>
      <xsl:variable name="v300" select="xdoxslt:convert_case(string($v299), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string($v300))>5">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v301', substring(string($v300), 1,5))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v301', $v300)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R3P5S94', xdoxslt:get_variable($_XDOCTX, '$v301'))"/>
   </xsl:template>
   <xsl:template name="L1R3P1S95">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR((',')),'NONE')-->
      <xsl:variable name="v302" select="string(',')"/>
      <xsl:variable name="v303" select="xdoxslt:convert_case(string($v302), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string($v303))>1">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v304', substring(string($v303), 1,1))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v304', $v303)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R3P1S95', xdoxslt:get_variable($_XDOCTX, '$v304'))"/>
   </xsl:template>
   <xsl:template name="L1R3P5S96">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR((NULL)),'NONE')-->
      <xsl:variable name="v305" select="string('')"/>
      <xsl:variable name="v306" select="string($v305)"/>
      <xsl:variable name="v307" select="xdoxslt:convert_case(string($v306), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string($v307))>5">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v308', substring(string($v307), 1,5))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v308', $v307)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R3P5S96', xdoxslt:get_variable($_XDOCTX, '$v308'))"/>
   </xsl:template>
   <xsl:template name="L1R3P1S97">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR((',')),'NONE')-->
      <xsl:variable name="v309" select="string(',')"/>
      <xsl:variable name="v310" select="xdoxslt:convert_case(string($v309), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string($v310))>1">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v311', substring(string($v310), 1,1))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v311', $v310)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R3P1S97', xdoxslt:get_variable($_XDOCTX, '$v311'))"/>
   </xsl:template>
   <xsl:template name="L1R3P5S98">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR((NULL)),'NONE')-->
      <xsl:variable name="v312" select="string('')"/>
      <xsl:variable name="v313" select="string($v312)"/>
      <xsl:variable name="v314" select="xdoxslt:convert_case(string($v313), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string($v314))>5">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v315', substring(string($v314), 1,5))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v315', $v314)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R3P5S98', xdoxslt:get_variable($_XDOCTX, '$v315'))"/>
   </xsl:template>
   <xsl:template name="L1R3P1S99">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR((',')),'NONE')-->
      <xsl:variable name="v316" select="string(',')"/>
      <xsl:variable name="v317" select="xdoxslt:convert_case(string($v316), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string($v317))>1">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v318', substring(string($v317), 1,1))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v318', $v317)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R3P1S99', xdoxslt:get_variable($_XDOCTX, '$v318'))"/>
   </xsl:template>
   <xsl:template name="L1R3P5S100">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR((NULL)),'NONE')-->
      <xsl:variable name="v319" select="string('')"/>
      <xsl:variable name="v320" select="string($v319)"/>
      <xsl:variable name="v321" select="xdoxslt:convert_case(string($v320), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string($v321))>5">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v322', substring(string($v321), 1,5))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v322', $v321)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R3P5S100', xdoxslt:get_variable($_XDOCTX, '$v322'))"/>
   </xsl:template>
   <xsl:template name="L1R3P1S101">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR((',')),'NONE')-->
      <xsl:variable name="v323" select="string(',')"/>
      <xsl:variable name="v324" select="xdoxslt:convert_case(string($v323), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string($v324))>1">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v325', substring(string($v324), 1,1))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v325', $v324)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R3P1S101', xdoxslt:get_variable($_XDOCTX, '$v325'))"/>
   </xsl:template>
   <xsl:template name="L1R3P1S102">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR(('N')),'NONE')-->
      <xsl:variable name="v326" select="string('N')"/>
      <xsl:variable name="v327" select="xdoxslt:convert_case(string($v326), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string($v327))>1">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v328', substring(string($v327), 1,1))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v328', $v327)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R3P1S102', xdoxslt:get_variable($_XDOCTX, '$v328'))"/>
   </xsl:template>
   <xsl:template name="L1R3P1S103">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR((',')),'NONE')-->
      <xsl:variable name="v329" select="string(',')"/>
      <xsl:variable name="v330" select="xdoxslt:convert_case(string($v329), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string($v330))>1">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v331', substring(string($v330), 1,1))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v331', $v330)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R3P1S103', xdoxslt:get_variable($_XDOCTX, '$v331'))"/>
   </xsl:template>
   <xsl:template name="L1R3P1S104">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR(('N')),'NONE')-->
      <xsl:variable name="v332" select="string('N')"/>
      <xsl:variable name="v333" select="xdoxslt:convert_case(string($v332), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string($v333))>1">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v334', substring(string($v333), 1,1))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v334', $v333)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R3P1S104', xdoxslt:get_variable($_XDOCTX, '$v334'))"/>
   </xsl:template>
   <xsl:template name="L1R3P1S105">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR((',')),'NONE')-->
      <xsl:variable name="v335" select="string(',')"/>
      <xsl:variable name="v336" select="xdoxslt:convert_case(string($v335), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string($v336))>1">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v337', substring(string($v336), 1,1))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v337', $v336)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R3P1S105', xdoxslt:get_variable($_XDOCTX, '$v337'))"/>
   </xsl:template>
   <xsl:template name="L1R3P5S106">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR((NULL)),'NONE')-->
      <xsl:variable name="v338" select="string('')"/>
      <xsl:variable name="v339" select="string($v338)"/>
      <xsl:variable name="v340" select="xdoxslt:convert_case(string($v339), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string($v340))>5">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v341', substring(string($v340), 1,5))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v341', $v340)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R3P5S106', xdoxslt:get_variable($_XDOCTX, '$v341'))"/>
   </xsl:template>
   <xsl:template name="L1R3P1S107">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR((',')),'NONE')-->
      <xsl:variable name="v342" select="string(',')"/>
      <xsl:variable name="v343" select="xdoxslt:convert_case(string($v342), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string($v343))>1">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v344', substring(string($v343), 1,1))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v344', $v343)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R3P1S107', xdoxslt:get_variable($_XDOCTX, '$v344'))"/>
   </xsl:template>
   <xsl:template name="L1R3P5S108">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR((NULL)),'NONE')-->
      <xsl:variable name="v345" select="string('')"/>
      <xsl:variable name="v346" select="string($v345)"/>
      <xsl:variable name="v347" select="xdoxslt:convert_case(string($v346), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string($v347))>5">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v348', substring(string($v347), 1,5))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v348', $v347)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R3P5S108', xdoxslt:get_variable($_XDOCTX, '$v348'))"/>
   </xsl:template>
   <xsl:template name="L1R3P1S109">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR((',')),'NONE')-->
      <xsl:variable name="v349" select="string(',')"/>
      <xsl:variable name="v350" select="xdoxslt:convert_case(string($v349), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string($v350))>1">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v351', substring(string($v350), 1,1))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v351', $v350)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R3P1S109', xdoxslt:get_variable($_XDOCTX, '$v351'))"/>
   </xsl:template>
   <xsl:template name="L1R3P5S110">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR((NULL)),'NONE')-->
      <xsl:variable name="v352" select="string('')"/>
      <xsl:variable name="v353" select="string($v352)"/>
      <xsl:variable name="v354" select="xdoxslt:convert_case(string($v353), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string($v354))>5">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v355', substring(string($v354), 1,5))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v355', $v354)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R3P5S110', xdoxslt:get_variable($_XDOCTX, '$v355'))"/>
   </xsl:template>
   <xsl:template name="L1R3P1S111">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR((',')),'NONE')-->
      <xsl:variable name="v356" select="string(',')"/>
      <xsl:variable name="v357" select="xdoxslt:convert_case(string($v356), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string($v357))>1">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v358', substring(string($v357), 1,1))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v358', $v357)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R3P1S111', xdoxslt:get_variable($_XDOCTX, '$v358'))"/>
   </xsl:template>
   <xsl:template name="L1R3P5S112">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR((NULL)),'NONE')-->
      <xsl:variable name="v359" select="string('')"/>
      <xsl:variable name="v360" select="string($v359)"/>
      <xsl:variable name="v361" select="xdoxslt:convert_case(string($v360), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string($v361))>5">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v362', substring(string($v361), 1,5))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v362', $v361)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R3P5S112', xdoxslt:get_variable($_XDOCTX, '$v362'))"/>
   </xsl:template>
   <xsl:template name="L1R3P1S113">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR((',')),'NONE')-->
      <xsl:variable name="v363" select="string(',')"/>
      <xsl:variable name="v364" select="xdoxslt:convert_case(string($v363), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string($v364))>1">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v365', substring(string($v364), 1,1))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v365', $v364)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R3P1S113', xdoxslt:get_variable($_XDOCTX, '$v365'))"/>
   </xsl:template>
   <xsl:template name="L1R3P5S114">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR((NULL)),'NONE')-->
      <xsl:variable name="v366" select="string('')"/>
      <xsl:variable name="v367" select="string($v366)"/>
      <xsl:variable name="v368" select="xdoxslt:convert_case(string($v367), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string($v368))>5">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v369', substring(string($v368), 1,5))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v369', $v368)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R3P5S114', xdoxslt:get_variable($_XDOCTX, '$v369'))"/>
   </xsl:template>
   <xsl:template name="L1R3P1S115">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR((',')),'NONE')-->
      <xsl:variable name="v370" select="string(',')"/>
      <xsl:variable name="v371" select="xdoxslt:convert_case(string($v370), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string($v371))>1">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v372', substring(string($v371), 1,1))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v372', $v371)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R3P1S115', xdoxslt:get_variable($_XDOCTX, '$v372'))"/>
   </xsl:template>
   <xsl:template name="L1R3P10S116">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR(('@SACH@')),'NONE')-->
      <xsl:variable name="v373" select="string('@SACH@')"/>
      <xsl:variable name="v374" select="xdoxslt:convert_case(string($v373), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string($v374))>10">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v375', substring(string($v374), 1,10))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v375', $v374)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R3P10S116', xdoxslt:get_variable($_XDOCTX, '$v375'))"/>
   </xsl:template>
   <xsl:template name="L1R3P1S117">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR((',')),'NONE')-->
      <xsl:variable name="v376" select="string(',')"/>
      <xsl:variable name="v377" select="xdoxslt:convert_case(string($v376), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string($v377))>1">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v378', substring(string($v377), 1,1))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v378', $v377)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R3P1S117', xdoxslt:get_variable($_XDOCTX, '$v378'))"/>
   </xsl:template>
   <xsl:template name="L1R3P20S118">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR((BENFICIARY_ID)),'NONE')-->
      <xsl:variable name="v379" select="string(xdoxslt:normalize_string($_XDOCTX, .//BENFICIARY_ID))"/>
      <xsl:variable name="v380" select="xdoxslt:convert_case(string($v379), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string($v380))>20">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v381', substring(string($v380), 1,20))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v381', $v380)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R3P20S118', xdoxslt:get_variable($_XDOCTX, '$v381'))"/>
   </xsl:template>
   <xsl:template name="L1R3P1S119">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR((',')),'NONE')-->
      <xsl:variable name="v382" select="string(',')"/>
      <xsl:variable name="v383" select="xdoxslt:convert_case(string($v382), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string($v383))>1">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v384', substring(string($v383), 1,1))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v384', $v383)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R3P1S119', xdoxslt:get_variable($_XDOCTX, '$v384'))"/>
   </xsl:template>
   <xsl:template name="L1R3P10S120">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR((CF_BASIC)),'NONE')-->
      <xsl:variable name="v385" select="string(xdoxslt:normalize_string($_XDOCTX, .//CF_BASIC))"/>
      <xsl:variable name="v386" select="xdoxslt:convert_case(string($v385), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string($v386))>10">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v387', substring(string($v386), 1,10))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v387', $v386)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R3P10S120', xdoxslt:get_variable($_XDOCTX, '$v387'))"/>
   </xsl:template>
   <xsl:template name="L1R3P1S121">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR((',')),'NONE')-->
      <xsl:variable name="v388" select="string(',')"/>
      <xsl:variable name="v389" select="xdoxslt:convert_case(string($v388), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string($v389))>1">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v390', substring(string($v389), 1,1))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v390', $v389)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R3P1S121', xdoxslt:get_variable($_XDOCTX, '$v390'))"/>
   </xsl:template>
   <xsl:template name="L1R3P10S122">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR((CF_HOUSE)),'NONE')-->
      <xsl:variable name="v391" select="string(xdoxslt:normalize_string($_XDOCTX, .//CF_HOUSE))"/>
      <xsl:variable name="v392" select="xdoxslt:convert_case(string($v391), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string($v392))>10">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v393', substring(string($v392), 1,10))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v393', $v392)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R3P10S122', xdoxslt:get_variable($_XDOCTX, '$v393'))"/>
   </xsl:template>
   <xsl:template name="L1R3P1S123">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR((',')),'NONE')-->
      <xsl:variable name="v394" select="string(',')"/>
      <xsl:variable name="v395" select="xdoxslt:convert_case(string($v394), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string($v395))>1">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v396', substring(string($v395), 1,1))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v396', $v395)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R3P1S123', xdoxslt:get_variable($_XDOCTX, '$v396'))"/>
   </xsl:template>
   <xsl:template name="L1R3P10S124">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR((CF_EARNINGS)),'NONE')-->
      <xsl:variable name="v397" select="string(xdoxslt:normalize_string($_XDOCTX, .//CF_EARNINGS))"/>
      <xsl:variable name="v398" select="xdoxslt:convert_case(string($v397), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string($v398))>10">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v399', substring(string($v398), 1,10))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v399', $v398)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R3P10S124', xdoxslt:get_variable($_XDOCTX, '$v399'))"/>
   </xsl:template>
   <xsl:template name="L1R3P1S125">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR((',')),'NONE')-->
      <xsl:variable name="v400" select="string(',')"/>
      <xsl:variable name="v401" select="xdoxslt:convert_case(string($v400), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string($v401))>1">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v402', substring(string($v401), 1,1))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v402', $v401)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R3P1S125', xdoxslt:get_variable($_XDOCTX, '$v402'))"/>
   </xsl:template>
   <xsl:template name="L1R3P10S126">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR((CF_DEDUCTIONS)),'NONE')-->
      <xsl:variable name="v403" select="string(xdoxslt:normalize_string($_XDOCTX, .//CF_DEDUCTIONS))"/>
      <xsl:variable name="v404" select="xdoxslt:convert_case(string($v403), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string($v404))>10">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v405', substring(string($v404), 1,10))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v405', $v404)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R3P10S126', xdoxslt:get_variable($_XDOCTX, '$v405'))"/>
   </xsl:template>
   <xsl:template name="L1R3P1S127">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR((',')),'NONE')-->
      <xsl:variable name="v406" select="string(',')"/>
      <xsl:variable name="v407" select="xdoxslt:convert_case(string($v406), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string($v407))>1">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v408', substring(string($v407), 1,1))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v408', $v407)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R3P1S127', xdoxslt:get_variable($_XDOCTX, '$v408'))"/>
   </xsl:template>
   <xsl:template name="L1R3P40S128">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: CONVERT_CASE(TO_CHAR((PAYMENT_NARRATION)),'NONE')-->
      <xsl:variable name="v409" select="string(xdoxslt:normalize_string($_XDOCTX, .//PAYMENT_NARRATION))"/>
      <xsl:variable name="v410" select="xdoxslt:convert_case(string($v409), string('NONE'))"/>
      <xsl:choose>
         <xsl:when test="string-length(string($v410))>40">
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v411', substring(string($v410), 1,40))"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'$v411', $v410)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R3P40S128', xdoxslt:get_variable($_XDOCTX, '$v411'))"/>
   </xsl:template>
   <xsl:template name="_RECORDBREAK">
      <!--Record Break-->
      <xsl:variable name="RECORDBREAK" select="concat(xdoxslt:chr(13), xdoxslt:chr(10))"/>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'RECORD_BREAK_LENGTH',string-length($RECORDBREAK))"/>
      <xsl:value-of select="string($RECORDBREAK)"/>
   </xsl:template>
   <xsl:template name="_BLOCK_FILLER">
      <!--Block Filler-->
      <xsl:param name="BLOCK_BEGIN"/>
      <xsl:param name="BLOCK_END"/>
      <xsl:param name="BLOCK_SPAN"/>
      <xsl:param name="BLOCK_FILL_CHAR"/>
      <xsl:param name="BLOCK_RECORD_LENGTH"/>
      <xsl:param name="RECORD_BREAK_LENGTH"/>
      <xsl:param name="BLOCK_RECORD_COUNTER"/>
      <xsl:if test="number(string-length($BLOCK_END) - string-length($BLOCK_BEGIN) - number($BLOCK_RECORD_COUNTER) * number($RECORD_BREAK_LENGTH)) mod (number($BLOCK_SPAN) * number($BLOCK_RECORD_LENGTH)) > 0">
         <xsl:value-of select="xdoxslt:set_variable($_XDOCTX,'MESSAGE', xdoxslt:fill_block($BLOCK_END, $BLOCK_FILL_CHAR, $BLOCK_RECORD_LENGTH))"/>
         <xsl:call-template name="_RECORDBREAK"/>
         <xsl:call-template name="_BLOCK_FILLER">
            <xsl:with-param name="BLOCK_BEGIN" select="string($BLOCK_BEGIN)"/>
            <xsl:with-param name="BLOCK_END" select="string(xdoxslt:get_variable($_XDOCTX, 'MESSAGE'))"/>
            <xsl:with-param name="BLOCK_SPAN" select="$BLOCK_SPAN"/>
            <xsl:with-param name="BLOCK_FILL_CHAR" select="$BLOCK_FILL_CHAR"/>
            <xsl:with-param name="BLOCK_RECORD_LENGTH" select="$BLOCK_RECORD_LENGTH"/>
            <xsl:with-param name="RECORD_BREAK_LENGTH" select="$RECORD_BREAK_LENGTH"/>
            <xsl:with-param name="BLOCK_RECORD_COUNTER" select="number($BLOCK_RECORD_COUNTER) + number(1)"/>
         </xsl:call-template>
      </xsl:if>
   </xsl:template>
</xsl:stylesheet>
